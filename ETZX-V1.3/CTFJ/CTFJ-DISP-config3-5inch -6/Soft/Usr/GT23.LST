C51 COMPILER V9.00   GT23                                                                  02/15/2019 10:08:08 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GT23
OBJECT MODULE PLACED IN GT23.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE GT23.C LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *            湖南一特电子股份有限公司
   4          *             All Rights Reserved
   5          *              
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称         :HZ.c
   9          *文件描述       :汉字识别、汉字字库驱动
  10          *创建人         :尹运同
  11          *创建日期       :2008-9-22
  12          *版本号           :V1.0
  13          *注释              :
  14          *----------------------------------------------------------
  15          *修改人       :
  16          *修改日期       :
  17          *版本号           :
  18          *注释         :
  19          ***********************************************************
  20          */
  21          #define _IN_GT23_
  22          #include "config.h"
  23          
  24          uint8 xdata  GT23_Rec_Data[130];
  25          uint8 xdata  GT23_Rec_Length=0;
  26          uint16  xdata  GT23_16LAddress;
  27          uint16  xdata  GT23_16HAddress;
  28          uint32  xdata  GT23_32Address; 
  29          
  30          
  31          void Get_GT23_Data(uint8 *word,uint8 word_size);
  32          uint8 Rec_GT23_Data(void);
  33          
  34          /*---------------------------------------------------------------------------
  35          函数原型: uint8 Rec_GT23_Data(void)
  36          参数说明: 无
  37          返 回 值: 字库芯片的返回值
  38          函数功能：获取字库芯片的点阵数据
  39          ----------------------------------------------------------------------------*/
  40          
  41           uint8 Rec_GT23_Data(void)
  42            {
  43   1        SPI_WriteByte(0xf0);
  44   1        return SPDAT;
  45   1        }
  46           /*-------------------------------------------------------------------------------------------------------
             -----------------------------
  47          函数原型: void Get_GT23_Data(uint8 highbyte,uint8 lowbyte,uint8 word_size)
  48          参数说明: highbyte--汉字国标码的高字节,lowbyte--汉字国标码的低字节,word_size--获取点阵汉字的字体大小 
  49          
  50          
  51          1为16*16点阵汉字或者8*16点阵ASCII
  52          2为12*24点阵ASCII
  53          3为32*32点阵汉字或者16*32点阵ASCII
  54          4为128*64点阵的数字
C51 COMPILER V9.00   GT23                                                                  02/15/2019 10:08:08 PAGE 2   

  55          
  56          
  57          返 回 值: 无
  58          函数功能：通过发送汉字的国标码来获取该汉字的点阵数据
  59          ----------------------------------------------------------------------------------------------------------
             -----------------------------*/
  60           void Get_GT23_Data(uint8 *word,uint8 word_size)
  61           {
  62   1        uint32  xdata address1,address2,address3,address4;
  63   1        uint8 xdata highbyte,lowbyte;
  64   1       
  65   1         highbyte=*word;
  66   1         word++;
  67   1         lowbyte= *word;
  68   1         if(highbyte<0x7f&&highbyte>=0x20) // 0x21~0x7e  是ASCII字符
  69   1         {
  70   2           switch(word_size)
  71   2           {
  72   3       
  73   3            case 1: //16*8
  74   3            default:
  75   3              address1 = (highbyte-0x20)*16; 
  76   3              address3 = address1+A8BaseAdd; 
  77   3              Read_Cont(GT23_Rec_Data,address3,16);
  78   3              break; 
  79   3              
  80   3            case 2: //24x12
  81   3              address1 = (highbyte-0x20)*48; 
  82   3              address3 = address1+A12BaseAdd; 
  83   3              Read_Cont(GT23_Rec_Data,address3,48);
  84   3              break;          
  85   3            
  86   3            case 3:  //32X16
  87   3              address1 = (highbyte-0x20)*64; 
  88   3              address3 = address1+A16BaseAdd; 
  89   3              Read_Cont(GT23_Rec_Data,address3,64);
  90   3              break;          
  91   3       /*    case 4:  //96x48
  92   3              if(highbyte<=0x39&&highbyte>=0x30)  //数字
  93   3             {
  94   3              address1 = (highbyte-0x21)*576; 
  95   3              address3 = address1+D48BaseAdd; 
  96   3              Read_Cont(GT23_Rec_Data,address3,576);         
  97   3             }
  98   3             break;*/          
  99   3           }     
 100   2         }
 101   1         else if(highbyte >=0x81&&highbyte<=0xfe&&lowbyte>=0x40&&lowbyte<=0xfe)    //GBK内码 32X32
 102   1         {
 103   2           switch(word_size)
 104   2           {
 105   3             case 1:
 106   3             default:
 107   3                address1 = (highbyte-0x81)*191; 
 108   3                address2 = (lowbyte-0x40)+address1;
 109   3                address3 = address2*32;         //每个汉字占用32字节
 110   3                address4 = address3+C16BaseAdd; 
 111   3                Read_Cont(GT23_Rec_Data,address4,32);
 112   3                break;
 113   3             case 3:
 114   3                address1 = (highbyte-0x81)*191; 
 115   3                address2 = (lowbyte-0x40)+address1;
C51 COMPILER V9.00   GT23                                                                  02/15/2019 10:08:08 PAGE 3   

 116   3                address3 = address2*128;          //每个汉字占用128字节
 117   3                address4 = address3+C32BaseAdd; 
 118   3                Read_Cont(GT23_Rec_Data,address4,128);
 119   3                break;        
 120   3           }
 121   2       
 122   2         }
 123   1      
 124   1       }
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    139      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
