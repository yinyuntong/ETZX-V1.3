C51 COMPILER V9.00   GT23                                                                  03/11/2019 16:49:23 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE GT23
OBJECT MODULE PLACED IN GT23.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE GT23.C LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *            湖南一特电子股份有限公司
   4          *             All Rights Reserved
   5          *              
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称         :HZ.c
   9          *文件描述       :汉字识别、汉字字库驱动
  10          *创建人         :尹运同
  11          *创建日期       :2008-9-22
  12          *版本号           :V1.0
  13          *注释              :
  14          *----------------------------------------------------------
  15          *修改人       :
  16          *修改日期       :
  17          *版本号           :
  18          *注释         :
  19          ***********************************************************
  20          */
  21          #define _IN_GT23_
  22          #include "config.h"
  23          
  24          uint8 xdata  GT23_Rec_Data[128];
  25          uint8 xdata  GT23_Rec_Length=0;
  26          uint16  xdata  GT23_16LAddress;
  27          uint16  xdata  GT23_16HAddress;
  28          uint32  xdata  GT23_32Address; 
  29          
  30          void Get_GT23_Data(uint8 *word,uint8 word_size);
  31          uint8 Rec_GT23_Data(void);
  32          
  33          /*---------------------------------------------------------------------------
  34          函数原型: uint8 Rec_GT23_Data(void)
  35          参数说明: 无
  36          返 回 值: 字库芯片的返回值
  37          函数功能：获取字库芯片的点阵数据
  38          ----------------------------------------------------------------------------*/
  39          
  40           uint8 Rec_GT23_Data(void)
  41            {
  42   1        SPI_WriteByte(0xf0);
  43   1        return SPDAT;
  44   1        }
  45           /*-------------------------------------------------------------------------------------------------------
             -----------------------------
  46          函数原型: void Get_GT23_Data(uint8 highbyte,uint8 lowbyte,uint8 word_size)
  47          参数说明: highbyte--汉字国标码的高字节,lowbyte--汉字国标码的低字节,word_size--获取点阵汉字的字体大小 
  48          
  49          
  50          
  51          1为16*16点阵汉字或者8*16点阵ASCII
  52          2为12*24点阵ASCII
  53          3为32*32点阵汉字或者16*32点阵ASCII
  54          4为96*48点阵的数字
C51 COMPILER V9.00   GT23                                                                  03/11/2019 16:49:23 PAGE 2   

  55          
  56          
  57          
  58          返 回 值: 无
  59          函数功能：通过发送汉字的国标码来获取该汉字的点阵数据
  60          ----------------------------------------------------------------------------------------------------------
             -----------------------------*/
  61           void Get_GT23_Data(uint8 *word,uint8 word_size)
  62           {
  63   1          uint32  xdata address1,address2,address3,address4;
  64   1           uint8 xdata highbyte,lowbyte;
  65   1         
  66   1           highbyte=*word;
  67   1           word++;
  68   1           lowbyte= *word;
  69   1           if(highbyte<0x7f&&highbyte>=0x20) // 0x21~0x7e  是ASCII字符
  70   1           {
  71   2             switch(word_size)
  72   2             {
  73   3         
  74   3              case 1: //16*8
  75   3              default:
  76   3                address1 = (highbyte-0x20)*16; 
  77   3                address3 = address1+A8BaseAdd; 
  78   3                Read_Cont(GT23_Rec_Data,address3,16);
  79   3                break; 
  80   3                
  81   3              case 2: //24x12
  82   3                address1 = (highbyte-0x20)*48; 
  83   3                address3 = address1+A12BaseAdd; 
  84   3                Read_Cont(GT23_Rec_Data,address3,48);
  85   3                break;          
  86   3              
  87   3              case 3:  //32X16
  88   3                address1 = (highbyte-0x20)*64; 
  89   3                address3 = address1+A16BaseAdd; 
  90   3                Read_Cont(GT23_Rec_Data,address3,64);
  91   3                break;  
  92   3                
  93   3              case 4: //96x48   //因GT23_REC_DATA存储空间有限，不能按此处理
  94   3              /*  if(highbyte<=0x39&&highbyte>=0x30)  //数字
  95   3               {
  96   3                Send_Data_Byte(0x97);
  97   3                address1 = (highbyte-0x21)*576; 
  98   3                address3 = address1+D48BaseAdd; 
  99   3                Read_Cont(GT23_Rec_Data,address3,576);         
 100   3               }*/
 101   3               break;          
 102   3             }     
 103   2           }
 104   1           else if(highbyte >=0x81&&highbyte<=0xfe&&lowbyte>=0x40&&lowbyte<=0xfe)    //GBK内码 32X32
 105   1           {
 106   2             switch(word_size)
 107   2             {
 108   3               case 1:
 109   3               default:
 110   3                  address1 = (highbyte-0x81)*191; 
 111   3                  address2 = (lowbyte-0x40)+address1;
 112   3                  address3 = address2*32;         //每个汉字占用32字节
 113   3                  address4 = address3+C16BaseAdd; 
 114   3                  Read_Cont(GT23_Rec_Data,address4,32);
 115   3                  break;
C51 COMPILER V9.00   GT23                                                                  03/11/2019 16:49:23 PAGE 3   

 116   3               case 3:
 117   3                  address1 = (highbyte-0x81)*191; 
 118   3                  address2 = (lowbyte-0x40)+address1;
 119   3                  address3 = address2*128;          //每个汉字占用128字节
 120   3                  address4 = address3+C32BaseAdd; 
 121   3                  Read_Cont(GT23_Rec_Data,address4,128);
 122   3                  break;        
 123   3             }
 124   2         
 125   2           }
 126   1           
 127   1      
 128   1       }
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    676    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    137      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
