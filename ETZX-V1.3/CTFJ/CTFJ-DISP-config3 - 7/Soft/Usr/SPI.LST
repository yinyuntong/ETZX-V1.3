C51 COMPILER V9.00   SPI                                                                   03/11/2019 16:49:24 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN SPI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE SPI.C LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *            湖南一特电子股份有限公司
   4          *             All Rights Reserved
   5          *              
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称         :SPI.c
   9          *文件描述       :SPI驱动程序
  10          *创建人         :尹运同
  11          *创建日期       :2008-9-22
  12          *版本号           :V1.0
  13          *注释                   
  14          *----------------------------------------------------------
  15          *修改人       :
  16          *修改日期       :
  17          *版本号           :
  18          *注释         :
  19          ***********************************************************
  20          */
  21          #define _IN_SPI_
  22          #include "config.h"
  23          
  24          void MCUMasterSPI(void);
  25          uint8 SPI_WriteByte(uint8 dat);
  26          void EPH1660MasterSPI(void);
  27          
  28          
  29           
  30          /**********************************************************
  31          *函数名称     :SpiInit
  32          *函数描述         :SPI接口初始化
  33          *输入参数       :
  34          *返回值       :   
  35          *全局变量     :
  36          *调用模块       :
  37          ***********************************************************
  38          *创建人           :尹运同
  39          *创建日期     :2008-9-22
  40          ***********************************************************
  41          *修改人         :
  42          *修改日期       :
  43          *注释           :
  44          **********************************************************/
  45          void MCUMasterSPI(void)
  46          {   
  47   1        //全部禁止
  48   1        SST25VF_CS = 1;
  49   1        GT23L_CS = 1;
  50   1        ADS7843_CS = 1;
  51   1        EPH1660_CS=0;
  52   1      
  53   1        SPCTL  &= ~SPEN;  //关SPI功能
  54   1        //SCLK   P1.7改为准双向口
  55   1        P1M0 &= 0x7f;
C51 COMPILER V9.00   SPI                                                                   03/11/2019 16:49:24 PAGE 2   

  56   1        P1M1 &= 0x7f;
  57   1        SCLK=1;
  58   1      
  59   1      #if CONFIG_CC1101==1
                while(!SCLK); //等待SCLK恢复为高
              #endif
  62   1        
  63   1      //  SPCTL = (SSIG|SPEN|MSTR|CPOL|CPHA|SPSPEEDLL);
  64   1        SPCTL = (SSIG|SPEN|MSTR/*|CPOL|CPHA*/|SPSPEEDLL);
  65   1      
  66   1        SPSTAT |= (SPIF|WCOL);
  67   1        IE2 &= ~ESPI; //关闭SPI中断
  68   1      }
  69          
  70          /**********************************************************
  71          *函数名称     :SpiInt
  72          *函数描述         :SPI中断服务程序
  73          *输入参数       :
  74          *返回值       :   
  75          *全局变量     :
  76          *调用模块       :
  77          ***********************************************************
  78          *创建人           :尹运同
  79          *创建日期     :2008-9-22
  80          ***********************************************************
  81          *修改人         :
  82          *修改日期       :
  83          *注释           :
  84          **********************************************************/
  85          
  86          /*void SpiInt(void) interrupt SPI_INTNO   //9号中断
  87          {
  88            SPSTAT |= SPIF;   //清标志
  89            IE2 &= ~ESPI;
  90          }*/
  91          
  92          /**********************************************************
  93          *函数名称     :SPI_WriteByte  
  94          *函数描述         :写一个字节
  95          *输入参数       :dat:要写入的数据
  96          *返回值       :     
  97          *全局变量     :
  98          *调用模块       :
  99          ***********************************************************
 100          *创建人           :尹运同
 101          *创建日期     :2008-9-22
 102          ***********************************************************
 103          *修改人         :
 104          *修改日期       :
 105          *注释           :
 106          **********************************************************/
 107          uint8 SPI_WriteByte(uint8 dat)
 108          {
 109   1        SPDAT=dat;            
 110   1          while((SPSTAT & SPIF) == 0x00);           //等待发送完成 
 111   1        SPSTAT  |=  SPIF;//SPI传输完成标志,当SPI中断使能时会触发SPI中断请求,需要用软件向此位写"1"来清0
 112   1        return(SPDAT);
 113   1      }
 114          
 115          
 116          
 117          void EPH1660MasterSPI(void) //EPH1660作主机
C51 COMPILER V9.00   SPI                                                                   03/11/2019 16:49:24 PAGE 3   

 118          {
 119   1        //全部禁止
 120   1        EPH1660_CS = 0; 
 121   1        SST25VF_CS = 1;
 122   1        GT23L_CS = 1;
 123   1        ADS7843_CS = 1;
 124   1        
 125   1        //WKICOM=1; //唤醒EPH1660   //推挽输出
 126   1      //  P3M0 |= 0x04; //0000  0100  P3.2M0=1
 127   1      //  P3M1 &= 0Xfb; //1111  1011   P3.2M0=0 
 128   1        WKICOM=1;
 129   1        
 130   1          
 131   1        //SPI_CMD高阻输入(悬浮)
 132   1      //  P5M0 &= 0xfb; //1111  1011  P5.2M0=0
 133   1      //  P5M1 |= 0X04; //0000  0100   P5.2M0=1
 134   1        SPI_CMD=1;    //悬浮状态也可用高电平输入
 135   1      
 136   1      
 137   1        //关闭SPI
 138   1        SPCTL  &= ~SPEN;  //关SPI功能
 139   1      
 140   1        //以下单片机为从机模式,EPH1660为主机模式
 141   1        SPCTL = (SSIG|SPEN/*|MSTR|CPOL*/|CPHA|SPSPEEDHH);//;
 142   1        MOSI=1;    //作输入
 143   1        SCLK =1;  //作输入
 144   1        SPSTAT |= (SPIF|WCOL);  //清中断  
 145   1      
 146   1        //SCLK准双向输入P1.7
 147   1      /*  P1M0 &= 0x7f; //0111 1111
 148   1        P1M1 &= 0x7f; //0111 1111
 149   1        SCLK =1;
 150   1      
 151   1        //MOSI准双向I输入 P1.5
 152   1        P1M0 &= 0xDf; //1101 1111
 153   1        P1M1 &= 0xDf; //1101 1111 
 154   1        MOSI =1;
 155   1          
 156   1        //推挽输出 P1.6
 157   1        P1M0 |= 0x40; //0100 0000
 158   1        P1M1 &= 0xbf; //1011 1111
 159   1        MISO=1;*/
 160   1        
 161   1        IE2 |= ESPI;      //打开SPI中断
 162   1        EPH1660_CS = 1;
 163   1      }
 164          
 165          
 166          
 167          void SPIInt(void) interrupt SPI_INTNO   //9号中断
 168          {
 169   1          EA=0;
 170   1        SPSTAT |= (SPIF|WCOL);  //清中断
 171   1        SPIRecData=SPDAT;
 172   1        if(MCUSndFlag==0) //接收过程中
 173   1        {
 174   2          if(VerifyingFlag==0)
 175   2          {
 176   3            if(SPIRecData==0x50) Num=0; //起始字节
 177   3            Rec_Data[Num]= SPIRecData;
 178   3            Num++;
 179   3            if(Num==3)  //刚收完长度字节
C51 COMPILER V9.00   SPI                                                                   03/11/2019 16:49:24 PAGE 4   

 180   3            {
 181   4              //if((Rec_Data[2]!=0x02)||(Rec_Data[2]!=0x04)) Num=0; //长度不符
 182   4              if(Rec_Data[2]>4)  Num=0; //长度不符
 183   4            }
 184   3            
 185   3            else if(Num>3)
 186   3            {if(Num==Rec_Data[2]+4) 
 187   4              {
 188   5                RecFramFinishFlag=1;
 189   5                Num=0;
 190   5              }
 191   4            }
 192   3      
 193   3          }
 194   2          else Num=0;
 195   2        
 196   2        }
 197   1        else
 198   1        {
 199   2          if(MCUSndDataLength==0) //有错误产生
 200   2          {
 201   3            goto MCUSndCmdFinish;   
 202   3          }
 203   2          else
 204   2          {
 205   3            MCUSndDataLength--;
 206   3            MCUSndDataPosition++;
 207   3            if(MCUSndDataLength)  //发送还未完成
 208   3            {
 209   4              SPDAT=MCUSndDataBuff[MCUSndDataPosition];
 210   4            }
 211   3            else    //整帧命令发送完成
 212   3            {
 213   4      MCUSndCmdFinish:
 214   4              MCUSndCmdFinishFlag=1;
 215   4              MCUSndFlag=0;
 216   4              WKICOM=1;
 217   4            }
 218   3          }
 219   2        }
 220   1      
 221   1      EA=1;
 222   1      }
 223          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
