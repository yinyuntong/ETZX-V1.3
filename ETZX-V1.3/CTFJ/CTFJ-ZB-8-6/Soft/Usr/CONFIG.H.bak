/*
************************Copyright(c)************************
*	  			   湖南熙旺达科技有限公司
*			       	All Rights Reserved
*			     		 
*
*-----------------------文件信息---------------------------
*文件名称     		:config.h
*文件描述    		:配置头文件
*创建人     		:陈卫国
*创建日期   		:2008-9-22
*版本号       		:V1.0
*注释	     		:					
*----------------------------------------------------------
*修改人  			:
*修改日期  			:
*版本号        		:
*注释	     		:
***********************************************************
*/
//系统头文件
#pragma REGPARMS	  
#include <intrins.h>
#include <absacc.h>
#include <stdio.h>
#include <string.h>
#include <math.h> 
#include "STC12C5410AD.H"
#define const code 
#ifndef TRUE
#define TRUE  1
#endif 
#ifndef FALSE
#define FALSE 0
#endif
//主线程命令
#define	BUS0_REC		0x10 								//总线0接收完成
#define BUS0_SND		0x20								//总线0发送完成
#define	BUS1_REC		0x30 								//总线0接收完成
#define BUS1_SND		0x40								//总线0发送完成
#define KEY_DOWN		0x50								//按键按下
#define KEY_UP			0x60								//按键弹起
#define	KEY_ALWAYS		0x70								//键常按下
#define TIMER_OUT		0x80								//超时命令	
//按键定义
#define	SET_KEY			0x00								//设置键
#define DEAL_KEY		0x01								//处理键
#define CALL_KEY		0x02								//呼叫键
#define NO_KEY			0xff								//无键按下	
//灯定义
sbit	LED_DEAL	= 	P1^6;								//处理灯
sbit	LED_GREEN	=	P1^7;								//绿色灯
#define	LED_OFF			0									//灯关闭
#define	LED_ON			1									//灯常亮
#define	LED_FLASH		2									//灯闪烁
#define HAND_LED_ON		0									//手柄灯亮
#define HAND_LED_OFF	1									//手柄灯灭
#define HAND_LED_FLASH	2									//手柄灯闪烁 
//控制引脚定义
sbit	CGB			= 	P1^0;								//SD控制脚
sbit	CBD			= 	P1^1;								//SA控制脚 
sbit	CTA			= 	P3^0;								//MIC的SA控制
sbit	CTD			=	P3^1;								//MIC的SD控制
sbit  	KDR 		= 	P1^5;								//485控制引脚 
sbit    PW			= 	P1^3;								//功放控制引脚
sbit	KV			=	P3^5;	
sbit	MUS			=	P3^7;								//提示音
#define Bin(b7,b6,b5,b4,b3,b2,b1,b0)	((b7<<7)|(b6<<6)|(b5<<5)|(b4<<4)|(b3<<3)|(b2<<2)|(b1<<1)|(b0<<0))
#define OpenCGB()		{P1M0 |= Bin(0,0,0,0,0,0,0,1);P1M1 |= Bin(0,0,0,0,0,0,0,1);CGB = 1;}	
#define CloseCGB()		{P1M0 &= (~Bin(0,0,0,0,0,0,0,1));P1M1 &= (~Bin(0,0,0,0,0,0,0,1));CGB = 1;}	
#define OpenCBD()		{P1M0 |= Bin(0,0,0,0,0,0,1,0);P1M1 |= Bin(0,0,0,0,0,0,1,0);CBD = 1;}	
#define CloseCBD()		{P1M0 &= (~Bin(0,0,0,0,0,0,1,0));P1M1 &= (~Bin(0,0,0,0,0,0,1,0));CBD = 1;}			 
//包含头文件
#include "OS_CFG.H"
#include "OS_CPU.H"
#include "..\os\OS.H"
#include "..\os\OS_Q.h"
#include "..\os\OS_SEM.h" 	
#include "SingleBus.h"
#include "Key.h"	
#include "IAP.h"	
//设备配置字定义
typedef struct
{
	uint8  	bySelfSecAddr;									//本机区地址
	uint8  	bySelfRoomAddr;									//本机房地址
	uint8  	bySelfBedAddr;									//本机床地址
	uint8  	byEnable1;										//允许标志1
	uint8  	byEnable2;										//允许标志2	
	uint8   byPrio;											//优先级
	uint8	byRingTime;										//振铃时间
	uint8	byTalkTime;										//通话时间
	uint8	byBroadTime;									//广播时间
	uint8	byListenDelay;									//接听延时时间
	uint8	byVolumStep;									//音量调节步长
	uint8	byRingVol;										//振铃提示音量
	uint8	byCH0TalkedVol;									//通道0被呼通话音量
	uint8	byCH1TalkedVol;									//通道1被呼通话音量
	uint8	byBroadVol;										//广播音量
	uint8	byNoteVol;										//提示音量
	uint8	byMusicVol;										//背景音乐音量
	uint8	byCH0TalkVol;									//通道0主动通话音量
	uint8	byCH1TalkVol;									//通道1主动通话音量
	uint8	bySelfRingVol;									//本机振铃提示音量
	uint8	byMaxVol;										//最大音量值
	uint8	byMinVol;										//最小音量值
	uint8	byReserve1;										//保留字节1
	uint8	byReserve2;										//保留字节2
	uint8	byReserve3;										//保留字节3
	uint8	bySerialNum1;									//序列号字节1(序列号最高位的一个字节)
	uint8	bySerialNum2;									//序列号字节2
	uint8	bySerialNum3;									//序列号字节3(序列号最低位的一个字节)
	uint8	byVersionHi;									//版本号高字节
	uint8	byVersionLo;									//版本号低字节 
} STEepromCfgData, *pSTEepromCfgData;
//地址结构体
typedef struct
{
	uint8  	bySecAddr;										//区地址
    uint8  	byRoomAddr;										//房地址  
    uint8  	byBedAddr;										//床地址
} STAddr, *pSTAddr;
//信息指示方地址结构体
typedef struct 
{	    
	STAddr	stAddr;											//指示方地址 
    uint8  	byCallCmd;										//指示的命令
} STIndicationData, *pSTIndicationData;	
//超时控制结构体
typedef struct
{
	uint8 				byTimerOutSet;						//一次超时时间设置(20ms单位)
	uint8 				byTimerOut;							//一次超时时间(20ms单位)
	uint8 				byTimerOutCount;					//允许超时次数 
} STTimerOut, *pSTTimerOut;	
//全局控制结构体
typedef struct
{
	uint8				byLedState;							//高4位为红灯状态,低4位为绿灯状态
	uint8				byLedFlashTime;						//灯闪烁时间控制
	uint8				byLedTimeSet;						//闪烁时间设置值
	uint16				uiShortType;						//短整型数据
	uint8				byChar1;							//字符型数据
	uint8*				pbyData;							//字符数据指针
	STBusFreq 			stBusDealFreq;						//总线数据处理存储器
	STTimerOut			stCH0TimerOut;						//设备当前状态超时控制结构体 
	STTimerOut			stCH1Timerout;						//通道1通话超时管理结构体	
	STIndicationData	stIndicationData;					//信息指示数据结构体
	STAddr				stCallAddr;							//主动呼叫方地址 	
	STEepromCfgData		stEepromCfgData;					//系统配置字	  		
} STLocalControl, *pSTLocalControl;
//5msPCA中断计时次数，Fosc=18.432MHz,分频系数为2 
#define	Fosc				18432000
#define Fbus				184320			
#define ISR_INC_COUNT		(Fosc/2/OS_TICKS_PER_SEC)
#define	IAP_ADDR			0x2800