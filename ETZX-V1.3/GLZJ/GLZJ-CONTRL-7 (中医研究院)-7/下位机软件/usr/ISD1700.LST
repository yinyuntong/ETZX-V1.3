C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE ISD1700
OBJECT MODULE PLACED IN ISD1700.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ISD1700.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *                                  湖南一特电子股份有限公司
   4          *                               All Rights Reserved
   5          *                                        
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称               :ISD1700.c
   9          *文件描述               :语音芯片驱动程序
  10          *创建人                 :尹运同
  11          *创建日期               :2009-4-6
  12          *版本号                 :V1.0
  13          *注释                   :                                       
  14          *----------------------------------------------------------
  15          *修改人                         :
  16          *修改日期                       :
  17          *版本号                 :
  18          *注释                   :
  19          ***********************************************************
  20          */
  21          #define _IN_ISD17XX_
  22          #include "config.h"
  23          
  24          #define StartSPI()              {SS = 0;_nop_();_nop_();_nop_();_nop_();_nop_();}                       //启动SPI
  25          #define EndSPI()                SS = 1;                 //停止SPI
  26          
  27          
  28          //语音数据定义
  29          code uint16 byVoiceDataAddr[83][2]= 
  30          {
  31                  0x0010,0x0013,                                          /*编号0(起始地址在前，结束地址在后):语音:0*/
  32                  0x0014,0x0017,                                          /*编号1(低位在前，高位在后):语音:1*/
  33                  0x0018,0x001b,                                          /*编号2(低位在前，高位在后):语音:2*/
  34                  0x001c,0x0020,                                          /*编号3(低位在前，高位在后):语音:3*/
  35                  0x0021,0x0025,                                          /*编号4(低位在前，高位在后):语音:4*/
  36                  0x0026,0x002a,                                          /*编号5(低位在前，高位在后):语音:5*/
  37                  0x002b,0x002e,                                          /*编号6(低位在前，高位在后):语音:6*/
  38                  0x002f,0x0033,                                          /*编号7(低位在前，高位在后):语音:7*/
  39                  0x0034,0x0037,                                          /*编号8(低位在前，高位在后):语音:8*/
  40                  0x0038,0x003c,                                          /*编号9(低位在前，高位在后):语音:9*/
  41                  
  42                  0x003d,0x0041,                                          /*编号10(低位在前，高位在后):语音:十*/
  43                  0x0042,0x0045,                                          /*编号11(低位在前，高位在后):语音:百*/
  44                  0x0046,0x004a,                                          /*编号12(低位在前，高位在后):语音:千*/
  45                  0x004b,0x004e,                                          /*编号13(低位在前，高位在后):语音:万*/
  46                  0x004f,0x0051,                                          /*编号14(低位在前，高位在后):语音:亿*/
  47          
  48                  0x0052,0x0055,                                          /*编号15(起始地址在前，结束地址在后):语音:A*/   
  49                  0x0056,0x0059,                                          /*编号16(起始地址在前，结束地址在后):语音:B*/   
  50                  0x005a,0x005d,                                          /*编号17(起始地址在前，结束地址在后):语音:C*/   
  51                  0x005e,0x0060,                                          /*编号18(起始地址在前，结束地址在后):语音:D*/   
  52                  0x0061,0x0064,                                          /*编号19(起始地址在前，结束地址在后):语音:E*/   
  53                  0x0065,0x0069,                                          /*编号20(起始地址在前，结束地址在后):语音:F*/
  54                  0x006a,0x006d,                                          /*编号21(起始地址在前，结束地址在后):语音:G*/
  55                  0x006e,0x0072,                                          /*编号22(起始地址在前，结束地址在后):语音:H*/
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 2   

  56                  0x0073,0x0075,                                          /*编号23(起始地址在前，结束地址在后):语音:I*/   
  57                  0x0076,0x0079,                                          /*编号24(起始地址在前，结束地址在后):语音:J*/   
  58                  0x007a,0x007d,                                          /*编号25(起始地址在前，结束地址在后):语音:K*/
  59                  0x007e,0x0081,                                          /*编号26(起始地址在前，结束地址在后):语音:L*/
  60                  0x0082,0x0085,                                          /*编号27(起始地址在前，结束地址在后):语音:M*/   
  61                  0x0086,0x0089,                                          /*编号28(起始地址在前，结束地址在后):语音:N*/
  62                  0x008a,0x008d,                                          /*编号29(起始地址在前，结束地址在后):语音:O*/   
  63                  0x008e,0x0091,                                          /*编号30(起始地址在前，结束地址在后):语音:P*/   
  64                  
  65                  0x0092,0x0095,                                          /*编号31(起始地址在前，结束地址在后):语音:Q*/
  66                  0x0096,0x009a,                                          /*编号32(起始地址在前，结束地址在后):语音:R*/
  67                  0x009b,0x009e,                                          /*编号33(起始地址在前，结束地址在后):语音:S*/
  68                  0x009f,0x00a2,                                          /*编号34(起始地址在前，结束地址在后):语音:T*/
  69                  0x00a3,0x00a6,                                          /*编号35(起始地址在前，结束地址在后):语音:U*/   
  70                  0x00a7,0x00aa,                                          /*编号36(起始地址在前，结束地址在后):语音:V*/   
  71                  0x00ab,0x00af,                                          /*编号37(起始地址在前，结束地址在后):语音:w*/
  72                  0x00b0,0x00b4,                                          /*编号38(起始地址在前，结束地址在后):语音:X*/
  73                  0x00b5,0x00b8,                                          /*编号39(起始地址在前，结束地址在后):语音:Y*/
  74                  0x00b9,0x00bc,                                          /*编号40(起始地址在前，结束地址在后):语音:Z*/
  75          
  76                  0x00bd,0x00c4,                                          /*编号41(起始地址在前，结束地址在后):语音:系统忙*/      
  77                  0x00c5,0x00ca,                                          /*编号42(起始地址在前，结束地址在后):语音:医护*/
  78                  0x00cb,0x00d1,                                          /*编号43(起始地址在前，结束地址在后):语音:病床*/
  79                  0x00d2,0x00d8,                                          /*编号44(起始地址在前，结束地址在后):语音:门口*/
  80                  0x00d9,0x00dc,                                          /*编号45(起始地址在前，结束地址在后):语音:年*/
  81                  0x00dd,0x00e0,                                          /*编号46(起始地址在前，结束地址在后):语音:月*/
  82                  0x00e1,0x00e4,                                          /*编号47(起始地址在前，结束地址在后):语音:日*/
  83                  0x00e5,0x00e9,                                          /*编号48(起始地址在前，结束地址在后):语音:时*/
  84                  0x00ea,0x00ed,                                          /*编号49(起始地址在前，结束地址在后):语音:分*/
  85                  0x00ee,0x00f2,                                          /*编号50(起始地址在前，结束地址在后):语音:秒*/
  86                  
  87                  0x00f3,0x00f7,                                          /*编号51(起始地址在前，结束地址在后):语音:点*/
  88                  0x00f8,0x00fd,                                          /*编号52(起始地址在前，结束地址在后):语音:星期*/
  89                  0x00fe,0x0107,                                          /*编号53(起始地址在前，结束地址在后):语音:一日清单*/
  90                  0x0108,0x010d,                                          /*编号54(起始地址在前，结束地址在后):语音:呼叫*/
  91                  0x010e,0x0116,                                          /*编号55(起始地址在前，结束地址在后):语音:请稍候*/
  92                  0x0117,0x011f,                                          /*编号56(起始地址在前，结束地址在后):语音:马上就来*/    
  93                  0x0120,0x012d,                                          /*编号57(起始地址在前，结束地址在后):语音:请求紧急增援*/                
  94                  0x012e,0x0133,                                          /*编号58(起始地址在前，结束地址在后):语音:短路*/                
  95                  0x0134,0x0138,                                          /*编号59(起始地址在前，结束地址在后):语音:断路*/                
  96                  0x0139,0x013e,                                          /*编号60(起始地址在前，结束地址在后):语音:主机*/
  97          
  98                  0x013f,0x0144,                                          /*编号61(起始地址在前，结束地址在后):语音:分机*/                
  99                  0x0145,0x014a,                                          /*编号62(起始地址在前，结束地址在后):语音:总线*/                
 100                  0x014b,0x0150,                                          /*编号63(起始地址在前，结束地址在后):语音:输液*/                
 101                  0x0151,0x0158,                                          /*编号64(起始地址在前，结束地址在后):语音:显示屏*/              
 102                  0x0159,0x015d,                                          /*编号65(起始地址在前，结束地址在后):语音:故障*/                
 103                  0x015e,0x0164,                                          /*编号66(起始地址在前，结束地址在后):语音:一览表*/              
 104                  0x0165,0x0169,                                          /*编号67(起始地址在前，结束地址在后):语音:供氧*/                
 105                  0x016a,0x016f,                                          /*编号68(起始地址在前，结束地址在后):语音:开始*/                
 106                  0x0170,0x0174,                                          /*编号69(起始地址在前，结束地址在后):语音:完毕*/                
 107                  0x0175,0x017a,                                          /*编号70(起始地址在前，结束地址在后):语音:床*/          
 108          
 109                  0x017b,0x017e,                                          /*编号71(起始地址在前，结束地址在后):语音:号*/          
 110                  0x017f,0x0184,                                          /*编号72(起始地址在前，结束地址在后):语音:房*/          
 111                  0x0185,0x018b,                                          /*编号73(起始地址在前，结束地址在后):语音:卫生间*/              
 112                  0x018c,0x0191,                                          /*编号74(起始地址在前，结束地址在后):语音:体温*/
 113                  0x0192,0x0198,                                          /*编号75(起始地址在前，结束地址在后):语音:脉搏*/
 114                  0x0199,0x019e,                                          /*编号76(起始地址在前，结束地址在后):语音:心率*/
 115                  0x019f,0x01a4,                                          /*编号77(起始地址在前，结束地址在后):语音:医嘱*/
 116                  0x01a5,0x01a9,                                          /*编号78(起始地址在前，结束地址在后):语音:医生*/        
 117                  0x01aa,0x01af,                                          /*编号79(起始地址在前，结束地址在后):语音:护士*/        
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 3   

 118                  0x01b0,0x01b5,                                          /*编号80(起始地址在前，结束地址在后):语音:已到*/
 119          
 120                  0x01b6,0x01bb,                                          /*编号81(起始地址在前，结束地址在后):语音:成功*/
 121                  0x01bc,0x01c0,                                          /*编号82(起始地址在前，结束地址在后):语音:失败*/
 122          };
 123          
 124          //语音中断消息结构体
 125          extern STLocalControl xdata stLocalControl;
 126          
 127          
 128          
 129          /*---------------------------------------------------------------------------
 130          函数原型: void Delayms(uint16 ms)
 131          参数说明: ms--需要延时的值
 132          返 回 值: 无
 133          函数功能：延时程序(对于18.432M晶振单指令周期延时1mS)
 134          ----------------------------------------------------------------------------*/
 135          void Delayms(uint16 ms)   
 136          {
 137   1         uint16 xdata i;
 138   1         for(;ms!=0;ms--)
 139   1                      for(i=900;i!=0;i--);
 140   1      }
 141          
 142          
 143          
 144          /**********************************************************
 145          *函数名称                       :SPIInit        
 146          *函数描述               :SPI初始化
 147          *输入参数               :
 148          *返回值                         :
 149          *全局变量                       :
 150          *调用模块                       :
 151          ***********************************************************
 152          *创建人                 :尹运同
 153          *创建日期                       :2009-4-6
 154          ***********************************************************
 155          *修改人                         :
 156          *修改日期               :
 157          *注释                   :
 158          **********************************************************/
 159          void SPIInit(void)
 160          {       
 161   1              //工作模式设置,主动模式,低位在前,Fosc/4,起始下降沿采样  
 162   1              SPCTL   |=      (SSIG|SPEN|DORD|MSTR|CPOL|CPHA|SPSPEEDHH);
 163   1      }
 164          /**********************************************************
 165          
 166          
 167          /**********************************************************
 168          
 169          *函数名称                       :SPITransferByte        
 170          *函数描述               :SPI发送一个字节,接收返回一个字节
 171          *输入参数               :byData:待写入的数据
 172          *返回值                         :读到的数据
 173          *全局变量                       :
 174          *调用模块                       :
 175          ***********************************************************
 176          *创建人                 :尹运同
 177          *创建日期                       :2009-4-6
 178          ***********************************************************
 179          *修改人                         :
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 4   

 180          *修改日期               :
 181          *注释                   :
 182          **********************************************************/
 183          uint8 SPITransferByte(uint8 byData)
 184          {                               
 185   1      #if STC12C5A==true                              
 186   1              SPDAT = byData;                                                                         //发送数据
 187   1              while((SPSTAT & SPIF) == 0x00);                                         //等待发送完成 
 188   1              SPSTAT  |=      SPIF;//SPI传输完成标志,当SPI中断使能时会触发SPI中断请求,需要用软件向此位写"1"来清0
 189   1              return(SPDAT);                                                          //返回数据   
 190   1      #else
                      byData=byData;
                      return(true);
              #endif                                                                                          //返回数据      
 194   1      }
 195          /**********************************************************
 196          *函数名称                       :ISDReset       
 197          *函数描述               :ISD1730复位
 198          *输入参数               :
 199          *返回值                         :
 200          *全局变量                       :
 201          *调用模块                       :
 202          ***********************************************************
 203          *创建人                 :尹运同
 204          *创建日期                       :2009-4-6
 205          ***********************************************************
 206          *修改人                         :
 207          *修改日期               :
 208          *注释                   :
 209          **********************************************************/
 210          void ISDReset(void)
 211          {
 212   1              StartSPI();
 213   1              SPITransferByte(RESET);
 214   1              SPITransferByte(0x00);
 215   1              EndSPI();
 216   1      }
 217          /**********************************************************
 218          *函数名称                       :ISD17xxStop    
 219          *函数描述               :ISD1730停止当前操作
 220          *输入参数               :
 221          *返回值                         :
 222          *全局变量                       :
 223          *调用模块                       :
 224          ***********************************************************
 225          *创建人                 :尹运同
 226          *创建日期                       :2009-4-6
 227          ***********************************************************
 228          *修改人                         :
 229          *修改日期               :
 230          *注释                   :
 231          **********************************************************/
 232          void ISD17xxStop(void)
 233          {
 234   1              StartSPI();
 235   1              SPITransferByte(STOP);
 236   1              SPITransferByte(0x00);
 237   1              EndSPI();       
 238   1      }
 239          /**********************************************************
 240          *函数名称                       :ISDClrInt      
 241          *函数描述               :ISD1730清除中断
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 5   

 242          *输入参数               :
 243          *返回值                         :
 244          *全局变量                       :
 245          *调用模块                       :
 246          ***********************************************************
 247          *创建人                 :尹运同
 248          *创建日期                       :2009-4-6
 249          ***********************************************************
 250          *修改人                         :
 251          *修改日期               :
 252          *注释                   :
 253          **********************************************************/
 254          void ISDClrInt(void)
 255          {
 256   1              StartSPI();
 257   1              SPITransferByte(CLR_INT);
 258   1              SPITransferByte(0x00);
 259   1              EndSPI();
 260   1      }
 261          /**********************************************************
 262          *函数名称                       :PowerUp        
 263          *函数描述               :ISD1730上电
 264          *输入参数               :
 265          *返回值                         :
 266          *全局变量                       :
 267          *调用模块                       :
 268          ***********************************************************
 269          *创建人                 :尹运同
 270          *创建日期                       :2009-4-6
 271          ***********************************************************
 272          *修改人                         :
 273          *修改日期               :
 274          *注释                   :
 275          **********************************************************/
 276          void PowerUp(void)
 277          {               
 278   1              StartSPI();
 279   1              SPITransferByte(PU);    
 280   1              SPITransferByte(00);    
 281   1              EndSPI();
 282   1              OSWait(K_TMO,20);       //延时100ms
 283   1              
 284   1      }
 285          
 286          /**********************************************************
 287          *函数名称                       :ISDRdStatus    
 288          *函数描述               :读取状态
 289          *输入参数               :
 290          *返回值                         :
 291          *全局变量                       :
 292          *调用模块                       :
 293          ***********************************************************
 294          *创建人                 :尹运同
 295          *创建日期                       :2009-4-6
 296          ***********************************************************
 297          *修改人                         :
 298          *修改日期               :
 299          *注释                   :
 300          **********************************************************/
 301          void ISDRdStatus(void)
 302          {               
 303   1              StartSPI();
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 6   

 304   1              SPITransferByte(RD_STATUS);
 305   1              SPITransferByte(0X00);
 306   1              SPITransferByte(0X00);
 307   1              EndSPI();       
 308   1      }
 309          /**********************************************************
 310          *函数名称                       :ISDRdAPC
 311          *函数描述               :读取APC
 312          *输入参数               :
 313          *返回值                         :
 314          *全局变量                       :
 315          *调用模块                       :
 316          ***********************************************************
 317          *创建人                 :尹运同
 318          *创建日期                       :2009-4-6
 319          ***********************************************************
 320          *修改人                         :
 321          *修改日期               :
 322          *注释                   :
 323          **********************************************************/
 324          void ISDRdAPC(void)
 325          {               
 326   1              StartSPI();
 327   1              SPITransferByte(RD_APC);
 328   1              SPITransferByte(0X00);
 329   1              SPITransferByte(0X00);
 330   1              SPITransferByte(0X00);  
 331   1              EndSPI();
 332   1      }
 333          
 334          /**********************************************************
 335          *函数名称                       :WrAPC2 
 336          *函数描述               :写入配置字到APC
 337          *输入参数               :byVoiceValue:音量大小
 338          *返回值                         :
 339          *全局变量                       :
 340          *调用模块                       :
 341          ***********************************************************
 342          *创建人                 :尹运同
 343          *创建日期                       :2009-4-6
 344          ***********************************************************
 345          *修改人                         :
 346          *修改日期               :
 347          *注释                   :
 348          **********************************************************/
 349          void WrAPC2(uint8 byVoiceValue)
 350          {
 351   1              byVoiceValue &= 0x07;   
 352   1      //      StartSPI();
 353   1      //      SPITransferByte(WR_APC);
 354   1      //      SPITransferByte(0xf8|byVoiceValue);
 355   1      //      SPITransferByte(0x0d);
 356   1      //      EndSPI();
 357   1      }
 358          /**********************************************************
 359          *函数名称                       :ISDCheckMem    
 360          *函数描述               :ISD1730检查存储器
 361          *输入参数               :
 362          *返回值                         :
 363          *全局变量                       :
 364          *调用模块                       :
 365          ***********************************************************
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 7   

 366          *创建人                 :尹运同
 367          *创建日期                       :2009-4-6
 368          ***********************************************************
 369          *修改人                         :
 370          *修改日期               :
 371          *注释                   :
 372          **********************************************************/
 373          void ISDCheckMem(void)
 374          {
 375   1              StartSPI();
 376   1              SPITransferByte(CHECK_MEM);
 377   1              SPITransferByte(0x00);
 378   1              EndSPI();
 379   1      }
 380          /**********************************************************
 381          *函数名称                       :ISD17xxInit    
 382          *函数描述               :ISD17xx初始化
 383          *输入参数               :
 384          *返回值                         :
 385          *全局变量                       :
 386          *调用模块                       :
 387          ***********************************************************
 388          *创建人                 :尹运同
 389          *创建日期                       :2009-4-6
 390          ***********************************************************
 391          *修改人                         :
 392          *修改日期               :
 393          *注释                   :
 394          **********************************************************/
 395          void ISD17xxInit(void)
 396          {               
 397   1              //复位语音芯片ISD17XX
 398   1              ISD_RST = 0;
 399   1              OSWait(K_TMO, OS_TICKS_PER_SEC/10);             
 400   1              ISD_RST = 1;
 401   1              OSWait(K_TMO, OS_TICKS_PER_SEC/10);     
 402   1              //初始化中断引脚
 403   1              INT6 = 1;
 404   1      
 405   1              SPIInit();      
 406   1              PowerUp();
 407   1              WrAPC2(0x00);                                                   //音量调到最大          
 408   1      }
 409          /**********************************************************
 410          *函数名称                       :CheckISDBusy   
 411          *函数描述               :检查ISD1730是否忙,超时重启
 412          *输入参数               :
 413          *返回值                         :
 414          *全局变量                       :
 415          *调用模块                       :
 416          ***********************************************************
 417          *创建人                 :尹运同
 418          *创建日期                       :2009-4-6
 419          ***********************************************************
 420          *修改人                         :
 421          *修改日期               :
 422          *注释                   :
 423          **********************************************************/
 424          void CheckISDBusy(void)
 425          {
 426   1              uint8 byTemp;
 427   1              uint16 uiTimerOut = 2000;
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 8   

 428   1      
 429   1              while(uiTimerOut--)
 430   1              {
 431   2                      StartSPI();
 432   2                      SPITransferByte(RD_STATUS);
 433   2                      SPITransferByte(0x00);
 434   2                      byTemp = SPITransferByte(0x00);
 435   2                      EndSPI();
 436   2                      if((byTemp & 0x01))
 437   2                      {
 438   3                              return;
 439   3                      }
 440   2              }
 441   1              //等待超时次数到
 442   1              ISD17xxInit();
 443   1      }
 444          /**********************************************************
 445          *函数名称                       :CheckCmdErr    
 446          *函数描述               :检查ISD1730命令正确性
 447          *输入参数               :
 448          *返回值                         :true:命令正确,false:命令错误
 449          *全局变量                       :
 450          *调用模块                       :
 451          ***********************************************************
 452          *创建人                 :尹运同
 453          *创建日期                       :2009-4-6
 454          ***********************************************************
 455          *修改人                         :
 456          *修改日期               :
 457          *注释                   :
 458          **********************************************************/
 459          uint8 CheckCmdErr(void)
 460          {
 461   1              uint8 byTemp;           
 462   1              
 463   1              StartSPI();
 464   1              byTemp = SPITransferByte(RD_STATUS);
 465   1              SPITransferByte(0x00);
 466   1              SPITransferByte(0x00);
 467   1              EndSPI();       
 468   1              if(byTemp & 0x01)
 469   1              {
 470   2                      return(false);
 471   2              }
 472   1              return(true);
 473   1      }
 474          /**********************************************************
 475          *函数名称                       :SetPlay        
 476          *函数描述               :播放语音
 477          *输入参数               :byPos:播放语音位置
 478          *返回值                         :
 479          *全局变量                       :
 480          *调用模块                       :
 481          ***********************************************************
 482          *创建人                 :尹运同
 483          *创建日期                       :2009-4-6
 484          ***********************************************************
 485          *修改人                         :
 486          *修改日期               :
 487          *注释                   :
 488          **********************************************************/
 489          void SetPlay(uint8 byPos)
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 9   

 490          {
 491   1              uint16 byAddrStart;
 492   1              uint16 byAddrEnd;
 493   1              uint16 uiTimerOut = 2000;
 494   1              
 495   1              byAddrStart =byVoiceDataAddr[byPos][0];
 496   1              byAddrEnd = byVoiceDataAddr[byPos][1];
 497   1              
 498   1              CheckISDBusy();
 499   1              while(uiTimerOut--)
 500   1              {
 501   2                      ISDClrInt();
 502   2                      if(true == CheckCmdErr())
 503   2                      {
 504   3                              break;
 505   3                      }
 506   2              }       
 507   1              if(uiTimerOut==0) //一直都出错
 508   1              {
 509   2                      ISD17xxInit();
 510   2                      return;
 511   2              }
 512   1      
 513   1              uiTimerOut = 2000;      
 514   1              CheckISDBusy();
 515   1              while(uiTimerOut--)
 516   1              {
 517   2                      ISDCheckMem();
 518   2                      if(true == CheckCmdErr())
 519   2                      {
 520   3                              break;
 521   3                      }
 522   2              }
 523   1              if(uiTimerOut==0) //一直都出错
 524   1              {
 525   2                      ISD17xxInit();
 526   2                      return;
 527   2              }
 528   1      
 529   1              uiTimerOut = 2000;      
 530   1              CheckISDBusy();
 531   1              while(uiTimerOut--)
 532   1              {
 533   2                      ISDClrInt();
 534   2                      if(true == CheckCmdErr())
 535   2                      {
 536   3                              break;
 537   3                      }
 538   2              }
 539   1              if(uiTimerOut==0) //一直都出错
 540   1              {
 541   2                      ISD17xxInit();
 542   2                      return;
 543   2              }       
 544   1              
 545   1              uiTimerOut = 2000;      
 546   1              CheckISDBusy();
 547   1              while(uiTimerOut--)
 548   1              {
 549   2                      StartSPI();
 550   2                      SPITransferByte(SET_PLAY);
 551   2                      SPITransferByte(0x00);
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 10  

 552   2                      SPITransferByte((uint8)byAddrStart);
 553   2                      SPITransferByte(byAddrStart>>8);
 554   2                      SPITransferByte((uint8)byAddrEnd);
 555   2                      SPITransferByte(byAddrEnd>>8);
 556   2                      SPITransferByte(0x00);
 557   2                      EndSPI();       
 558   2                      if(true == CheckCmdErr())
 559   2                      {
 560   3                              return;
 561   3                      }
 562   2              }
 563   1              //等待超时次数到
 564   1              ISD17xxInit();
 565   1      }
 566          /**********************************************************
 567          *函数名称                       :VoicePlayTask  
 568          *函数描述               :语音芯片放音任务
 569          *输入参数               :
 570          *返回值                         :
 571          *全局变量                       :
 572          *调用模块                       :
 573          ***********************************************************
 574          *创建人                 :尹运同
 575          *创建日期                       :2009-4-6
 576          ***********************************************************
 577          *修改人                         :
 578          *修改日期               :
 579          *注释                   :
 580          **********************************************************/
 581          void VoicePlayTask(void)
 582          {       
 583   1              static uint8 byPos;
 584   1              static uint16 uiTimerOut;
 585   1              static STBusFreq stBus0Freq;    
 586   1              
 587   1      
 588   1          
 589   1          //初始化语音芯片和状态值
 590   1          stBus0Freq.bySndSecAddr = 0x00;
 591   1              stBus0Freq.bySndRoomAddr = 0x00;
 592   1              stBus0Freq.bySndBedAddr = 0x00;
 593   1              stBus0Freq.byCmd = CMD_STOP_INDICATION;
 594   1              stBus0Freq.byRecSecAddr = 0x00;
 595   1              stBus0Freq.byRecRoomAddr = 0x00;
 596   1              stBus0Freq.byRecBedAddr = 0x00;
 597   1              
 598   1      //      SPIInit();      
 599   1      //      ISD17xxInit();
 600   1      
 601   1      /*RePlay:
 602   1              for(byPos=0;byPos<82;byPos++)
 603   1              {
 604   1                      SetPlay(byPos);
 605   1                      CheckISDBusy(); //等待RDY置1:表示地址已被锁存           
 606   1                      Delayms(1000);
 607   1              }
 608   1      
 609   1              goto  RePlay;*/
 610   1      
 611   1              
 612   1                      
 613   1              while(true)
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 11  

 614   1              {
 615   2      VoicePlayStart:
 616   2                      BeginCritical();
 617   2                      if(0x00 == (stLocalControl.stVoicePlay.byISD1700State&ISD_REPLAY))
 618   2                      {       //没有需要播放的语音
 619   3                              EndCritical();                  
 620   3                              OSWait(K_TMO, 2);
 621   3                              if(!INT6)
 622   3                              {       //该引脚一直为低,语音芯片出现问题,重新初始化                            
 623   4                                      ISD17xxInit();
 624   4      //                              continue;
 625   4                              }                       
 626   3                              continue;                       
 627   3                      }
 628   2                      //有语音需要播放
 629   2                      stLocalControl.stVoicePlay.byISD1700State &= ~ISD_REPLAY;
 630   2                      stLocalControl.stVoicePlay.byISD1700State |= ISD_PLAYING;
 631   2                      EndCritical();          
 632   2                      //有需要播放的语音
 633   2                      stLocalControl.stVoicePlay.byVoicePosition = 0x00;
 634   2                      while(true)
 635   2                      {
 636   3      PlayRestart:
 637   3                              if(!INT6)
 638   3                              {       //该引脚一直为低,语音芯片出现问题,重新初始化                            
 639   4                                      ISD17xxInit();
 640   4                                      continue;
 641   4                              }
 642   3                              BeginCritical();
 643   3                              byPos = stLocalControl.stVoicePlay.byVoiceData[stLocalControl.stVoicePlay.byVoicePosition];
 644   3                              EndCritical();  
 645   3                              SetPlay(byPos);
 646   3                              CheckISDBusy(); //等待RDY置1:表示地址已被锁存
 647   3      
 648   3                              uiTimerOut = 2500;
 649   3                              while(INT6)             //正在语音报号等待完成
 650   3                              {
 651   4                                      OSWait(K_TMO, 1);                                       
 652   4                                      BeginCritical();
 653   4                                      byPos = stLocalControl.stVoicePlay.byISD1700State;
 654   4                                      EndCritical();
 655   4                                      if(0x00 == (byPos&ISD_PLAYING))
 656   4                                      {       //语音播放停止
 657   5                                              ISD17xxStop();
 658   5                                              CheckISDBusy();
 659   5      //                                      while(INT6);
 660   5                                              ISDClrInt();
 661   5                                              goto VoicePlayStart;
 662   5                                      }
 663   4                                      if(--uiTimerOut == 0x00)
 664   4                                      {       //超时时间到了,语音芯片出现问题,重新初始化
 665   5                                              ISD17xxInit();
 666   5                                              goto PlayEnd;
 667   5                                      }
 668   4                              }
 669   3      PlayEnd:
 670   3                              ISDClrInt();
 671   3                              //本次播音完成
 672   3                              BeginCritical();
 673   3                              stLocalControl.stVoicePlay.byVoicePosition = 
 674   3                                      (stLocalControl.stVoicePlay.byVoicePosition + 1) % stLocalControl.stVoicePlay.byVoiceSize;
 675   3                              if(0x00 == stLocalControl.stVoicePlay.byVoicePosition)
C51 COMPILER V8.08   ISD1700                                                               06/09/2011 15:00:37 PAGE 12  

 676   3                              {       //报号一次完成了
 677   4                                      if(stLocalControl.uiDevState & FLAG_WAIT_LISTEN)
 678   4                                      {       //等待接听过程中,是振铃提示音,直接退出报号
 679   5                                              EndCritical();
 680   5                                              goto VoicePlayStart;
 681   5                                      }
 682   4                                      else if(stLocalControl.stVoicePlay.byISD1700State & ISD_TIME_OVER)
 683   4                                      {       //是指示报号过程中,规定报号时间到了
 684   5                                              if(stLocalControl.uiDevState & FLAG_STOP_EXIST)
 685   5                                              {       //已经有停止呼叫指令在发送中了
 686   6                                                      stLocalControl.stVoicePlay.byISD1700State &= ~ISD_TIME_OVER;
 687   6                                                      EndCritical();
 688   6                                                      goto VoicePlayStart;
 689   6                                              }
 690   5                                              //没有正在发送的,发送停止指令                   
 691   5                                              stBus0Freq.byCmd = CMD_STOP_INDICATION;                         
 692   5                                              if(true == Bus0DirOutputData(&(stBus0Freq.bySndSecAddr)))
 693   5                                              {
 694   6                                                      stLocalControl.uiDevState |= FLAG_STOP_EXIST;
 695   6                                                      stLocalControl.stVoicePlay.byISD1700State &= ~ISD_TIME_OVER;
 696   6                                                      EndCritical();
 697   6                                                      goto VoicePlayStart;
 698   6                                              }
 699   5                                      }
 700   4                                      else    //时间没到,反复重新报号
 701   4                                      {
 702   5                                              stLocalControl.stVoicePlay.byVoicePosition = 0x00;
 703   5                                              EndCritical();
 704   5                                              uiTimerOut=30;  //间隔3秒
 705   5                                              for(uiTimerOut;uiTimerOut>0;uiTimerOut--)
 706   5                                              {
 707   6                                                      OSWait(K_TMO,5); //100ms
 708   6                                                      if(stLocalControl.stVoicePlay.byISD1700State & ISD_REPLAY)      goto VoicePlayStart;
 709   6                                              }
 710   5                                              goto PlayRestart;
 711   5                                      }
 712   4                                      
 713   4                              }
 714   3      
 715   3                              EndCritical();
 716   3                      }
 717   2              }
 718   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    952    ----
   CONSTANT SIZE    =    332    ----
   XDATA SIZE       =     10       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
