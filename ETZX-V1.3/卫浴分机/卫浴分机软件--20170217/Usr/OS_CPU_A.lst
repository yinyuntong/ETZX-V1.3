A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN .\OS_CPU_A.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ..\Target\OS_CPU_A.ASM SET(SMALL) DEBUG PRINT(.\OS_CPU_A.lst) OBJECT(.\OS_
                      CPU_A.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;******************************************************************************************
                             ***************
                       2     ;**                                            Small RTOS 51 
                       3     ;**                                   The Real-Time Kernel For Keil c51
                       4     ;**
                       5     ;**                                  (c) Copyright 2002-2003, chenmingji
                       6     ;**                                           All Rights Reserved
                       7     ;**
                       8     ;**                                                  V1.12.1
                       9     ;**
                      10     ;**
                      11     ;**--------------------文件信息------------------------------------------------------------
                             ---------------
                      12     ;**文   件   名: OS_CPU_A.ASM
                      13     ;**创   建   人: 陈明计
                      14     ;**版        本: V1.12.1
                      15     ;**最后修改日期:  2002年2月5日
                      16     ;**描　      述:  Small RTOS 51 与CPU(8051系列)相关的汇编程序
                      17     ;**---------------------历史版本信息-------------------------------------------------------
                             ---------------
                      18     ;** 创建人: 陈明计
                      19     ;** 版  本:V0.50
                      20     ;** 日　期: 2002年2月22日
                      21     ;** 描　述: 原始版本
                      22     ;**
                      23     ;**----------------------------------------------------------------------------------------
                             --------------
                      24     ;** 修改人: 陈明计
                      25     ;** 版  本: V1.00
                      26     ;** 日　期: 2002年6月10日
                      27     ;** 描　述: 支持软的非屏蔽中断
                      28     ;**
                      29     ;**----------------------------------------------------------------------------------------
                             --------------
                      30     ;** 修改人: 陈明计
                      31     ;** 版  本: V1.10.3
                      32     ;** 日　期: 2002年9月16日
                      33     ;** 描　述: 修改了LoadCtx代码使之执行更快，代码更小
                      34     ;**         
                      35     ;**----------------------------------------------------------------------------------------
                             --------------
                      36     ;** 修改人: 陈明计
                      37     ;** 版  本: V1.10.4
                      38     ;** 日　期: 2002年10月5日
                      39     ;** 描　述: 将OS_CPU_A.ASM和OS_CPU_A_task16.ASM合并
                      40     ;**
                      41     ;**----------------------------------------------------------------------------------------
                             --------------
                      42     ;** 修改人: 陈明计
                      43     ;** 版  本: V1.11.0
                      44     ;** 日　期: 2002年12月2日
                      45     ;** 描　述: 根据新版本要求使任务堆栈包含Os_Enter_Sum，使优先级最低
                      46     ;**         的任务只保存少量寄存器；增加注释
                      47     ;**----------------------------------------------------------------------------------------
                             --------------
                      48     ;** 修改人: 陈明计
                      49     ;** 版  本: V1.12.0
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     2

                      50     ;** 日　期: 2002年12月30日
                      51     ;** 描　述: 根据新版本要求更改少量代码
                      52     ;**----------------------------------------------------------------------------------------
                             --------------
                      53     ;** 修改人: 陈明计
                      54     ;** 版  本: V1.12.1
                      55     ;** 日　期: 2002年2月5日
                      56     ;** 描　述: 更正LoadCtx中OS_MAX_TASKS为8或16的bug
                      57     ;**---------------------当前版本修订-------------------------------------------------------
                             ----------------
                      58     ;** 修改人:
                      59     ;** 日　期:
                      60     ;** 描　述:
                      61     ;**
                      62     ;**----------------------------------------------------------------------------------------
                             --------------
                      63     ;******************************************************************************************
                             **************/
                      64     ;#include "OS_CPU.H"
                +1    65     
                +1    66     
                +1    67     
                +1    68     
                +1    69     
                +1    70     
                +1    71     
                +1    72     
                +1    73     
                +1    74     
                +1    75     
                +1    76     
                +1    77     
                +1    78     
                +1    79     
                +1    80     
                +1    81     
                +1    82     
                +1    83     
                +1    84     
                +1    85     
                +1    86     
                +1    87     
                +1    88     
                +1    89     
                +1    90     
                +1    91     
                +1    92     
                +1    93     
                +1    94     
                +1    95     
                +1    96     
                +1    97     
                +1    98     
                +1    99     
                +1   100     
                +1   101     
                +1   102     
                +1   103     
                +1   104     
                +1   105     
                +1   106     
                +1   107     
                +1   108     
                +1   109     
                +1   110     
                +1   111     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     3

                +1   112     
                +1   113     
                +1   114     
                +1   115     
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1   163     
                +1   164     
                +1   165     
                +1   166     
                +1   167     SET_EA   MACRO
                +1   168                  SETB     EA
                +1   169              ENDM
                +1   170              
                +1   171     
                +1   172     
                +1   173     
                +1   174     
                +1   175     
                     176     
                     177     ;#include "OS_CFG.H"
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     4

                +1   178     
                +1   179     
                +1   180     
                +1   181     
                +1   182     
                +1   183     
                +1   184     
                +1   185     
                +1   186     
                +1   187     
                +1   188     
                +1   189     
                +1   190     
                +1   191     
                +1   192     
                +1   193     
                +1   194     
                +1   195     
                +1   196     
                +1   197     
                +1   198     
                +1   199     
                +1   200     
                +1   201     
                +1   202     
                +1   203     
                +1   204     
                +1   205     
                +1   206     
                +1   207     
                +1   208     
                +1   209     
                +1   210     
                +1   211     
                +1   212     
                +1   213     
                +1   214     
                +1   215     
                +1   216     
                +1   217     
                +1   218     
                +1   219     
                +1   220     
                +1   221     
                +1   222     
                +1   223     
                +1   224     
                +1   225     
                +1   226     
                +1   227     
                +1   228     
                +1   229     
                +1   230     
                +1   231     
                +1   232     
                +1   233     
                +1   234     
                +1   235     
                +1   236     
                +1   237     
                +1   238                                                 
                +1   239     
                +1   240     
                +1   241     
                +1   242     
                +1   243     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     5

                +1   244     
                +1   245     
                +1   246     
                +1   247     
                +1   248     
                +1   249     
                +1   250                                                 
                +1   251     
                +1   252     
                +1   253     
                +1   254     
                +1   255     
                +1   256     
                +1   257     
                +1   258     
                +1   259     
                +1   260     
                +1   261     
                +1   262     
                +1           
                +1           
                +1   265     
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1   272     
                +1   273     
                +1   274     
                     275     
                     276     
                     277     
                             
                             
                     280     
                     281     
                     282     
                     283     
                     284         NAME    OS_CPU_A_ASM
                     285     
                     286     ?PR?OSCtxSw?OS_CPU_A                     SEGMENT CODE
                     287     ?PR?OSIntCtxSw?OS_CPU_A                  SEGMENT CODE
                     288     ?PR?LoadCtx?OS_CPU_A                     SEGMENT CODE
                     289     ?PR?C_OSCtxSw?OS_CPU_A                   SEGMENT CODE 
                     290     ?PR?_OSTaskStkInit?OS_CPU_A              SEGMENT CODE 
                     291     
                     292     
                     293         EXTRN   CODE (OSMapTbl)
                     294         EXTRN   DATA (OSFastSwap)
                     295         EXTRN   DATA (OSTaskID)
                     296         EXTRN   DATA (OSNextTaskID)
                     297         EXTRN   DATA (OSTsakStackBotton)
                     298         EXTRN   DATA (Os_Enter_Sum)
                     299     IF 0  <> 0
                                 EXTRN   IDATA (Sp2)
                             ENDIF
                     302     IF 0 > 0
                                 EXTRN   DATA (?C_XBP)
                             ENDIF
                     305     
                     306         PUBLIC  _OSTaskStkInit
                     307         PUBLIC  LoadCtx
                     308         PUBLIC  OSIntCtxSw
                     309         PUBLIC  OSCtxSw
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     6

                     310         PUBLIC  STACK
                     311         PUBLIC  C_OSCtxSw
                     312     
                     313     ;****************************************************************************************
                     314     ;?STACK SEGMENT IDATA
                     315     
                     316     ?STACK      SEGMENT   IDATA
                     317     
----                 318             RSEG    ?STACK
0000                 319     STACK:                                          ;堆栈
0000                 320             DS  1
                     321     
                     322     ; /****************************************************************************************
                             *****************
                     323     ; ** 函数名称: OSTaskStkInit
                     324     ; ** 功能描述: 任务堆栈初始化
                     325     ; ** 输　入: 无
                     326     ; ** 输　出 : 无
                     327     ; ** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     328     ; ** 调用模块: LoadCtx
                     329     ; ** 
                     330     ; ** 作　者: 陈明计
                     331     ; ** 日　期: 2002年2月22日
                     332     ; **---------------------------------------------------------------------------------------
                             ----------------
                     333     ; ** 修改人:
                     334     ; ** 日　期:
                     335     ; **---------------------------------------------------------------------------------------
                             ----------------
                     336     ; *****************************************************************************************
                             ***************/
                     337      
----                 338         RSEG  ?PR?_OSTaskStkInit?OS_CPU_A
0000                 339     _OSTaskStkInit:
                     340         USING   0
                     341     ;---- Variable 'cp?147' assigned to Register 'R0' ----
                     342     ;---- Variable 'cp?146' assigned to Register 'R1' ----
                     343     ;---- Variable 'i?145' assigned to Register 'R2' ----
                     344     ;---- Variable 'TaskID?144' assigned to Register 'R3' ----
                     345     ;---- Variable 'ptos?143' assigned to Register 'R4/R5' ----
                     346         
0000 C006            347         PUSH    AR6
0002 C007            348         PUSH    AR7
                     349     ; {
                     350     
                     351     ;         OSFastSwap[0] &= ~OSMapTbl[TaskID];
0004 EB              352         MOV     A,R3
0005 900000   F      353         MOV     DPTR,#OSMapTbl
0008 93              354         MOVC    A,@A+DPTR
0009 4200     F      355         ORL     OSFastSwap,A
                             
                             
                                 
                                 
                                 
                                 
                                 
                             
                             
                                 
                                 
                                 
                             
                                 
                             
                             
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     7

                             
                             
                                 
                                 
                                 
                                 
                             
                             
                             
                     381     
                     382     ;     if (TaskID < OSRunningTaskID())
000B EB              383         MOV     A,R3
000C C3              384         CLR     C
000D 9500     F      385         SUBB    A,OSTaskID
000F 502E            386         JNC     StkInit5
                     387     ;     {
                     388     ;         i =  OSRunningTaskID() - TaskID;
0011 C3              389         CLR     C
0012 E500     F      390         MOV     A,OSTaskID
0014 9B              391         SUBB    A,R3
0015 FA              392         MOV     R2,A
                     393     ;         cp = (uint8 idata *)(&(OSTsakStackBotton[TaskID + 1]));
0016 7400     F      394         MOV     A,#LOW (OSTsakStackBotton+01H)
0018 2B              395         ADD     A,R3
0019 F9              396         MOV     R1,A
001A                 397     StkInit8:
                     398     ;         do
                     399     ;         {
                     400     ;             *cp += SP_ADD_BYTE;
001A 7403            401         MOV     A,#3
001C 27              402         ADD     A,@R1
001D F7              403         MOV     @R1,A
                     404     ;             cp++;
001E 09              405         INC     R1
                     406     ;         } while (--i != 0);
001F DAF9            407         DJNZ    R2,StkInit8
                     408     
                     409     ;         cp1 = (uint8 idata *)SP;
0021 A881            410         MOV     R0,SP
                     411     ;         SP = SP + SP_ADD_BYTE;
                     412                 ; SOURCE LINE # 172
0023 7403            413         MOV     A,#3
0025 2581            414         ADD     A,SP
0027 F581            415         MOV     SP,A
                     416     ;         i = SP - (uint8)(OSTsakStackBotton[TaskID + 1]) + 1;
0029 7400     F      417         MOV     A,#LOW (OSTsakStackBotton+01H)
002B 2B              418         ADD     A,R3
002C F9              419         MOV     R1,A
002D 8707            420         MOV     AR7,@R1
002F C3              421         CLR     C
0030 E581            422         MOV     A,SP
0032 9F              423         SUBB    A,R7
0033 FA              424         MOV     R2,A
0034 0A              425         INC     R2
                     426     ;         cp = (uint8 idata *)SP;
0035 A981            427         MOV     R1,SP
0037                 428     StkInit11:
                     429     ;         do
                     430     ;         {
                     431     ;             *cp-- = *cp1--;
0037 E6              432         MOV     A,@R0
0038 F7              433         MOV     @R1,A
0039 18              434         DEC     R0
003A 19              435         DEC     R1
                     436     ;         } while (--i != 0);
003B DAFA            437         DJNZ    R2,StkInit11
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     8

                     438     ;     }
003D 802C            439         SJMP    StkInit12
003F                 440     StkInit5:
                     441     ;     else
                     442     ;     {
                     443     ;         cp1 = (uint8 idata *)(&(OSTsakStackBotton[OSRunningTaskID() + 1]));
003F 7400     F      444         MOV     A,#LOW (OSTsakStackBotton+01H)
0041 2500     F      445         ADD     A,OSTaskID
0043 F8              446         MOV     R0,A
                     447     ;         i = TaskID - OSRunningTaskID();
0044 C3              448         CLR     C
0045 EB              449         MOV     A,R3
0046 9500     F      450         SUBB    A,OSTaskID
0048 FA              451         MOV     R2,A
0049                 452     StkInit15:
                     453     ;         do
                     454     ;         {
                     455     ;             *cp1 -= SP_ADD_BYTE;
0049 74FD            456         MOV     A,#(-3)
004B 26              457         ADD     A,@R0
004C F6              458         MOV     @R0,A
                     459     ;             cp1++;
004D 08              460         INC     R0
                     461     ;         } while (--i != 0);
004E DAF9            462         DJNZ    R2,StkInit15
                     463     ;         
                     464     ;         cp = OSTsakStackBotton[OSRunningTaskID() + 1];
0050 7400     F      465         MOV     A,#LOW (OSTsakStackBotton+01H)
0052 2500     F      466         ADD     A,OSTaskID
0054 F8              467         MOV     R0,A
0055 E6              468         MOV     A,@R0
0056 F9              469         MOV     R1,A
                     470     ;         i = OSTsakStackBotton[TaskID] - cp - SP_ADD_BYTE;
0057 E9              471         MOV     A,R1
0058 24FD            472         ADD     A,#(-3)
005A FF              473         MOV     R7,A
                     474     
005B 7400     F      475         MOV     A,#LOW (OSTsakStackBotton)
005D 2B              476         ADD     A,R3
005E F8              477         MOV     R0,A
005F E6              478         MOV     A,@R0
0060 C3              479         CLR     C
0061 9F              480         SUBB    A,R7
0062 FA              481         MOV     R2,A
                     482     ;         cp1 = cp - SP_ADD_BYTE;
0063 A807            483         MOV     R0,AR7
0065                 484     StkInit18:
                     485     ;         do
                     486     ;         {
                     487     ;             *cp1++ = *cp++;
0065 E7              488         MOV     A,@R1
0066 F6              489         MOV     @R0,A
0067 08              490         INC     R0
0068 09              491         INC     R1
                     492     ;         } while (--i != 0);
0069 DAFA            493         DJNZ    R2,StkInit18
                     494     ;     }
006B                 495     StkInit12:
                     496     ;     cp = OSTsakStackBotton[TaskID];
006B 7400     F      497         MOV     A,#LOW (OSTsakStackBotton)
006D 2B              498         ADD     A,R3
006E F8              499         MOV     R0,A
006F E6              500         MOV     A,@R0
0070 F9              501         MOV     R1,A
                     502     ;     *cp++ = (uint16)task % 256;
0071 D0E0            503         pop     ACC
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE     9

0073 F7              504         MOV     @R1,A
0074 09              505         INC     R1
                     506     ;     *cp++ = (uint16)task / 256;
0075 D0E0            507         pop     ACC
0077 F7              508         MOV     @R1,A
0078 09              509         INC     R1
                     510     
                             
                                 
                                 
                             
                                 
                                 
                             
                     518     ;     *cp = 0;
0079 E4              519         CLR     A
007A F7              520         MOV     @R1,A
                     521     ; }
007B 22              522         RET     
                     523     
                     524     ;/*****************************************************************************************
                             ****************
                     525     ;** 函数名称: LoadCtx
                     526     ;** 功能描述: 任务环境恢复函数
                     527     ;** 输　入: OSTaskID,OSFastSwap
                     528     ;** 输　出 : 无
                     529     ;** 全局变量: 无
                     530     ;** 调用模块: 无
                     531     ;** 
                     532     ;** 作　者: 陈明计
                     533     ;** 日　期: 2002年2月22日
                     534     ;**----------------------------------------------------------------------------------------
                             ---------------
                     535     ;** 修　改: 陈明计
                     536     ;** 日　期: 2002年12月2日
                     537     ;**----------------------------------------------------------------------------------------
                             ---------------
                     538     ;** 修　改: 陈明计
                     539     ;** 日　期: 2003年2月5日
                     540     ;**----------------------------------------------------------------------------------------
                             ---------------
                     541     ;** 修　改:
                     542     ;** 日　期:
                     543     ;**----------------------------------------------------------------------------------------
                             ---------------
                     544     ;******************************************************************************************
                             **************/
                     545     
----                 546         RSEG  ?PR?LoadCtx?OS_CPU_A
0000                 547     LoadCtx:
                     548         USING   0
                     549        
0000 D000     F      550         POP     Os_Enter_Sum            ;恢复关中断计数器
                     551     
                     552     
                                 
                                 
                             
                     556     
                     557                                         ;判断是否需要恢复所有寄存器
0002 E500     F      558         MOV     A,OSTaskID
0004 B40502          559         CJNE    A,#5,LoadCtx_0
0007 8022            560         SJMP    LoadCtx_2
0009                 561     LoadCtx_0:
0009 900000   F      562         MOV     DPTR,#OSMapTbl
                     563     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    10

000C 93              564         MOVC    A,@A+DPTR
000D 5500     F      565         ANL     A,OSFastSwap
                             
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                             
000F 701A            577         JNZ     LoadCtx_2
                     578                                         ;恢复寄存器
0011 D007            579         POP     7
0013 D006            580         POP     6
0015 D005            581         POP     5
0017 D004            582         POP     4
0019 D003            583         POP     3
001B D002            584         POP     2
001D D001            585         POP     1
001F D000            586         POP     0
0021 D0D0            587         POP     PSW
0023 D082            588         POP     DPL
0025 D083            589         POP     DPH
0027 D0F0            590         POP     B
0029 D0E0            591         POP     ACC
002B                 592     LoadCtx_2:
                     593                                         ;判断是否需要开中断
002B 0500     F      594         INC     Os_Enter_Sum
002D D50002   F      595         djnz    Os_Enter_Sum,LoadCtx_3
                     596         SET_EA                          ;开中断
0032                 598     LoadCtx_3:
0032 22              599         RET
                     600     
                     601     
                     602     ;/*****************************************************************************************
                             ****************
                     603     ;** 函数名称: OSCtxSw
                     604     ;** 功能描述: 任务主动放弃CPU环境保存函数
                     605     ;** 输　入: OSTaskID
                     606     ;** 输　出 : 无
                     607     ;** 全局变量: OSFastSwap
                     608     ;** 调用模块: 无
                     609     ;** 
                     610     ;** 作　者: 陈明计
                     611     ;** 日　期: 2002年2月22日
                     612     ;**----------------------------------------------------------------------------------------
                             ---------------
                     613     ;** 修　改:
                     614     ;** 日　期:
                     615     ;**----------------------------------------------------------------------------------------
                             ---------------
                     616     ;******************************************************************************************
                             **************/
----                 617         RSEG  ?PR?OSCtxSw?OS_CPU_A
0000                 618     OSCtxSw:
                     619         USING   0
                     620     
                     621     
                                 
                                 
                             
                     625     
0000 C000     F      626         PUSH    Os_Enter_Sum            ;保存关中断计数器
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    11

                     627                                         ;设置标志：任务再次恢复运行时不必恢复所有寄存器
0002 900000   F      628         MOV     DPTR,#OSMapTbl
0005 E500     F      629         MOV     A,OSTaskID
                     630     
0007 93              631         MOVC    A,@A+DPTR
0008 4200     F      632         ORL     OSFastSwap,A
                             
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                                 
                             
000A 020000   F      645         LJMP    C_OSCtxSw
                     646     ;****************************************************************************************
                     647     ;/*****************************************************************************************
                             ****************
                     648     ;** 函数名称: C_OSCtxSw
                     649     ;** 功能描述: 堆栈处理函数
                     650     ;** 输　入: 无
                     651     ;** 输　出 : 无
                     652     ;** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     653     ;** 调用模块: LoadCtx
                     654     ;** 
                     655     ;** 作　者: 陈明计
                     656     ;** 日　期: 2002年2月22日
                     657     ;**----------------------------------------------------------------------------------------
                             ---------------
                     658     ;** 修　改: 陈明计
                     659     ;** 日　期: 2002年12月2日
                     660     ;**----------------------------------------------------------------------------------------
                             ---------------
                     661     ;** 修　改:
                     662     ;** 日　期:
                     663     ;**----------------------------------------------------------------------------------------
                             ---------------
                     664     ;******************************************************************************************
                             **************/
----                 665         RSEG  ?PR?C_OSCtxSw?OS_CPU_A
0000                 666     C_OSCtxSw:
                     667     
0000 AA81            668         mov     r2,sp
                     669         
                     670     ;     cp1 = (unsigned char idata *)SP +1;
0002 A881            671         MOV     R0,SP
                     672     
                     673     IF 0  <> 0
                                 mov     sp,#(Sp2-1)             ;堆栈指向临时空间，允许“软非屏蔽中断”
                             ENDIF
                     676     
0004 08              677         INC     R0
                     678     ;     temp = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0005 7400     F      679         MOV     A,#LOW (OSTsakStackBotton+01H)
0007 2500     F      680         ADD     A,OSNextTaskID
0009 F9              681         MOV     R1,A
000A E7              682         MOV     A,@R1
000B FF              683         MOV     R7,A
                     684     ;     cp2 = OSTsakStackBotton[OSTaskID+1];
000C 7400     F      685         MOV     A,#LOW (OSTsakStackBotton+01H)
000E 2500     F      686         ADD     A,OSTaskID
0010 F9              687         MOV     R1,A
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    12

0011 E7              688         MOV     A,@R1
0012 F9              689         MOV     R1,A
                     690     ;     if( OSNextTaskID > OSTaskID)
0013 E500     F      691         MOV     A,OSNextTaskID
0015 D3              692         SETB    C
0016 9500     F      693         SUBB    A,OSTaskID
0018 4033            694         JC      ?C0001
                     695     ;     {
                     696     ;         while(cp2 != (unsigned char idata *)temp)
                     697     ;         {
                     698     ;             *cp1++ = *cp2++;
                     699     ;         }
001A EF              700         MOV     A,R7
001B C3              701         CLR     C
001C 99              702         SUBB    A,R1
001D FE              703         MOV     R6,A
001E                 704     ?C0002:
001E E7              705         MOV     A,@R1
001F F6              706         MOV     @R0,A
0020 08              707         INC     R0
0021 09              708         INC     R1
0022 DEFA            709         DJNZ    R6,?C0002
0024                 710     ?C0003:
                     711     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
0024 7400     F      712         MOV     A,#LOW (OSTsakStackBotton+1)
0026 2500     F      713         ADD     A,OSTaskID
0028 F9              714         MOV     R1,A
0029 E7              715         MOV     A,@R1
002A D3              716         SETB    C
                     717         ;SUBB    A,sp
002B 9A              718         SUBB    A,r2
002C FF              719         MOV     R7,A
                     720     ;         SP = (unsigned char )cp1 - 1;
002D 18              721         DEC     R0;
002E 8881            722         MOV     SP,R0
                     723     ;         for(i = OSTaskID+1;i < OSNextTaskID+1; i++)
                     724     ;         {
                     725     ;             OSTsakStackBotton[i] -= temp;
                     726     ;         }
0030 E500     F      727         MOV     A,OSNextTaskID
0032 C3              728         CLR     C
0033 9500     F      729         SUBB    A,OSTaskID
0035 FE              730         MOV     R6,A
0036 600F            731         JZ      ?C0005
                     732     
0038 7400     F      733         MOV     A,#LOW (OSTsakStackBotton)
003A 2500     F      734         ADD     A,OSTaskID
003C F9              735         MOV     R1,A    
003D EF              736         MOV     A,R7
003E F4              737         CPL     A
003F 04              738         INC     A
0040 FF              739         MOV     R7,A
0041                 740     ?C0004:
0041 09              741         INC     R1
0042 EF              742         MOV     A,R7
0043 27              743         ADD     A,@R1    
0044 F7              744         MOV     @R1,A
0045 DEFA            745         DJNZ    R6,?C0004
0047                 746     ?C0005:
                     747     ;         OSTaskID = OSNextTaskID;
0047 850000   F      748         MOV     OSTaskID,OSNextTaskID
                     749     ;         LoadCtx();    
004A 020000   F      750         LJMP    LoadCtx
                     751     ;     }
004D                 752     ?C0001:
                     753     ; 
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    13

                     754     ;     if( OSNextTaskID != OSTaskID)
004D E500     F      755         MOV     A,OSNextTaskID
004F 6500     F      756         XRL     A,OSTaskID
0051 6036            757         JZ      ?C000r
                     758     ;     {
                     759     ;          cp2--;
                     760     ;          cp1--;
                     761     ;         while(cp2 != (unsigned char idata *)temp)
                     762     ;         {
                     763     ;             *cp2-- = *cp1--;
                     764     ;         }
                     765         ;MOV     A,R7
                     766         ;CLR     C
                     767         ;SUBB    A,R1
                     768         ;MOV     R6,A
0053 E8              769         mov     a,r0
0054 C3              770         clr     c
0055 9F              771         subb    a,r7
0056 FE              772         mov     r6,a
0057                 773     ?C0008:
0057 18              774         DEC     R0
0058 19              775         DEC     R1
0059 E6              776         MOV     A,@R0
005A F7              777         MOV     @R1,A
005B DEFA            778         DJNZ    R6,?C0008
005D                 779     ?C0009:
                     780     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
005D 7400     F      781         MOV     A,#LOW (OSTsakStackBotton+01H)
005F 2500     F      782         ADD     A,OSTaskID
0061 F9              783         MOV     R1,A
0062 E7              784         MOV     A,@R1
0063 D3              785         SETB    C
                     786         ;SUBB    A,SP
0064 9A              787         SUBB    A,r2
0065 FF              788         MOV     R7,A
                     789     ;         SP = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0066 7400     F      790         MOV     A,#LOW (OSTsakStackBotton+01H)
0068 2500     F      791         ADD     A,OSNextTaskID
006A F9              792         MOV     R1,A
006B E7              793         MOV     A,@R1
006C F581            794         MOV     SP,A
                     795     ;         for(i = OSNextTaskID+1;i < OSTaskID+1; i++)
                     796     ;         {
                     797     ;             OSTsakStackBotton[i] += temp;
                     798     ;         }
                     799     
006E E500     F      800         MOV     A,OSTaskID
0070 C3              801         CLR     C
0071 9500     F      802         SUBB    A,OSNextTaskID
0073 600C            803         JZ      ?C0011
                     804     
0075 FE              805         MOV     R6,A
0076 7400     F      806         MOV     A,#LOW (OSTsakStackBotton)
0078 2500     F      807         ADD     A,OSNextTaskID
007A F9              808         MOV     R1,A    
007B                 809     ?C0010:
007B 09              810         INC     R1
007C EF              811         MOV     A,R7
007D 27              812         ADD     A,@R1    
007E F7              813         MOV     @R1,A
007F DEFA            814         DJNZ    R6,?C0010
                     815     
0081                 816     ?C0011:
                     817     ;         OSTaskID = OSNextTaskID;        
0081 850000   F      818         MOV     OSTaskID,OSNextTaskID
                     819     ;         SP--;
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    14

0084 1581            820         DEC     SP
                     821     ;     }
0086                 822     ?C0007:
                     823     ;     LoadCtx();
0086 020000   F      824         LJMP    LoadCtx
0089                 825     ?C000r:
                     826     IF 0  <> 0
                                 mov     SP,r2
                             ENDIF
0089 020000   F      829         LJMP    LoadCtx
                     830     ;****************************************************************************************
                     831     ;/*****************************************************************************************
                             ****************
                     832     ;** 函数名称: OSIntCtxSw
                     833     ;** 功能描述: 中断使任务放弃CPU环境保存函数
                     834     ;** 输　入: OSTaskID
                     835     ;** 输　出 : 无
                     836     ;** 全局变量: OSFastSwap
                     837     ;** 调用模块: 无
                     838     ;** 
                     839     ;** 作　者: 陈明计
                     840     ;** 日　期: 2002年2月22日
                     841     ;**----------------------------------------------------------------------------------------
                             ---------------
                     842     ;** 修　改: 陈明计
                     843     ;** 日　期: 2002年12月2日
                     844     ;**----------------------------------------------------------------------------------------
                             ---------------
                     845     ;** 修　改:
                     846     ;** 日　期:
                     847     ;**----------------------------------------------------------------------------------------
                             ---------------
                     848     ;******************************************************************************************
                             **************/
----                 849         RSEG  ?PR?OSIntCtxSw?OS_CPU_A
0000                 850     OSIntCtxSw:
                     851         USING   0
                     852                                             ;是否是优先级最低任务
0000 7405            853         MOV     A,#5
0002 6500     F      854         XRL     A,OSTaskID
0004 700F            855         JNZ     OSIntCtxSw_0
                     856                                             ;是则不需要保存所有寄存器
                     857     ;SP=SP-13-4                             ;4:两层函数调用堆栈，13：寄存器数目
0006 74EF            858         MOV     A,#(-17)
0008 2581            859         ADD     A,SP
000A F581            860         MOV     SP,A
                     861                                             ;跳转到OSCtxSw，同时通知CPU中断处理完成
000C 7400     F      862         MOV     A, #LOW  OSCtxSw
000E C0E0            863         PUSH    ACC
0010 7400     F      864         MOV     A, #HIGH OSCtxSw
0012 C0E0            865         PUSH    ACC
0014 32              866         RETI
                     867                                             ;需要保存所有寄存器
0015                 868     OSIntCtxSw_0:
                     869     ;SP=SP-4                                ;4:两层函数调用堆栈
0015 74FC            870         MOV     A,#0FCH
0017 2581            871         ADD     A,SP
0019 F581            872         MOV     SP,A
                     873                                             ;设置标志：任务再次恢复运行时需要恢复所有寄存器
001B 900000   F      874         MOV     DPTR,#OSMapTbl
001E E500     F      875         MOV     A,OSTaskID
                     876     
0020 93              877         MOVC    A,@A+DPTR
0021 F4              878         CPL     A
0022 5200     F      879         ANL     OSFastSwap,A
                             
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    15

                                 
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                                 
                                 
                             
                             
                     895     
                     896     
                                 
                                 
                             
0024 C000     F      900         PUSH    Os_Enter_Sum            ;保存关中断计数器
                     901                                             ;跳转到堆栈处理，同时通知CPU中断处理完成
0026 7400     F      902         MOV     A, #LOW  C_OSCtxSw
0028 C0E0            903         PUSH    ACC
002A 7400     F      904         MOV     A, #HIGH C_OSCtxSw
002C C0E0            905         PUSH    ACC
002E 32              906         RETI
                     907     
                     908     ;/*****************************************************************************************
                             ****************
                     909     ;**                            End Of File
                     910     ;******************************************************************************************
                             **************/
                     911         END
A51 MACRO ASSEMBLER  OS_CPU_A                                                             01/19/2017 14:30:05 PAGE    16

SYMBOL TABLE LISTING
------ ----- -------


N A M E                      T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . .  C ADDR   004DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0002. . . . . . . . . . .  C ADDR   001EH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0003. . . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0004. . . . . . . . . . .  C ADDR   0041H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0005. . . . . . . . . . .  C ADDR   0047H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0007. . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0008. . . . . . . . . . .  C ADDR   0057H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0009. . . . . . . . . . .  C ADDR   005DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C000R. . . . . . . . . . .  C ADDR   0089H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0010. . . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0011. . . . . . . . . . .  C ADDR   0081H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?PR?C_OSCTXSW?OS_CPU_A. . .  C SEG    008CH       REL=UNIT
?PR?LOADCTX?OS_CPU_A. . . .  C SEG    0033H       REL=UNIT
?PR?OSCTXSW?OS_CPU_A. . . .  C SEG    000DH       REL=UNIT
?PR?OSINTCTXSW?OS_CPU_A . .  C SEG    002FH       REL=UNIT
?PR?_OSTASKSTKINIT?OS_CPU_A  C SEG    007CH       REL=UNIT
?STACK. . . . . . . . . . .  I SEG    0001H       REL=UNIT
ACC . . . . . . . . . . . .  D ADDR   00E0H   A   
AR6 . . . . . . . . . . . .  D ADDR   0006H   A   
AR7 . . . . . . . . . . . .  D ADDR   0007H   A   
B . . . . . . . . . . . . .  D ADDR   00F0H   A   
C_OSCTXSW . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
DPH . . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . . . . . .  B ADDR   00A8H.7 A   
LOADCTX . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_0 . . . . . . . . .  C ADDR   0009H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_2 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_3 . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?LOADCTX?OS_CPU_A
OSCTXSW . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSCTXSW?OS_CPU_A
OSFASTSWAP. . . . . . . . .  D ADDR   -----       EXT
OSINTCTXSW. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSINTCTXSW_0. . . . . . . .  C ADDR   0015H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSMAPTBL. . . . . . . . . .  C ADDR   -----       EXT
OSNEXTTASKID. . . . . . . .  D ADDR   -----       EXT
OSTASKID. . . . . . . . . .  D ADDR   -----       EXT
OSTSAKSTACKBOTTON . . . . .  D ADDR   -----       EXT
OS_CPU_A_ASM. . . . . . . .  N NUMB   -----       
OS_ENTER_SUM. . . . . . . .  D ADDR   -----       EXT
PSW . . . . . . . . . . . .  D ADDR   00D0H   A   
SP. . . . . . . . . . . . .  D ADDR   0081H   A   
STACK . . . . . . . . . . .  I ADDR   0000H   R   SEG=?STACK
STKINIT11 . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT12 . . . . . . . . .  C ADDR   006BH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT15 . . . . . . . . .  C ADDR   0049H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT18 . . . . . . . . .  C ADDR   0065H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT5. . . . . . . . . .  C ADDR   003FH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT8. . . . . . . . . .  C ADDR   001AH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
_OSTASKSTKINIT. . . . . . .  C ADDR   0000H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
