C51 COMPILER V9.00   KEY                                                                   01/19/2017 14:30:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN Key.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Key.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *                                  湖南熙旺达科技有限公司
   4          *                               All Rights Reserved
   5          *                                        
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称               :Key.c
   9          *文件描述               :按键驱动程序
  10          *创建人                 :陈卫国
  11          *创建日期               :2008-9-22
  12          *版本号                 :V1.0
  13          *注释                   :
  14          *----------------------------------------------------------
  15          *修改人                         :
  16          *修改日期                       :
  17          *版本号                 :
  18          *注释                   :
  19          ***********************************************************
  20          */
  21          #define _IN_KEY_
  22          #include "config.h"
  23          
  24          //按键引脚定义
  25          sbit    SetKey          =       P3^4;                                                           //设置键
  26          bit             bLedRedState;                                                                           //红灯状态      
  27          extern uint8    OS_Q_MEM_SEL    byMainCmdQ[];     
  28          extern STLocalControl   xdata stLocalControl;
  29          extern uint8 xdata IRByteCount;
  30          extern bit   SET_BY_SERIAL_FLAG;
  31          bit   SET_BY_SERIAL_OK_FLAG;
  32          extern void SaveParameter(void);
  33          extern bit IR_SET_BY_SERIAL_FLAG;
  34          extern uint8 xdata TEMPIRDATA[6];
  35          /**********************************************************
  36          *函数名称                       :SetLedRedState 
  37          *函数描述               :设置红色Led灯状态
  38          *输入参数               :byState:灯状态
  39          *返回值                         :       
  40          *全局变量                       :
  41          *调用模块                       :
  42          ***********************************************************
  43          *创建人                 :陈卫国
  44          *创建日期                       :2008-9-22
  45          ***********************************************************
  46          *修改人                         :
  47          *修改日期               :
  48          *注释                   :
  49          **********************************************************/
  50          void SetLedRedState(uint8 byState)
  51          {
  52   1              LED_RED = LED_GREEN = (bit)byState;
  53   1              bLedRedState = (bit)byState;
  54   1              stLocalControl.byLedState = byState;    
  55   1      }
C51 COMPILER V9.00   KEY                                                                   01/19/2017 14:30:05 PAGE 2   

  56          /**********************************************************
  57          *函数名称                       :KeyScan        
  58          *函数描述               :按键扫描函数
  59          *输入参数               :
  60          *返回值                         :NO_KEY:无按键按下,SET_KEY:设置键按下   
  61          *全局变量                       :
  62          *调用模块                       :
  63          ***********************************************************
  64          *创建人                 :陈卫国
  65          *创建日期                       :2008-9-22
  66          ***********************************************************
  67          *修改人                         :
  68          *修改日期               :
  69          *注释                   :
  70          **********************************************************/
  71          uint8 KeyScan(void)
  72          {
  73   1              if(0 == SetKey)
  74   1              {
  75   2                      return(SET_KEY);
  76   2              }
  77   1              return(NO_KEY); 
  78   1      } 
  79          /**********************************************************
  80          *函数名称                       :KeyManager     
  81          *函数描述               :按键管理线程
  82          *输入参数               :
  83          *返回值                         :       
  84          *全局变量                       :byMainCmdQ
  85          *调用模块                       :KeyScan,OSQPost
  86          ***********************************************************
  87          *创建人                 :陈卫国
  88          *创建日期                       :2008-9-22
  89          ***********************************************************
  90          *修改人                         :
  91          *修改日期               :
  92          *注释                   :
  93          **********************************************************/
  94          void KeyManager(void)
  95          {       
  96   1              static uint8 byKeyValue;        
  97   1              SetKey  = 1;
  98   1          while(TRUE)
  99   1          {
 100   2              OSWait(K_TMO, OS_TICKS_PER_SEC/50);                             //20ms延时                                                
 101   2              byKeyValue = KeyScan();                                 
 102   2              if(byKeyValue == NO_KEY)
 103   2              {                               
 104   3                 continue;
 105   3              }        
 106   2              OSWait(K_TMO, OS_TICKS_PER_SEC/50);                                             
 107   2              if(byKeyValue != KeyScan())
 108   2              {                       
 109   3                  continue;
 110   3              }
 111   2              OSQPost(byMainCmdQ, KEY_DOWN|byKeyValue);                                                                        
 112   2              while(byKeyValue == KeyScan())
 113   2              {       
 114   3                              OSWait(K_TMO, 2);                              
 115   3              } 
 116   2                      WDT_CONTR = 0x3d;
 117   2          }
C51 COMPILER V9.00   KEY                                                                   01/19/2017 14:30:05 PAGE 3   

 118   1      }
 119          /**********************************************************
 120          *函数名称                       :KeyDownDeal    
 121          *函数描述               :按键按下处理函数
 122          *输入参数               :byKey:按下键的键值
 123          *返回值                         :       
 124          *全局变量                       :stLocalControl
 125          *调用模块                       :Bus0OutputData
 126          ***********************************************************
 127          *创建人                 :陈卫国
 128          *创建日期                       :2008-9-22
 129          ***********************************************************
 130          *修改人                         :
 131          *修改日期               :
 132          *注释                   :
 133          **********************************************************/
 134          void KeyDownDeal(uint8 byKey)
 135          { 
 136   1              if(bLanding)
 137   1              {       //登记状态,不处理       
 138   2                  IRByteCount=0; 
 139   2                      return;
 140   2              } 
 141   1              if(SET_BY_SERIAL_FLAG)
 142   1              {
 143   2                      SET_BY_SERIAL_FLAG=0;
 144   2                      //-----------------------------------------------------
 145   2                      //-----------------------------------------------------
 146   2                      if(IR_SET_BY_SERIAL_FLAG)
 147   2                      {
 148   3                         IR_SET_BY_SERIAL_FLAG=0;        
 149   3                         stLocalControl.stEepromCfgData.bySelfSecAddr  = TEMPIRDATA[1];
 150   3                         stLocalControl.stEepromCfgData.bySelfRoomAddr = TEMPIRDATA[2];
 151   3                     stLocalControl.stEepromCfgData.bySelfBedAddr  = TEMPIRDATA[3];
 152   3                         memset(TEMPIRDATA,0,6);
 153   3                      }
 154   2                      //-----------------------------------------------------
 155   2                      //-----------------------------------------------------
 156   2                      else
 157   2                      {
 158   3                        stLocalControl.stEepromCfgData.bySelfSecAddr = stLocalControl.stBusDealFreq.bySndSecAddr;
 159   3                        stLocalControl.stEepromCfgData.bySelfRoomAddr = stLocalControl.stBusDealFreq.bySndRoomAddr;
 160   3                    stLocalControl.stEepromCfgData.bySelfBedAddr = stLocalControl.stBusDealFreq.bySndBedAddr;
 161   3                      }
 162   2                      stLocalControl.stEepromCfgData.byFlag=CBYTE[0x2803];
 163   2                      stLocalControl.stEepromCfgData.byPrio=CBYTE[0x2804];
 164   2                      stLocalControl.stEepromCfgData.byReserve1=CBYTE[0x2805];
 165   2                      stLocalControl.stEepromCfgData.byReserve2=CBYTE[0x2806];
 166   2                      stLocalControl.stEepromCfgData.byReserve3=CBYTE[0x2807];
 167   2                      stLocalControl.stEepromCfgData.bySerialNum1=CBYTE[0x2808];
 168   2                      stLocalControl.stEepromCfgData.bySerialNum2=CBYTE[0x2809];
 169   2                      stLocalControl.stEepromCfgData.bySerialNum3=CBYTE[0x280A];
 170   2                      stLocalControl.stEepromCfgData.byVersionHi=CBYTE[0x280B];
 171   2                      stLocalControl.stEepromCfgData.byVersionLo=CBYTE[0x280C];
 172   2                      SaveParameter();
 173   2                      ////编号成功后开始快闪1S
 174   2                      SetLedRedState(LED_FLASH);
 175   2                      stLocalControl.byLedTime = stLocalControl.byLedDelay =10;
 176   2                      SET_BY_SERIAL_OK_FLAG =1;
 177   2                      return;
 178   2              }
 179   1              stLocalControl.stBusDealFreq.bySndSecAddr = stLocalControl.stEepromCfgData.bySelfSecAddr;
C51 COMPILER V9.00   KEY                                                                   01/19/2017 14:30:05 PAGE 4   

 180   1              stLocalControl.stBusDealFreq.bySndRoomAddr = stLocalControl.stEepromCfgData.bySelfRoomAddr;
 181   1              stLocalControl.stBusDealFreq.bySndBedAddr = stLocalControl.stEepromCfgData.bySelfBedAddr;
 182   1              stLocalControl.stBusDealFreq.byRecSecAddr = stLocalControl.stEepromCfgData.bySelfSecAddr;
 183   1              stLocalControl.stBusDealFreq.byRecRoomAddr = stLocalControl.stEepromCfgData.bySelfRoomAddr;
 184   1              stLocalControl.stBusDealFreq.byRecBedAddr = stLocalControl.stEepromCfgData.bySelfBedAddr;  
 185   1              switch(byKey)
 186   1              {
 187   2                      case SET_KEY:
 188   2                       if(!bCalling)
 189   2                              {
 190   3                                      stLocalControl.stBusDealFreq.byRecSecAddr = stLocalControl.stEepromCfgData.byPrio;                                                              
 191   3                                      stLocalControl.stBusDealFreq.byCmd = CMD_EMERGENCY_CALL;                                
 192   3                                      Bus0OutputData(&(stLocalControl.stBusDealFreq.bySndSecAddr));
 193   3                              }                                                       
 194   2                              else
 195   2                              {                               
 196   3                                      stLocalControl.stBusDealFreq.byCmd = CMD_EMERGENCY_CLEAR;                               
 197   3                                      Bus0OutputData(&(stLocalControl.stBusDealFreq.bySndSecAddr));
 198   3                              } 
 199   2                      IRByteCount=0; 
 200   2                  break;
 201   2              }               
 202   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    377    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
