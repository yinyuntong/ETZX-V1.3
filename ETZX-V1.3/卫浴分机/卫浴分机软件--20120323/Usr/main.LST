C51 COMPILER V9.00   MAIN                                                                  01/19/2017 14:30:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *                                  湖南熙旺达科技有限公司
   4          *                               All Rights Reserved
   5          *                                        
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称               :main.c
   9          *文件描述               :主函数
  10          *创建人                 :陈卫国
  11          *创建日期               :2008-9-22
  12          *版本号                 :V1.0
  13          *注释                   :                                       
  14          *----------------------------------------------------------
  15          *修改人                         :
  16          *修改日期                       :
  17          *版本号                 :
  18          *注释                   :
  19          ***********************************************************
  20          */
  21          
  22          #include "config.h"
  23          #include "absacc.h"
  24          
  25          uint16  uiIsrTimerCount = ISR_INC_COUNT;                                        //系统时钟定时值
  26          uint8   OS_Q_MEM_SEL    byMainCmdQ[16];                                         //主线程消息队列
  27          STLocalControl  xdata stLocalControl;                                           //全局变量结构体
  28          
  29          
  30          extern uint8 xdata BusLowDTime;
  31          
  32          
  33          
  34          void UsartInit(void)
  35          {
  36   1      
  37   1              RXD=1;
  38   1              TXD=1;
  39   1              SCON = 0X50;            //工作方式1
  40   1      
  41   1              TMOD &= 0X0F;           //TO方式不变
  42   1              TMOD |= 0X20;           //T1 8位自动重载
  43   1              TL1     =       0XF6;           //波特率4800  在18.432M晶振的情况下
  44   1              TH1     =       0XF6;
  45   1          PCON &=     (~0x80/*SMOD*/);   //  ;波特率倍增选择          smod=0
  46   1              AUXR |= 0x40/*T1x12*/;          //1T模式,最后波特率为:4800*12=57.6K
  47   1          TF1=0;
  48   1          TR1=1;
  49   1              
  50   1              RI=0;
  51   1              TI=0;
  52   1              REN=1;
  53   1              //ES=1; 
  54   1      }
  55          
C51 COMPILER V9.00   MAIN                                                                  01/19/2017 14:30:05 PAGE 2   

  56          
  57          
  58          void Send_Data(uint8 *Databuf,uint8 xdata l)
  59          { 
  60   1              uint8 xdata i;
  61   1         // ES=0;
  62   1              for(i=0;i<l;i++)
  63   1              {
  64   2                      SBUF=*Databuf;
  65   2                      while(!TI);
  66   2                      TI=0;
  67   2                      Databuf++;
  68   2              }
  69   1              //ES=1;
  70   1       }
  71          
  72          void Send_Data_Byte(uint8 SendData)
  73          {
  74   1       //     ES=0;
  75   1          SBUF=SendData;
  76   1          while(!TI);
  77   1          TI=0;
  78   1      //      ES=1;
  79   1      }
  80          
  81          /**********************************************************
  82          *函数名称                       :Init   
  83          *函数描述               :硬件初始化操作
  84          *输入参数               :
  85          *返回值                         :       
  86          *全局变量                       :
  87          *调用模块                       :
  88          ***********************************************************
  89          *创建人                 :陈卫国
  90          *创建日期                       :2008-9-22
  91          ***********************************************************
  92          *修改人                         :
  93          *修改日期               :
  94          *注释                   :
  95          **********************************************************/
  96          void Init(void)
  97          {
  98   1              CMOD = 0x02;
  99   1              CCON = 0x00;    
 100   1              CL = 0x00;
 101   1              CH = 0x00;
 102   1              CCAP0L = (uint8)uiIsrTimerCount;
 103   1              CCAP0H = (uint8)(uiIsrTimerCount>>8);
 104   1              //设置PCA模块0为16位软件定时器，ECCF0=1允许PCA模块0中断
 105   1              CCAPM0 = 0x49;  
 106   1              //开PCA中断和LVD(低压检测)中断共享的总中断控制位
 107   1              EPCA_LVD = 1;
 108   1              //启动PCA计数器计数
 109   1              CR = 1; 
 110   1              //复位看门狗
 111   1              WDT_CONTR = 0x3d; 
 112   1              //P1M1 |= 0xC0;
 113   1              //P1M0 &= 0x3F;
 114   1              P1M1 |= 0xC8;
 115   1              P1M0 &= 0x37;   
 116   1              //读取系统配置字
 117   1              //ReadParameter(); 
C51 COMPILER V9.00   MAIN                                                                  01/19/2017 14:30:05 PAGE 3   

 118   1              //--------------------------------------------------
 119   1              //--------------------------------------------------
 120   1              //继电器控制端复位
 121   1              RST_BUS=0;
 122   1              //--------------------------------------------------
 123   1              //--------------------------------------------------
 124   1              EnableIAP(IAP_READ);
 125   1              if(IapReadByte(0x0800)==INIT_FLAG)
 126   1               {
 127   2              ReadParameter();
 128   2               }
 129   1              else
 130   1               {
 131   2                  stLocalControl.stEepromCfgData.bySelfSecAddr=CBYTE[0x2800];
 132   2                      stLocalControl.stEepromCfgData.bySelfRoomAddr=CBYTE[0x2801];
 133   2                      stLocalControl.stEepromCfgData.bySelfBedAddr=CBYTE[0x2802];
 134   2                      stLocalControl.stEepromCfgData.byFlag=CBYTE[0x2803];
 135   2                      stLocalControl.stEepromCfgData.byPrio=CBYTE[0x2804];
 136   2                      stLocalControl.stEepromCfgData.byReserve1=CBYTE[0x2805];
 137   2                      stLocalControl.stEepromCfgData.byReserve2=CBYTE[0x2806];
 138   2                      stLocalControl.stEepromCfgData.byReserve3=CBYTE[0x2807];
 139   2                      stLocalControl.stEepromCfgData.bySerialNum1=CBYTE[0x2808];
 140   2                      stLocalControl.stEepromCfgData.bySerialNum2=CBYTE[0x2809];
 141   2                      stLocalControl.stEepromCfgData.bySerialNum3=CBYTE[0x280A];
 142   2                      stLocalControl.stEepromCfgData.byVersionHi=CBYTE[0x280B];
 143   2                      stLocalControl.stEepromCfgData.byVersionLo=CBYTE[0x280C];
 144   2               }
 145   1              //-------------------------------------------------------
 146   1              //-------------------------------------------------------
 147   1              //单总线初始化 
 148   1              SingleBusInit();
 149   1              //红外接收初始化 
 150   1              IRInit();
 151   1              //状态初始化
 152   1              bLanding = 0;
 153   1              bCalling = 0;
 154   1              //设置灯的状态和闪烁时间,设置上电超时   
 155   1              stLocalControl.byLedTime = stLocalControl.byLedDelay = 50;        
 156   1              if(stLocalControl.stEepromCfgData.byFlag&0x01)
 157   1          {   //设定为灯长亮
 158   2                      SetLedRedState(LED_ON); 
 159   2              }
 160   1              else
 161   1              {       //设定为灯灭
 162   2                      SetLedRedState(LED_OFF);        
 163   2              }                               
 164   1              MakeCH0TimerOut(0, 0); 
 165   1              BusLowDTime=100;
 166   1      
 167   1      
 168   1              UsartInit();
 169   1              Send_Data_Byte(0x55);
 170   1      }
 171          /**********************************************************
 172          *函数名称                       :GetMessage     
 173          *函数描述               :获取主线程消息队列中的消息(无消息则挂起自身)
 174          *输入参数               :Msg:存储消息指针
 175          *返回值                         :       
 176          *全局变量                       :
 177          *调用模块                       :
 178          ***********************************************************
 179          *创建人                 :陈卫国
C51 COMPILER V9.00   MAIN                                                                  01/19/2017 14:30:05 PAGE 4   

 180          *创建日期                       :2008-9-22
 181          ***********************************************************
 182          *修改人                         :
 183          *修改日期               :
 184          *注释                   :
 185          **********************************************************/
 186          void GetMessage(uint8 data *Msg)
 187          {
 188   1              OSQPend(Msg, byMainCmdQ, 0);
 189   1      }
 190          /**********************************************************
 191          *函数名称                       :DispatchMessage        
 192          *函数描述               :分发处理获取的主线程消息
 193          *输入参数               :Msg:消息,高4位是命令类型,低4位是命令数据
 194          *返回值                         :       
 195          *全局变量                       :
 196          *调用模块                       :
 197          ***********************************************************
 198          *创建人                 :陈卫国
 199          *创建日期                       :2008-9-22
 200          ***********************************************************
 201          *修改人                         :
 202          *修改日期               :
 203          *注释                   :
 204          **********************************************************/
 205          void DispatchMessage(uint8 Msg)
 206          {
 207   1              switch(Msg&0xf0)
 208   1              {
 209   2                      case BUS0_REC:                                                                          //总线0收到数据帧
 210   2                               Bus0RecDeal();
 211   2                              break;
 212   2                      case BUS0_SND:                                                                          //总线0数据发送完成
 213   2                              Bus0SendDeal();
 214   2                              break;                          
 215   2                      case KEY_DOWN:                                                                          //键按下处理 
 216   2                              KeyDownDeal(Msg&0x0f);
 217   2                              break;                          
 218   2                      case TIMER_OUT:                                                                         //超时处理
 219   2                              TimerOutDeal();
 220   2                              break;
 221   2                      case IR_REC:                                                                            //红外数据处理
 222   2                              IRRecDeal();
 223   2                              break;
 224   2              }       
 225   1      }
 226          /**********************************************************
 227          *函数名称                       :MainTask       
 228          *函数描述               :系统主线程,负责整个系统的消息处理
 229          *输入参数               :
 230          *返回值                         :       
 231          *全局变量                       :
 232          *调用模块                       :
 233          ***********************************************************
 234          *创建人                 :陈卫国
 235          *创建日期                       :2008-9-22
 236          ***********************************************************
 237          *修改人                         :
 238          *修改日期               :
 239          *注释                   :
 240          **********************************************************/
 241          void MainTask(void)
C51 COMPILER V9.00   MAIN                                                                  01/19/2017 14:30:05 PAGE 5   

 242          {
 243   1              static uint8 data Msg;   
 244   1              
 245   1              //系统硬件初始化
 246   1              Init();
 247   1              //创建主线程消息队列
 248   1              OSQCreate(byMainCmdQ, 16);
 249   1      
 250   1              WDT_CONTR = 0x3d;       
 251   1              //以下为创建任务线程 
 252   1              OSTaskCreate(Bus0Manage, NULL, 1);
 253   1              OSTaskCreate(IRRecManage, NULL, 2);             
 254   1              OSTaskCreate(KeyManager, NULL, 3);
 255   1              OSTaskCreate(TimerOutManager, NULL, 4); 
 256   1              //进入消息循环
 257   1              WDT_CONTR = 0x3d;       
 258   1              while(TRUE)
 259   1              {
 260   2                      GetMessage(&Msg);
 261   2                      DispatchMessage(Msg);
 262   2                      WDT_CONTR = 0x3d;
 263   2      
 264   2              }
 265   1      } 
 266          /**********************************************************
 267          *函数名称                       :main   
 268          *函数描述               :系统主函数,整个软件的入口
 269          *输入参数               :
 270          *返回值                         :       
 271          *全局变量                       :
 272          *调用模块                       :
 273          ***********************************************************
 274          *创建人                 :陈卫国
 275          *创建日期                       :2008-9-22
 276          ***********************************************************
 277          *修改人                         :
 278          *修改日期               :
 279          *注释                   :
 280          **********************************************************/
 281          void main(void)
 282          {                               
 283   1              //操作系统初始化                        
 284   1              OSInit();                
 285   1              //创建系统主线程
 286   1              OSTaskCreate(MainTask, NULL, 0);                 
 287   1              while(1)
 288   1          {
 289   2             PCON = PCON | 0x01;                    //CPU进入休眠状态   
 290   2          }    
 291   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     32       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =     16    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
