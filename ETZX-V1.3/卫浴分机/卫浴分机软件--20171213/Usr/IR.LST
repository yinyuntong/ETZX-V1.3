C51 COMPILER V9.00   IR                                                                    12/14/2017 13:32:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN IR.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #define _IN_IR_
   2          #include "config.h"
   3          #include "string.h"
   4          
   5          
   6          uint8 xdata MoveFjNum=0;                //ÒÆ¶¯·Ö»úºÅÂë
   7          
   8          
   9          uint8 xdata UartRecData;
  10          uint8 xdata IrDataPosit=0;
  11          
  12          uint16  uiNurseInTime;                                          //¼ì²â»¤Ê¿µ½Î»¶¨Ê±Ê±¼ä
  13          uint8   byIrDataIntervalTimer;                          //ºìÍâÊý¾Ý½ÓÊÕ¹ý³ÌÖÐ×Ö½ÚÖ®¼ä¼ä¸ôÊ±¼ä
  14          uint8   byNumSetTime;                                           //±àºÅÊ±¼ä
  15          
  16          uint8 xdata byIrDARecBuff[8], byIrDADealBuff[6];                //ºìÍâ½ÓÊÕÇø¡¢´¦Àí»º³åÇø
  17          
  18          bit bFourByteRec=0;                                     //´®¿Ú½ÓÊÕµ½4×Ö½ÚÃüÁî
  19          bit bSixByteRec=0;                                      //´®¿Ú½ÓÊÕµ½6×Ö½ÚÃüÁ
  20          
  21          
  22          bit     bSetKeyDown =0;                         //ÉèÖÃ¼ü°´ÏÂ×´Ì¬
  23          bit     bNurseIn        =0;                             //»¤Ê¿µ½Î»±êÖ¾
  24          
  25          /**********************************************************
  26          *º¯ÊýÃû³Æ                       :IRInit 
  27          *º¯ÊýÃèÊö               :ºìÍâ½ÓÊÕ³õÊ¼»¯
  28          *ÊäÈë²ÎÊý               :
  29          *·µ»ØÖµ                         :       
  30          *È«¾Ö±äÁ¿                       :
  31          *µ÷ÓÃÄ£¿é                       :
  32          ***********************************************************
  33          *´´½¨ÈË                 :ÐÜ¼áÇ¿
  34          *´´½¨ÈÕÆÚ                       :2011-2-16
  35          ***********************************************************
  36          *ÐÞ¸ÄÈË                         :
  37          *ÐÞ¸ÄÈÕÆÚ               :
  38          *×¢ÊÍ                   :
  39          **********************************************************/
  40          void IRInit(void)
  41          {
  42   1              RXD=1;
  43   1              TXD=1;
  44   1      
  45   1              SCON = 0x50;    //´®¿ÚÄ£Ê½1
  46   1              PCON &= 0x7F;   //´®¿Ú²¨ÌØÂÊËÙÎ»0:±£³ÖÔ­Ñù
  47   1              TMOD &= 0X0F;           //TO·½Ê½²»±ä
  48   1              TMOD |= 0X20;           //T1 8Î»×Ô¶¯ÖØÔØ        
  49   1              TH1 = 0xD8;
  50   1              TL1 = 0xD8;             //²¨ÌØÂÊÉèÖÃÎª1200      
  51   1      
  52   1              PCON &= (~SMOD);   // ²¨ÌØÂÊ±¶ÔöÑ¡Ôñ            smod=0
  53   1              AUXR &= (~T1x12);               //¶¨Ê±Æ÷1Ê±ÖÓ¿ØÖÆ,0:Fosc/12(´«Í³µÄ12·ÖÆµ)       
  54   1              
  55   1              TF1=0;
C51 COMPILER V9.00   IR                                                                    12/14/2017 13:32:30 PAGE 2   

  56   1              TR1 = 1;
  57   1      
  58   1              
  59   1              RI=0;
  60   1              TI=0;
  61   1              REN=1;
  62   1              ES = 1;
  63   1              
  64   1      }
  65          /**********************************************************
  66          *º¯ÊýÃû³Æ                       :comm   
  67          *º¯ÊýÃèÊö               :´®¿ÚÖÐ¶Ï£¬ÓÃÀ´ºìÍâ½âÂë
  68          *ÊäÈë²ÎÊý               :
  69          *·µ»ØÖµ                         :       
  70          *È«¾Ö±äÁ¿                       :
  71          *µ÷ÓÃÄ£¿é                       :
  72          ***********************************************************
  73          *´´½¨ÈË                 :ÐÜ¼áÇ¿
  74          *´´½¨ÈÕÆÚ                       :2011-2-16
  75          ***********************************************************
  76          *ÐÞ¸ÄÈË                         :
  77          *ÐÞ¸ÄÈÕÆÚ               :
  78          *×¢ÊÍ                   :
  79          **********************************************************/
  80          #pragma disable
  81          void comm(void) interrupt 4
  82          {        
  83   1              if(TI==1)
  84   1                      TI=0;
  85   1              if(RI==1)
  86   1              {
  87   2                      RI=0;
  88   2                      UartRecData = ~SBUF;    //°´Î»È¡·´
  89   2                      byIrDataIntervalTimer=5;                //Ã¿×Ö½Ú¼ä¸ô²»³¬¹ý100ms
  90   2                      if(IrDataPosit==0)
  91   2                      {       
  92   3                              if(UartRecData==0x05)   //ÆðÊ¼Âë
  93   3                                      byIrDARecBuff[IrDataPosit++]=   UartRecData;
  94   3                      }
  95   2                      
  96   2                      else 
  97   2                      {
  98   3                              byIrDARecBuff[IrDataPosit++]=   UartRecData;
  99   3                              if(IrDataPosit >=7)   IrDataPosit =0;
 100   3      
 101   3                      }       
 102   2              }
 103   1      }
 104          
 105          
 106          
 107          void IrDATreat(void)    //Êý¾Ý´¦Àíº¯Êý
 108          {
 109   1      
 110   1              OS_ENTER_CRITICAL();
 111   1              memcpy(byIrDADealBuff,byIrDARecBuff,4);                         //°ÑÊý¾Ý´Ó½ÓÊÕÇø¸´ÖÆµ½»º³åÇø
 112   1              memset(byIrDARecBuff,0x00,4);                                           //½«½ÓÊÕ»º³åÇøÇå0
 113   1              OS_EXIT_CRITICAL();
 114   1              if(byIrDADealBuff[3]==(uint8)(byIrDADealBuff[0]+byIrDADealBuff[1]+byIrDADealBuff[2]))
 115   1              {//Ð£ÑéºÍÕýÈ·
 116   2                      switch(byIrDADealBuff[2])
 117   2                      {
C51 COMPILER V9.00   IR                                                                    12/14/2017 13:32:30 PAGE 3   

 118   3                      case IrDA_CMD_NURSE_IN:
 119   3                              uiNurseInTime=NURSE_IN_TIME;                            //Èç¹û5ÃëÄÚÎ´ÊÕµ½»¤Ê¿µ½Î»ÃüÁî£¬¼´ÈÏÎª»¤Ê¿Àë¿ª
 120   3                              if(bNurseIn==0)
 121   3                              {
 122   4                                      MoveFjNum = byIrDADealBuff[1];//ÒÆ¶¯·Ö»úºÅ
 123   4                                      
 124   4                                      stLocalControl.stBusDealFreq.bySndSecAddr = stLocalControl.stEepromCfgData.bySelfSecAddr;
 125   4                                      stLocalControl.stBusDealFreq.bySndRoomAddr= MOVE_FJ;
 126   4                                      stLocalControl.stBusDealFreq.bySndBedAddr= byIrDADealBuff[1];//ÒÆ¶¯·Ö»úºÅ
 127   4                                      stLocalControl.stBusDealFreq.byRecSecAddr = stLocalControl.stEepromCfgData.bySelfSecAddr;
 128   4                                      stLocalControl.stBusDealFreq.byRecRoomAddr = stLocalControl.stEepromCfgData.bySelfRoomAddr;
 129   4                                      stLocalControl.stBusDealFreq.byRecBedAddr = stLocalControl.stEepromCfgData.bySelfBedAddr;               
 130   4                                      stLocalControl.stBusDealFreq.byCmd = CMD_NURSE_IN;
 131   4                                      Bus0OutputData(&(stLocalControl.stBusDealFreq.bySndSecAddr));
 132   4                                      MoveFjNum= byIrDADealBuff[1];
 133   4                              }
 134   3                              bNurseIn=1;     
 135   3                              break;
 136   3      
 137   3      
 138   3                              
 139   3                      case IrDA_CMD_INSPECTION:                       //»¤Ê¿²é·¿ÃüÁî  
 140   3                              break;
 141   3                              
 142   3                      }
 143   2              }
 144   1      }
 145          
 146          
 147          
 148          void IrDANumberSet(void)        //Êý¾Ý´¦Àíº¯Êý
 149          {
 150   1      
 151   1              OS_ENTER_CRITICAL();
 152   1              memcpy(byIrDADealBuff,byIrDARecBuff,6);                         //°ÑÊý¾Ý´Ó½ÓÊÕÇø¸´ÖÆµ½»º³åÇø
 153   1              memset(byIrDARecBuff,0x00,6);                                           //½«½ÓÊÕ»º³åÇøÇå0
 154   1              OS_EXIT_CRITICAL();
 155   1      
 156   1              if(byIrDADealBuff[5] == byIrDADealBuff[0]+byIrDADealBuff[1]+byIrDADealBuff[2]+byIrDADealBuff[3]+byIrDADea
             -lBuff[4])
 157   1              {//Ð£ÑéºÍÕýÈ·
 158   2                      if(byIrDADealBuff[3] ==0)
 159   2                      {//ÊÇÎÀÉú¼ä·Ö»ú±àºÅ
 160   3                              switch(byIrDADealBuff[4])
 161   3                              {
 162   4                                      case 0x5a:
 163   4                                              bNumSeting=1;
 164   4                                              byNumSetTime = 250;
 165   4                                              stLocalControl.byLedTime = stLocalControl.byLedDelay = 50;
 166   4                                              SetLedRedState(LED_FLASH);
 167   4                                              bySec =  byIrDADealBuff[1];     //ÇøºÅ
 168   4                                              byRoom = byIrDADealBuff[2];//·¿ºÅ
 169   4                                              break;
 170   4      
 171   4                                              
 172   4                                      default:
 173   4                                              break;
 174   4                              }
 175   3                      }
 176   2              }
 177   1      }

C51 COMPILER V9.00   IR                                                                    12/14/2017 13:32:30 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
