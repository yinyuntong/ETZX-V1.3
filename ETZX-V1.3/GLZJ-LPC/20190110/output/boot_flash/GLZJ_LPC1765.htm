<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\boot_flash\GLZJ_LPC1765.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\boot_flash\GLZJ_LPC1765.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Fri Aug 31 09:45:43 2018
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; check_esp8266 &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">EINT0_IRQHandler</a> from interrupt.o(i.EINT0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">EINT1_IRQHandler</a> from interrupt.o(i.EINT1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT2_IRQHandler</a> from interrupt.o(i.EINT2_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT3_IRQHandler</a> from interrupt.o(i.EINT3_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from interrupt.o(i.HardFault_Handler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from interrupt.o(i.MemManage_Handler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from interrupt.o(i.NMI_Handler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from interrupt.o(i.TIMER0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from singlebus.o(i.TIMER1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from interrupt.o(i.TIMER2_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from interrupt.o(i.UART0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from interrupt.o(i.UART1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from interrupt.o(i.UART2_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from interrupt.o(i.UART3_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from interrupt.o(i.WDT_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[2f]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[2d]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[30]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[dc]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[dd]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[de]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[df]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[e0]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
</UL>

<P><STRONG><a name="[9b]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[a0]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
</UL>

<P><STRONG><a name="[32]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[34]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[e4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[e5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[3b]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[58]"></a>AM79R70_active</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tel.o(i.AM79R70_active))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[39]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[3c]"></a>AAI_Write</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, pct25vf.o(i.AAI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AAI_Write &rArr; Auto_Add_IncB_EBSY &rArr; Poll_SO
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WREN
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poll_SO
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncB_EBSY
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncA_EBSY
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[42]"></a>AM79R70_pincfg</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, tel.o(i.AM79R70_pincfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = AM79R70_pincfg
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_standby
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>AM79R70_ringing</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tel.o(i.AM79R70_ringing))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tel_ring
</UL>

<P><STRONG><a name="[43]"></a>AM79R70_standby</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tel.o(i.AM79R70_standby))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_hungdown_treat
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_pincfg
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
</UL>

<P><STRONG><a name="[44]"></a>AddCallNod</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, singlebus.o(i.AddCallNod))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AddCallNod &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[56]"></a>AddrCompare</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, singlebus.o(i.AddrCompare))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[3e]"></a>Auto_Add_IncA_EBSY</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, pct25vf.o(i.Auto_Add_IncA_EBSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Auto_Add_IncA_EBSY &rArr; Poll_SO
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poll_SO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EBSY
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>

<P><STRONG><a name="[41]"></a>Auto_Add_IncB_EBSY</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pct25vf.o(i.Auto_Add_IncB_EBSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Auto_Add_IncB_EBSY &rArr; Poll_SO
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDI
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poll_SO
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBSY
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>

<P><STRONG><a name="[6d]"></a>BCDtoHEX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ds3231.o(i.BCDtoHEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BCDtoHEX
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_little_voice_status
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_black_light_status
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_black_light_status
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>Bus0Manager</STRONG> (Thumb, 380 bytes, Stack size 16 bytes, singlebus.o(i.Bus0Manager))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Bus0Manager &rArr; Bus0SendFinishDeal &rArr; RestartIndication &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>Bus0OutputData</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, singlebus.o(i.Bus0OutputData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bus0OutputData
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_treat
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_pickup_treat
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_hungdown_treat
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt8870_received_treat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_black_light_status
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_black_light_status
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[4a]"></a>Bus0RecDeal</STRONG> (Thumb, 3672 bytes, Stack size 24 bytes, singlebus.o(i.Bus0RecDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Bus0RecDeal &rArr; RestartIndication &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopVoicePlay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH1TimerOut
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH0TimerOut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_active
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceChannelCtx
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIndicationData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallAddr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveCallNod
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirAddrCompare
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddrCompare
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCallNod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0Manager
</UL>

<P><STRONG><a name="[4b]"></a>Bus0SendFinishDeal</STRONG> (Thumb, 2958 bytes, Stack size 24 bytes, singlebus.o(i.Bus0SendFinishDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Bus0SendFinishDeal &rArr; RestartIndication &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopVoicePlay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartVoicePlay
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCallVoiceData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_little_voice_status
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH1TimerOut
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH0TimerOut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_tel_ring
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_play_voice_volue
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_tel_ring
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_active
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceChannelCtx
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallAddr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveCallNod
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirAddrCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0Manager
</UL>

<P><STRONG><a name="[64]"></a>Byte_Program</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pct25vf.o(i.Byte_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Byte_Program
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[8e]"></a>CheckPsk</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uart.o(i.CheckPsk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckPsk
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
</UL>

<P><STRONG><a name="[8a]"></a>Chip_DAC_UpdateValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, interrupt.o(i.Chip_DAC_UpdateValue))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>DBSY</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, pct25vf.o(i.DBSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DBSY
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncB_EBSY
</UL>

<P><STRONG><a name="[67]"></a>DS3231_comm_init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ds3231.o(i.DS3231_comm_init))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
</UL>

<P><STRONG><a name="[65]"></a>DS3231_init</STRONG> (Thumb, 164 bytes, Stack size 4 bytes, ds3231.o(i.DS3231_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DS3231_init &rArr; ReadDS3231_time &rArr; i2cread
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cwrite
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231Status
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_pincfg
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_comm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>DS3231_pincfg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ds3231.o(i.DS3231_pincfg))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
</UL>

<P><STRONG><a name="[57]"></a>DirAddrCompare</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, singlebus.o(i.DirAddrCompare))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[46]"></a>EBSY</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, pct25vf.o(i.EBSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EBSY
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncA_EBSY
</UL>

<P><STRONG><a name="[1c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, interrupt.o(i.EINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EINT0_IRQHandler &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, interrupt.o(i.EINT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EINT1_IRQHandler &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, interrupt.o(i.EINT2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EINT2_IRQHandler &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupt.o(i.EINT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EINT3_IRQHandler &rArr; eint3Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>EWSR</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, pct25vf.o(i.EWSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EWSR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UnLock
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Lock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_UnLock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_Lock
</UL>

<P><STRONG><a name="[73]"></a>FLASH_BufferWrite</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, pct25vf.o(i.FLASH_BufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[74]"></a>FLASH_PageWrite</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, pct25vf.o(i.FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WREN
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
</UL>

<P><STRONG><a name="[76]"></a>Flash_Lock</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pct25vf.o(i.Flash_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_Lock &rArr; W25QXX_Lock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Lock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[79]"></a>Flash_Unlock</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pct25vf.o(i.Flash_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_Unlock &rArr; W25QXX_UnLock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UnLock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_UnLock
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[d9]"></a>GetPskCrc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uart.o(i.GetPskCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetPskCrc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
</UL>

<P><STRONG><a name="[7c]"></a>Get_Byte</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, pct25vf.o(i.Get_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_fast_read
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status_Register
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupt.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>MakeCH0TimerOut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, singlebus.o(i.MakeCH0TimerOut))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[5b]"></a>MakeCH1TimerOut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, singlebus.o(i.MakeCH1TimerOut))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[5d]"></a>MakeCallVoiceData</STRONG> (Thumb, 1122 bytes, Stack size 28 bytes, voice_play.o(i.MakeCallVoiceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MakeCallVoiceData
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_voice_play_sequence
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupt.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupt.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>Poll_SO</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, pct25vf.o(i.Poll_SO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Poll_SO
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_soft_delay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncB_EBSY
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncA_EBSY
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>

<P><STRONG><a name="[68]"></a>ReadDS3231Status</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ds3231.o(i.ReadDS3231Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadDS3231Status &rArr; i2cread
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cwrite
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cread
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
</UL>

<P><STRONG><a name="[69]"></a>ReadDS3231_time</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, ds3231.o(i.ReadDS3231_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadDS3231_time &rArr; i2cread
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cwrite
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cread
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>Read_Status_Register</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pct25vf.o(i.Read_Status_Register))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
</UL>

<P><STRONG><a name="[51]"></a>RemoveCallNod</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, singlebus.o(i.RemoveCallNod))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RemoveCallNod &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[5a]"></a>RestartIndication</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, singlebus.o(i.RestartIndication))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RestartIndication &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_play_voice_volue
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_standby
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveIndicationData
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[78]"></a>SST25VF_Lock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pct25vf.o(i.SST25VF_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SST25VF_Lock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRSR
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EWSR
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Lock
</UL>

<P><STRONG><a name="[7b]"></a>SST25VF_UnLock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pct25vf.o(i.SST25VF_UnLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SST25VF_UnLock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRSR
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EWSR
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
</UL>

<P><STRONG><a name="[52]"></a>SaveCallAddr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, singlebus.o(i.SaveCallAddr))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[50]"></a>SaveIndicationData</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, singlebus.o(i.SaveIndicationData))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[83]"></a>Sector_Erase</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, pct25vf.o(i.Sector_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Sector_Erase
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>

<P><STRONG><a name="[84]"></a>SingleBusInit</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, singlebus.o(i.SingleBusInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SingleBusInit &rArr; init_timer1 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>StartVoicePlay</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, voice_play.o(i.StartVoicePlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StartVoicePlay &rArr; sst_fast_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_fast_read
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_treat
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
</UL>

<P><STRONG><a name="[53]"></a>StopVoicePlay</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, voice_play.o(i.StopVoicePlay))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[bb]"></a>SystemInit</STRONG> (Thumb, 478 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 972 bytes, Stack size 8 bytes, interrupt.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_tel_ring
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 1994 bytes, Stack size 0 bytes, singlebus.o(i.TIMER1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 288 bytes, Stack size 4 bytes, interrupt.o(i.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_DAC_UpdateValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TimerOutDeal</STRONG> (Thumb, 910 bytes, Stack size 24 bytes, singlebus.o(i.TimerOutDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimerOutDeal &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_standby
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceChannelCtx
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, interrupt.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, interrupt.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_server_led_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, interrupt.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, interrupt.o(i.UART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>Usart2RecDeal</STRONG> (Thumb, 3008 bytes, Stack size 32 bytes, uart.o(i.Usart2RecDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Usart2RecDeal &rArr; save_parameter &rArr; sst_write &rArr; FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_parameter
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_little_voice_status
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH1TimerOut
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH0TimerOut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPsk
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_black_light_status
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>Usart2SndCmd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.Usart2SndCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[54]"></a>VoiceChannelCtx</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, singlebus.o(i.VoiceChannelCtx))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_hungdown_treat
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[77]"></a>W25QXX_Lock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pct25vf.o(i.W25QXX_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = W25QXX_Lock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WRSR
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EWSR
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Lock
</UL>

<P><STRONG><a name="[7a]"></a>W25QXX_UnLock</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pct25vf.o(i.W25QXX_UnLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = W25QXX_UnLock &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WRSR
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EWSR
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
</UL>

<P><STRONG><a name="[92]"></a>W25QXX_WRSR</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, pct25vf.o(i.W25QXX_WRSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = W25QXX_WRSR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UnLock
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Lock
</UL>

<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, interrupt.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>WRDI</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, pct25vf.o(i.WRDI))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WRDI
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncB_EBSY
</UL>

<P><STRONG><a name="[3d]"></a>WREN</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pct25vf.o(i.WREN))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>

<P><STRONG><a name="[82]"></a>WRSR</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, pct25vf.o(i.WRSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WRSR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_UnLock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_Lock
</UL>

<P><STRONG><a name="[75]"></a>Wait_Busy</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pct25vf.o(i.Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_soft_delay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status_Register
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WREN
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UnLock
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Lock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_UnLock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25VF_Lock
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
</UL>

<P><STRONG><a name="[5c]"></a>WriteDS3231_time</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ds3231.o(i.WriteDS3231_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WriteDS3231_time &rArr; stop
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[93]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e6]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[a7]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_right_ssid
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[e7]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[e8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ea]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[c2]"></a>channel_pin_config</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, global.o(i.channel_pin_config))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>check_black_light_status</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, ds3231.o(i.check_black_light_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_black_light_status &rArr; Bus0OutputData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>check_ee_485brt</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, singlebus.o(i.check_ee_485brt))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_parameter
</UL>

<P><STRONG><a name="[98]"></a>check_esp8266</STRONG> (Thumb, 1994 bytes, Stack size 56 bytes, wpa_cli.o(i.check_esp8266))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = check_esp8266 &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scon1_Rcvbuf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_str
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_byte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp8266_rst
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>check_little_voice_status</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ds3231.o(i.check_little_voice_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_little_voice_status &rArr; BCDtoHEX
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
</UL>

<P><STRONG><a name="[a8]"></a>crc32</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, wpa_cli.o(i.crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_right_ssid
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>dac_pin_config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, voice_play.o(i.dac_pin_config))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>delay_nop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds3231.o(i.delay_nop))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cwrite
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2cread
</UL>

<P><STRONG><a name="[a2]"></a>eint2Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, extint.o(i.eint2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eint2Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>eint3Isr</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, singlebus.o(i.eint3Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eint3Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_start_timer1
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>esp8266_pin_config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wpa_cli.o(i.esp8266_pin_config))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>esp8266_rst</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wpa_cli.o(i.esp8266_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = esp8266_rst &rArr; soft_delay_half_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>feed_wdt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdt.o(i.feed_wdt))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str_len
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_str
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_wdt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poll_SO
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
</UL>

<P><STRONG><a name="[be]"></a>fm62429_pincfg</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, fm62429.o(i.fm62429_pincfg))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveCallNod
</UL>

<P><STRONG><a name="[d2]"></a>get_checksum</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tel.o(i.get_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_msm7512_data
</UL>

<P><STRONG><a name="[d3]"></a>get_complement</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tel.o(i.get_complement))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_msm7512_data
</UL>

<P><STRONG><a name="[d1]"></a>get_odd_parity</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, tel.o(i.get_odd_parity))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_odd_parity
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_msm7512_data
</UL>

<P><STRONG><a name="[a6]"></a>get_right_ssid</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, wpa_cli.o(i.get_right_ssid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_right_ssid &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>i2cread</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ds3231.o(i.i2cread))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2cread
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nop
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231Status
</UL>

<P><STRONG><a name="[6b]"></a>i2cwrite</STRONG> (Thumb, 158 bytes, Stack size 4 bytes, ds3231.o(i.i2cwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2cwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nop
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231Status
</UL>

<P><STRONG><a name="[90]"></a>init_black_light_status</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, ds3231.o(i.init_black_light_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_black_light_status &rArr; Bus0OutputData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>init_esp8266</STRONG> (Thumb, 1760 bytes, Stack size 56 bytes, wpa_cli.o(i.init_esp8266))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = init_esp8266 &rArr; voice_play_word &rArr; sst_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_continue_play_word
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scon1_Rcvbuf
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_word
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_str
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_byte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_play_voice_volue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp8266_rst
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>init_msm7512</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tel.o(i.init_msm7512))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>init_mt8870</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, tel.o(i.init_mt8870))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>init_parameter</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, singlebus.o(i.init_parameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = init_parameter &rArr; save_parameter &rArr; sst_write &rArr; FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_parameter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ee_485brt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>init_phone_key_buf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tel.o(i.init_phone_key_buf))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt8870_received_treat
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>init_pwd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wpa_cli.o(i.init_pwd))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>init_scon0_Rcvbuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.init_scon0_Rcvbuf))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>init_scon1_Rcvbuf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(i.init_scon1_Rcvbuf))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[c6]"></a>init_ssid</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wpa_cli.o(i.init_ssid))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>init_sst25vfxxx_spi</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, pct25vf.o(i.init_sst25vfxxx_spi))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>init_tel</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, tel.o(i.init_tel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_tel &rArr; soft_delay_half_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>init_timer0</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, timer.o(i.init_timer0))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer0 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>init_timer1</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, timer.o(i.init_timer1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer1 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingleBusInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>init_timer2</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, timer.o(i.init_timer2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer2 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>init_uart0</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, uart.o(i.init_uart0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_uart0 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>init_uart1</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, uart.o(i.init_uart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_uart1 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>init_uart2</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, uart.o(i.init_uart2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_uart2 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>init_uart3</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, uart.o(i.init_uart3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_uart3 &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>init_voice_play_sequence</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, voice_play.o(i.init_voice_play_sequence))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCallVoiceData
</UL>

<P><STRONG><a name="[ba]"></a>init_wdt</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, wdt.o(i.init_wdt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = init_wdt
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>led_pin_config</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, main.o(i.led_pin_config))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>main</STRONG> (Thumb, 1996 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; check_esp8266 &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_word
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_treat
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_str
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_byte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_pickup_treat
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_hungdown_treat
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_tel_ring
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_play_voice_volue
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_parameter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_id
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt8870_received_treat
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_msm7512_data
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_wdt
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart3
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart1
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart0
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer2
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer0
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_tel
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sst25vfxxx_spi
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ssid
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scon0_Rcvbuf
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pwd
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_phone_key_buf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_parameter
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_mt8870
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_msm7512
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_black_light_status
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_right_ssid
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fm62429_pincfg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp8266_rst
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp8266_pin_config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint2Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dac_pin_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_black_light_status
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_pin_config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingleBusInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0Manager
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoHEX
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_pincfg
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_pin_config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ca]"></a>make_msm7512_data</STRONG> (Thumb, 404 bytes, Stack size 28 bytes, tel.o(i.make_msm7512_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = make_msm7512_data &rArr; get_odd_parity
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_odd_parity
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_complement
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCallNod
</UL>

<P><STRONG><a name="[c9]"></a>mt8870_received_treat</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, tel.o(i.mt8870_received_treat))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mt8870_received_treat &rArr; Bus0OutputData
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_phone_key_buf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>read_id</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, pct25vf.o(i.read_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = read_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>reset_parameter</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, singlebus.o(i.reset_parameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = reset_parameter &rArr; save_parameter &rArr; sst_write &rArr; FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_parameter
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>reset_start_timer1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(i.reset_start_timer1))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint3Isr
</UL>

<P><STRONG><a name="[8f]"></a>save_parameter</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, singlebus.o(i.save_parameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = save_parameter &rArr; sst_write &rArr; FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_parameter
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_parameter
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2RecDeal
</UL>

<P><STRONG><a name="[cf]"></a>send_msm7512_test</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, tel.o(i.send_msm7512_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = send_msm7512_test &rArr; soft_delay_half_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send_byte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_odd_parity
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_complement
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>set_play_voice_volue</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, fm62429.o(i.set_play_voice_volue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_play_voice_volue
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
</UL>

<P><STRONG><a name="[59]"></a>set_talk_voice_volue</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, fm62429.o(i.set_talk_voice_volue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_talk_voice_volue
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tel_hungdown_treat
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[d6]"></a>short_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, global.o(i.short_delay))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_play_voice_volue
</UL>

<P><STRONG><a name="[7e]"></a>short_soft_delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, global.o(i.short_soft_delay))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Poll_SO
</UL>

<P><STRONG><a name="[63]"></a>soft_delay_half_ms</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, global.o(i.soft_delay_half_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = soft_delay_half_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;short_soft_delay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_tel
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esp8266_rst
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[3f]"></a>spi_send_data_hard</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pct25vf.o(i.spi_send_data_hard))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_fast_read
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_id
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRSR
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WREN
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRDI
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WRSR
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_Erase
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status_Register
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Byte
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EWSR
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EBSY
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBSY
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Byte_Program
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncB_EBSY
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Add_IncA_EBSY
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>

<P><STRONG><a name="[87]"></a>sst_fast_read</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, pct25vf.o(i.sst_fast_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sst_fast_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartVoicePlay
</UL>

<P><STRONG><a name="[ae]"></a>sst_read</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, pct25vf.o(i.sst_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sst_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_hard
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_continue_play_word
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_word
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_parameter
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>sst_write</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, pct25vf.o(i.sst_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sst_write &rArr; FLASH_BufferWrite &rArr; FLASH_PageWrite &rArr; WREN &rArr; Wait_Busy &rArr; Read_Status_Register &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Busy
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WREN
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_Erase
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Unlock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Lock
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferWrite
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Byte_Program
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AAI_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_parameter
</UL>

<P><STRONG><a name="[6a]"></a>start</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, ds3231.o(i.start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = start
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nop
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231Status
</UL>

<P><STRONG><a name="[61]"></a>start_tel_ring</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, tel.o(i.start_tel_ring))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = start_tel_ring
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_ringing
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
</UL>

<P><STRONG><a name="[6c]"></a>stop</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, ds3231.o(i.stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nop
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231_time
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS3231_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDS3231Status
</UL>

<P><STRONG><a name="[62]"></a>stop_tel_ring</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tel.o(i.stop_tel_ring))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>tel_hungdown_treat</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, tel.o(i.tel_hungdown_treat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tel_hungdown_treat &rArr; set_talk_voice_volue
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_talk_voice_volue
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AM79R70_standby
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceChannelCtx
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>tel_pickup_treat</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, tel.o(i.tel_pickup_treat))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tel_pickup_treat &rArr; Bus0OutputData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>uart1_send_byte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.uart1_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str_len
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[99]"></a>uart1_send_str</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uart.o(i.uart1_send_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart1_send_str
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[d8]"></a>uart1_send_str_len</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uart.o(i.uart1_send_str_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart1_send_str_len
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>

<P><STRONG><a name="[9c]"></a>uart2_send_byte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.uart2_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_str
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>uart2_send_str</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uart.o(i.uart2_send_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart2_send_str
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_byte
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>uart3_send_byte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.uart3_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_msm7512_test
</UL>

<P><STRONG><a name="[ac]"></a>voice_continue_play_word</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, voice_play.o(i.voice_continue_play_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = voice_continue_play_word &rArr; sst_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
</UL>

<P><STRONG><a name="[cd]"></a>voice_play_treat</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, voice_play.o(i.voice_play_treat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = voice_play_treat &rArr; StartVoicePlay &rArr; sst_fast_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartVoicePlay
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>voice_play_word</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, voice_play.o(i.voice_play_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = voice_play_word &rArr; sst_read &rArr; Get_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst_read
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_esp8266
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>wifi_rec_deal</STRONG> (Thumb, 3048 bytes, Stack size 40 bytes, wpa_cli.o(i.wifi_rec_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = wifi_rec_deal &rArr; wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_parameter
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_little_voice_status
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDS3231_time
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH1TimerOut
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeCH0TimerOut
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scon1_Rcvbuf
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart2SndCmd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPsk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send_byte
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_black_light_status
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0OutputData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>wifi_send_cmd</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, wpa_cli.o(i.wifi_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = wifi_send_cmd &rArr; wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPskCrc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_rec_deal
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_esp8266
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerOutDeal
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartIndication
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0SendFinishDeal
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bus0RecDeal
</UL>

<P><STRONG><a name="[da]"></a>wifi_send_data</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wpa_cli.o(i.wifi_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = wifi_send_data &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str_len
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scon1_Rcvbuf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_delay_half_ms
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_send_cmd
</UL>

<P><STRONG><a name="[8c]"></a>wifi_server_led_flash</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wpa_cli.o(i.wifi_server_led_flash))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b5]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart3
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart1
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart0
</UL>

<P><STRONG><a name="[b6]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart3
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart1
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_uart0
</UL>

<P><STRONG><a name="[86]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, voice_play.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_continue_play_word
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartVoicePlay
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_word
</UL>

<P><STRONG><a name="[88]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, voice_play.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_continue_play_word
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartVoicePlay
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_play_word
</UL>

<P><STRONG><a name="[6e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, interrupt.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, interrupt.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, interrupt.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, timer.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer2
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer0
</UL>

<P><STRONG><a name="[b3]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, timer.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer2
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer1
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer0
</UL>

<P><STRONG><a name="[a3]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, extint.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint2Init
</UL>

<P><STRONG><a name="[a4]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extint.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eint2Init
</UL>

<P><STRONG><a name="[94]"></a>_printf_core</STRONG> (Thumb, 988 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>

<P><STRONG><a name="[96]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[95]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
