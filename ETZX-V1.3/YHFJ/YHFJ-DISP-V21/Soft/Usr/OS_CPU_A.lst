A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN .\OS_CPU_A.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ..\Target\OS_CPU_A.ASM SET(LARGE) DEBUG PRINT(.\OS_CPU_A.lst) OBJECT(.\OS_
                      CPU_A.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;******************************************************************************************
                             ***************
                       2     ;**                                            Small RTOS 51 
                       3     ;**                                   The Real-Time Kernel For Keil c51
                       4     ;**
                       5     ;**                                  (c) Copyright 2002-2003, chenmingji
                       6     ;**                                           All Rights Reserved
                       7     ;**
                       8     ;**                                                  V1.12.1
                       9     ;**
                      10     ;**
                      11     ;**--------------------文件信息------------------------------------------------------------
                             ---------------
                      12     ;**文   件   名: OS_CPU_A.ASM
                      13     ;**创   建   人: 陈明计
                      14     ;**版        本: V1.12.1
                      15     ;**最后修改日期:  2002年2月5日
                      16     ;**描　      述:  Small RTOS 51 与CPU(8051系列)相关的汇编程序
                      17     ;**---------------------历史版本信息-------------------------------------------------------
                             ---------------
                      18     ;** 创建人: 陈明计
                      19     ;** 版  本:V0.50
                      20     ;** 日　期: 2002年2月22日
                      21     ;** 描　述: 原始版本
                      22     ;**
                      23     ;**----------------------------------------------------------------------------------------
                             --------------
                      24     ;** 修改人: 陈明计
                      25     ;** 版  本: V1.00
                      26     ;** 日　期: 2002年6月10日
                      27     ;** 描　述: 支持软的非屏蔽中断
                      28     ;**
                      29     ;**----------------------------------------------------------------------------------------
                             --------------
                      30     ;** 修改人: 陈明计
                      31     ;** 版  本: V1.10.3
                      32     ;** 日　期: 2002年9月16日
                      33     ;** 描　述: 修改了LoadCtx代码使之执行更快，代码更小
                      34     ;**         
                      35     ;**----------------------------------------------------------------------------------------
                             --------------
                      36     ;** 修改人: 陈明计
                      37     ;** 版  本: V1.10.4
                      38     ;** 日　期: 2002年10月5日
                      39     ;** 描　述: 将OS_CPU_A.ASM和OS_CPU_A_task16.ASM合并
                      40     ;**
                      41     ;**----------------------------------------------------------------------------------------
                             --------------
                      42     ;** 修改人: 陈明计
                      43     ;** 版  本: V1.11.0
                      44     ;** 日　期: 2002年12月2日
                      45     ;** 描　述: 根据新版本要求使任务堆栈包含Os_Enter_Sum，使优先级最低
                      46     ;**         的任务只保存少量寄存器；增加注释
                      47     ;**----------------------------------------------------------------------------------------
                             --------------
                      48     ;** 修改人: 陈明计
                      49     ;** 版  本: V1.12.0
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     2

                      50     ;** 日　期: 2002年12月30日
                      51     ;** 描　述: 根据新版本要求更改少量代码
                      52     ;**----------------------------------------------------------------------------------------
                             --------------
                      53     ;** 修改人: 陈明计
                      54     ;** 版  本: V1.12.1
                      55     ;** 日　期: 2002年2月5日
                      56     ;** 描　述: 更正LoadCtx中OS_MAX_TASKS为8或16的bug
                      57     ;**---------------------当前版本修订-------------------------------------------------------
                             ----------------
                      58     ;** 修改人:
                      59     ;** 日　期:
                      60     ;** 描　述:
                      61     ;**
                      62     ;**----------------------------------------------------------------------------------------
                             --------------
                      63     ;******************************************************************************************
                             **************/
                      64     ;#include "OS_CPU.H"
                +1    65     
                +1    66     
                +1    67     
                +1    68     
                +1    69     
                +1    70     
                +1    71     
                +1    72     
                +1    73     
                +1    74     
                +1    75     
                +1    76     
                +1    77     
                +1    78     
                +1    79     
                +1    80     
                +1    81     
                +1    82     
                +1    83     
                +1    84     
                +1    85     
                +1    86     
                +1    87     
                +1    88     
                +1    89     
                +1    90     
                +1    91     
                +1    92     
                +1    93     
                +1    94     
                +1    95     
                +1    96     
                +1    97     
                +1    98     
                +1    99     
                +1   100     
                +1   101     
                +1   102     
                +1   103     
                +1   104     
                +1   105     
                +1   106     
                +1   107     
                +1   108     
                +1   109     
                +1   110     
                +1   111     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     3

                +1   112     
                +1   113     
                +1   114     
                +1   115     
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1   163     
                +1   164     
                +1   165     
                +1   166     
                +1   167     SET_EA   MACRO
                +1   168                  SETB     EA
                +1   169              ENDM
                +1   170              
                +1   171     
                +1   172     
                +1   173     
                +1   174     
                +1   175     
                     176     
                     177     ;#include "OS_CFG.H"
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     4

                +1   178     
                +1   179     
                +1   180     
                +1   181     
                +1   182     
                +1   183     
                +1   184     
                +1   185     
                +1   186     
                +1   187     
                +1   188     
                +1   189     
                +1   190     
                +1   191     
                +1   192     
                +1   193     
                +1   194     
                +1   195     
                +1   196     
                +1   197     
                +1   198     
                +1   199     
                +1   200     
                +1   201     
                +1   202     
                +1   203     
                +1   204     
                +1   205     
                +1   206     
                +1   207     
                +1   208     
                +1   209     
                +1   210     
                +1   211     
                +1   212     
                +1   213     
                +1   214     
                +1   215     
                +1   216     
                +1   217     
                +1   218     
                +1   219     
                +1   220     
                +1   221     
                +1   222     
                +1   223     
                +1   224     
                +1   225     
                +1   226     
                +1   227     
                +1   228     
                +1   229     
                +1   230     
                +1   231     
                +1   232     
                +1   233     
                +1   234     
                +1   235     
                +1   236     
                +1   237     
                +1   238     
                +1   239                                                 
                +1   240     
                +1   241     
                +1   242     
                +1   243     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     5

                +1   244     
                +1   245     
                +1   246     
                +1   247     
                +1   248     
                +1   249     
                +1   250     
                +1   251                                                 
                +1   252     
                +1   253     
                +1   254     
                +1   255     
                +1   256     
                +1   257     
                +1   258     
                +1   259     
                +1   260     
                +1   261     
                +1   262     
                +1   263     
                +1           
                +1           
                +1   266     
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1           
                +1   274     
                +1   275     
                +1   276     
                     277     
                     278     
                     279     
                             
                             
                     282     
                     283     
                     284     
                     285     
                     286         NAME    OS_CPU_A_ASM
                     287     
                     288     ?PR?OSCtxSw?OS_CPU_A                     SEGMENT CODE
                     289     ?PR?OSIntCtxSw?OS_CPU_A                  SEGMENT CODE
                     290     ?PR?LoadCtx?OS_CPU_A                     SEGMENT CODE
                     291     ?PR?C_OSCtxSw?OS_CPU_A                   SEGMENT CODE 
                     292     ?PR?_OSTaskStkInit?OS_CPU_A              SEGMENT CODE 
                     293     
                     294     
                     295         EXTRN   CODE (OSMapTbl)
                     296         EXTRN   DATA (OSFastSwap)
                     297         EXTRN   DATA (OSTaskID)
                     298         EXTRN   DATA (OSNextTaskID)
                     299         EXTRN   DATA (OSTsakStackBotton)
                     300         EXTRN   DATA (Os_Enter_Sum)
                     301     IF 0  <> 0
                                 EXTRN   IDATA (Sp2)
                             ENDIF
                     304     IF 0 > 0
                                 EXTRN   DATA (?C_XBP)
                             ENDIF
                     307     
                     308         PUBLIC  _OSTaskStkInit
                     309         PUBLIC  LoadCtx
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     6

                     310         PUBLIC  OSIntCtxSw
                     311         PUBLIC  OSCtxSw
                     312         PUBLIC  STACK
                     313         PUBLIC  C_OSCtxSw
                     314     
                     315     ;****************************************************************************************
                     316     ;?STACK SEGMENT IDATA
                     317     
                     318     ?STACK      SEGMENT   IDATA
                     319     
----                 320             RSEG    ?STACK
0000                 321     STACK:                                          ;堆栈
0000                 322             DS  1
                     323     
                     324     ; /****************************************************************************************
                             *****************
                     325     ; ** 函数名称: OSTaskStkInit
                     326     ; ** 功能描述: 任务堆栈初始化
                     327     ; ** 输　入: 无
                     328     ; ** 输　出 : 无
                     329     ; ** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     330     ; ** 调用模块: LoadCtx
                     331     ; ** 
                     332     ; ** 作　者: 陈明计
                     333     ; ** 日　期: 2002年2月22日
                     334     ; **---------------------------------------------------------------------------------------
                             ----------------
                     335     ; ** 修改人:
                     336     ; ** 日　期:
                     337     ; **---------------------------------------------------------------------------------------
                             ----------------
                     338     ; *****************************************************************************************
                             ***************/
                     339      
----                 340         RSEG  ?PR?_OSTaskStkInit?OS_CPU_A
0000                 341     _OSTaskStkInit:
                     342         USING   0
                     343     ;---- Variable 'cp?147' assigned to Register 'R0' ----
                     344     ;---- Variable 'cp?146' assigned to Register 'R1' ----
                     345     ;---- Variable 'i?145' assigned to Register 'R2' ----
                     346     ;---- Variable 'TaskID?144' assigned to Register 'R3' ----
                     347     ;---- Variable 'ptos?143' assigned to Register 'R4/R5' ----
                     348         
0000 C006            349         PUSH    AR6
0002 C007            350         PUSH    AR7
                     351     ; {
                     352     
                     353     ;         OSFastSwap[0] &= ~OSMapTbl[TaskID];             //清0  
0004 EB              354         MOV     A,R3
0005 900000   F      355         MOV     DPTR,#OSMapTbl
0008 93              356         MOVC    A,@A+DPTR
0009 4200     F      357         ORL     OSFastSwap,A
                             
                             
                                 
                                 
                                 
                                 
                                 
                             
                             
                                 
                                 
                                 
                             
                                 
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     7

                             
                             
                             
                             
                                 
                                 
                                 
                                 
                             
                             
                             
                     383     
                     384     ;     if (TaskID < OSRunningTaskID())
000B EB              385         MOV     A,R3
000C C3              386         CLR     C
000D 9500     F      387         SUBB    A,OSTaskID
000F 502E            388         JNC     StkInit5
                     389     ;     {
                     390     ;         i =  OSRunningTaskID() - TaskID;
0011 C3              391         CLR     C
0012 E500     F      392         MOV     A,OSTaskID
0014 9B              393         SUBB    A,R3
0015 FA              394         MOV     R2,A
                     395     ;         cp = (uint8 idata *)(&(OSTsakStackBotton[TaskID + 1]));
0016 7400     F      396         MOV     A,#LOW (OSTsakStackBotton+01H)
0018 2B              397         ADD     A,R3
0019 F9              398         MOV     R1,A
001A                 399     StkInit8:
                     400     ;         do
                     401     ;         {
                     402     ;             *cp += SP_ADD_BYTE;
001A 7403            403         MOV     A,#3
001C 27              404         ADD     A,@R1
001D F7              405         MOV     @R1,A
                     406     ;             cp++;
001E 09              407         INC     R1
                     408     ;         } while (--i != 0);
001F DAF9            409         DJNZ    R2,StkInit8
                     410     
                     411     ;         cp1 = (uint8 idata *)SP;
0021 A881            412         MOV     R0,SP
                     413     ;         SP = SP + SP_ADD_BYTE;
                     414                 ; SOURCE LINE # 172
0023 7403            415         MOV     A,#3
0025 2581            416         ADD     A,SP
0027 F581            417         MOV     SP,A
                     418     ;         i = SP - (uint8)(OSTsakStackBotton[TaskID + 1]) + 1;
0029 7400     F      419         MOV     A,#LOW (OSTsakStackBotton+01H)
002B 2B              420         ADD     A,R3
002C F9              421         MOV     R1,A
002D 8707            422         MOV     AR7,@R1
002F C3              423         CLR     C
0030 E581            424         MOV     A,SP
0032 9F              425         SUBB    A,R7
0033 FA              426         MOV     R2,A
0034 0A              427         INC     R2
                     428     ;         cp = (uint8 idata *)SP;
0035 A981            429         MOV     R1,SP
0037                 430     StkInit11:
                     431     ;         do
                     432     ;         {
                     433     ;             *cp-- = *cp1--;
0037 E6              434         MOV     A,@R0
0038 F7              435         MOV     @R1,A
0039 18              436         DEC     R0
003A 19              437         DEC     R1
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     8

                     438     ;         } while (--i != 0);
003B DAFA            439         DJNZ    R2,StkInit11
                     440     ;     }
003D 802C            441         SJMP    StkInit12
003F                 442     StkInit5:
                     443     ;     else
                     444     ;     {
                     445     ;         cp1 = (uint8 idata *)(&(OSTsakStackBotton[OSRunningTaskID() + 1]));
003F 7400     F      446         MOV     A,#LOW (OSTsakStackBotton+01H)
0041 2500     F      447         ADD     A,OSTaskID
0043 F8              448         MOV     R0,A
                     449     ;         i = TaskID - OSRunningTaskID();
0044 C3              450         CLR     C
0045 EB              451         MOV     A,R3
0046 9500     F      452         SUBB    A,OSTaskID
0048 FA              453         MOV     R2,A
0049                 454     StkInit15:
                     455     ;         do
                     456     ;         {
                     457     ;             *cp1 -= SP_ADD_BYTE;
0049 74FD            458         MOV     A,#(-3)
004B 26              459         ADD     A,@R0
004C F6              460         MOV     @R0,A
                     461     ;             cp1++;
004D 08              462         INC     R0
                     463     ;         } while (--i != 0);
004E DAF9            464         DJNZ    R2,StkInit15
                     465     ;         
                     466     ;         cp = OSTsakStackBotton[OSRunningTaskID() + 1];
0050 7400     F      467         MOV     A,#LOW (OSTsakStackBotton+01H)
0052 2500     F      468         ADD     A,OSTaskID
0054 F8              469         MOV     R0,A
0055 E6              470         MOV     A,@R0
0056 F9              471         MOV     R1,A
                     472     ;         i = OSTsakStackBotton[TaskID] - cp - SP_ADD_BYTE;
0057 E9              473         MOV     A,R1
0058 24FD            474         ADD     A,#(-3)
005A FF              475         MOV     R7,A
                     476     
005B 7400     F      477         MOV     A,#LOW (OSTsakStackBotton)
005D 2B              478         ADD     A,R3
005E F8              479         MOV     R0,A
005F E6              480         MOV     A,@R0
0060 C3              481         CLR     C
0061 9F              482         SUBB    A,R7
0062 FA              483         MOV     R2,A
                     484     ;         cp1 = cp - SP_ADD_BYTE;
0063 A807            485         MOV     R0,AR7
0065                 486     StkInit18:
                     487     ;         do
                     488     ;         {
                     489     ;             *cp1++ = *cp++;
0065 E7              490         MOV     A,@R1
0066 F6              491         MOV     @R0,A
0067 08              492         INC     R0
0068 09              493         INC     R1
                     494     ;         } while (--i != 0);
0069 DAFA            495         DJNZ    R2,StkInit18
                     496     ;     }
006B                 497     StkInit12:
                     498     ;     cp = OSTsakStackBotton[TaskID];
006B 7400     F      499         MOV     A,#LOW (OSTsakStackBotton)
006D 2B              500         ADD     A,R3
006E F8              501         MOV     R0,A
006F E6              502         MOV     A,@R0
0070 F9              503         MOV     R1,A
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE     9

                     504     ;     *cp++ = (uint16)task % 256;
0071 D0E0            505         pop     ACC
0073 F7              506         MOV     @R1,A
0074 09              507         INC     R1
                     508     ;     *cp++ = (uint16)task / 256;
0075 D0E0            509         pop     ACC
0077 F7              510         MOV     @R1,A
0078 09              511         INC     R1
                     512     
                             
                                 
                                 
                             
                                 
                                 
                             
                     520     ;     *cp = 0;
0079 E4              521         CLR     A
007A F7              522         MOV     @R1,A
                     523     ; }
007B 22              524         RET     
                     525     
                     526     ;/*****************************************************************************************
                             ****************
                     527     ;** 函数名称: LoadCtx
                     528     ;** 功能描述: 任务环境恢复函数
                     529     ;** 输　入: OSTaskID,OSFastSwap
                     530     ;** 输　出 : 无
                     531     ;** 全局变量: 无
                     532     ;** 调用模块: 无
                     533     ;** 
                     534     ;** 作　者: 陈明计
                     535     ;** 日　期: 2002年2月22日
                     536     ;**----------------------------------------------------------------------------------------
                             ---------------
                     537     ;** 修　改: 陈明计
                     538     ;** 日　期: 2002年12月2日
                     539     ;**----------------------------------------------------------------------------------------
                             ---------------
                     540     ;** 修　改: 陈明计
                     541     ;** 日　期: 2003年2月5日
                     542     ;**----------------------------------------------------------------------------------------
                             ---------------
                     543     ;** 修　改:
                     544     ;** 日　期:
                     545     ;**----------------------------------------------------------------------------------------
                             ---------------
                     546     ;******************************************************************************************
                             **************/
                     547     
----                 548         RSEG  ?PR?LoadCtx?OS_CPU_A
0000                 549     LoadCtx:
                     550         USING   0
                     551        
0000 D000     F      552         POP     Os_Enter_Sum            ;恢复关中断计数器
                     553     
                     554     
                                 
                                 
                             
                     558     
                     559                                         ;判断是否需要恢复所有寄存器
0002 E500     F      560         MOV     A,OSTaskID
0004 B40402          561         CJNE    A,#4,LoadCtx_0
0007 8022            562         SJMP    LoadCtx_2
0009                 563     LoadCtx_0:
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    10

0009 900000   F      564         MOV     DPTR,#OSMapTbl
                     565     
000C 93              566         MOVC    A,@A+DPTR
000D 5500     F      567         ANL     A,OSFastSwap
                             
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                             
000F 701A            579         JNZ     LoadCtx_2
                     580                                         ;恢复寄存器
0011 D007            581         POP     7
0013 D006            582         POP     6
0015 D005            583         POP     5
0017 D004            584         POP     4
0019 D003            585         POP     3
001B D002            586         POP     2
001D D001            587         POP     1
001F D000            588         POP     0
0021 D0D0            589         POP     PSW
0023 D082            590         POP     DPL
0025 D083            591         POP     DPH
0027 D0F0            592         POP     B
0029 D0E0            593         POP     ACC
002B                 594     LoadCtx_2:
                     595                                         ;判断是否需要开中断
002B 0500     F      596         INC     Os_Enter_Sum
002D D50002   F      597         djnz    Os_Enter_Sum,LoadCtx_3
                     598         SET_EA                          ;开中断
0032                 600     LoadCtx_3:
0032 22              601         RET
                     602     
                     603     
                     604     ;/*****************************************************************************************
                             ****************
                     605     ;** 函数名称: OSCtxSw
                     606     ;** 功能描述: 任务主动放弃CPU环境保存函数
                     607     ;** 输　入: OSTaskID
                     608     ;** 输　出 : 无
                     609     ;** 全局变量: OSFastSwap
                     610     ;** 调用模块: 无
                     611     ;** 
                     612     ;** 作　者: 陈明计
                     613     ;** 日　期: 2002年2月22日
                     614     ;**----------------------------------------------------------------------------------------
                             ---------------
                     615     ;** 修　改:
                     616     ;** 日　期:
                     617     ;**----------------------------------------------------------------------------------------
                             ---------------
                     618     ;******************************************************************************************
                             **************/
----                 619         RSEG  ?PR?OSCtxSw?OS_CPU_A
0000                 620     OSCtxSw:
                     621         USING   0
                     622     
                     623     
                                 
                                 
                             
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    11

                     627     
0000 C000     F      628         PUSH    Os_Enter_Sum            ;保存关中断计数器
                     629                                         ;设置标志：任务再次恢复运行时不必恢复所有寄存器
0002 900000   F      630         MOV     DPTR,#OSMapTbl
0005 E500     F      631         MOV     A,OSTaskID
                     632     
0007 93              633         MOVC    A,@A+DPTR
0008 4200     F      634         ORL     OSFastSwap,A
                             
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                                 
                             
000A 020000   F      647         LJMP    C_OSCtxSw
                     648     ;****************************************************************************************
                     649     ;/*****************************************************************************************
                             ****************
                     650     ;** 函数名称: C_OSCtxSw
                     651     ;** 功能描述: 堆栈处理函数
                     652     ;** 输　入: 无
                     653     ;** 输　出 : 无
                     654     ;** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     655     ;** 调用模块: LoadCtx
                     656     ;** 
                     657     ;** 作　者: 陈明计
                     658     ;** 日　期: 2002年2月22日
                     659     ;**----------------------------------------------------------------------------------------
                             ---------------
                     660     ;** 修　改: 陈明计
                     661     ;** 日　期: 2002年12月2日
                     662     ;**----------------------------------------------------------------------------------------
                             ---------------
                     663     ;** 修　改:
                     664     ;** 日　期:
                     665     ;**----------------------------------------------------------------------------------------
                             ---------------
                     666     ;******************************************************************************************
                             **************/
----                 667         RSEG  ?PR?C_OSCtxSw?OS_CPU_A
0000                 668     C_OSCtxSw:
                     669     
0000 AA81            670         mov     r2,sp
                     671         
                     672     ;     cp1 = (unsigned char idata *)SP +1;
0002 A881            673         MOV     R0,SP
                     674     
                     675     IF 0  <> 0
                                 mov     sp,#(Sp2-1)             ;堆栈指向临时空间，允许“软非屏蔽中断”
                             ENDIF
                     678     
0004 08              679         INC     R0
                     680     ;     temp = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0005 7400     F      681         MOV     A,#LOW (OSTsakStackBotton+01H)
0007 2500     F      682         ADD     A,OSNextTaskID
0009 F9              683         MOV     R1,A
000A E7              684         MOV     A,@R1
000B FF              685         MOV     R7,A
                     686     ;     cp2 = OSTsakStackBotton[OSTaskID+1];
000C 7400     F      687         MOV     A,#LOW (OSTsakStackBotton+01H)
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    12

000E 2500     F      688         ADD     A,OSTaskID
0010 F9              689         MOV     R1,A
0011 E7              690         MOV     A,@R1
0012 F9              691         MOV     R1,A
                     692     ;     if( OSNextTaskID > OSTaskID)
0013 E500     F      693         MOV     A,OSNextTaskID
0015 D3              694         SETB    C
0016 9500     F      695         SUBB    A,OSTaskID
0018 4033            696         JC      ?C0001
                     697     ;     {
                     698     ;         while(cp2 != (unsigned char idata *)temp)
                     699     ;         {
                     700     ;             *cp1++ = *cp2++;
                     701     ;         }
001A EF              702         MOV     A,R7
001B C3              703         CLR     C
001C 99              704         SUBB    A,R1
001D FE              705         MOV     R6,A
001E                 706     ?C0002:
001E E7              707         MOV     A,@R1
001F F6              708         MOV     @R0,A
0020 08              709         INC     R0
0021 09              710         INC     R1
0022 DEFA            711         DJNZ    R6,?C0002
0024                 712     ?C0003:
                     713     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
0024 7400     F      714         MOV     A,#LOW (OSTsakStackBotton+1)
0026 2500     F      715         ADD     A,OSTaskID
0028 F9              716         MOV     R1,A
0029 E7              717         MOV     A,@R1
002A D3              718         SETB    C
                     719         ;SUBB    A,sp
002B 9A              720         SUBB    A,r2
002C FF              721         MOV     R7,A
                     722     ;         SP = (unsigned char )cp1 - 1;
002D 18              723         DEC     R0;
002E 8881            724         MOV     SP,R0
                     725     ;         for(i = OSTaskID+1;i < OSNextTaskID+1; i++)
                     726     ;         {
                     727     ;             OSTsakStackBotton[i] -= temp;
                     728     ;         }
0030 E500     F      729         MOV     A,OSNextTaskID
0032 C3              730         CLR     C
0033 9500     F      731         SUBB    A,OSTaskID
0035 FE              732         MOV     R6,A
0036 600F            733         JZ      ?C0005
                     734     
0038 7400     F      735         MOV     A,#LOW (OSTsakStackBotton)
003A 2500     F      736         ADD     A,OSTaskID
003C F9              737         MOV     R1,A    
003D EF              738         MOV     A,R7
003E F4              739         CPL     A
003F 04              740         INC     A
0040 FF              741         MOV     R7,A
0041                 742     ?C0004:
0041 09              743         INC     R1
0042 EF              744         MOV     A,R7
0043 27              745         ADD     A,@R1    
0044 F7              746         MOV     @R1,A
0045 DEFA            747         DJNZ    R6,?C0004
0047                 748     ?C0005:
                     749     ;         OSTaskID = OSNextTaskID;
0047 850000   F      750         MOV     OSTaskID,OSNextTaskID
                     751     ;         LoadCtx();    
004A 020000   F      752         LJMP    LoadCtx
                     753     ;     }
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    13

004D                 754     ?C0001:
                     755     ; 
                     756     ;     if( OSNextTaskID != OSTaskID)
004D E500     F      757         MOV     A,OSNextTaskID
004F 6500     F      758         XRL     A,OSTaskID
0051 6036            759         JZ      ?C000r
                     760     ;     {
                     761     ;          cp2--;
                     762     ;          cp1--;
                     763     ;         while(cp2 != (unsigned char idata *)temp)
                     764     ;         {
                     765     ;             *cp2-- = *cp1--;
                     766     ;         }
                     767         ;MOV     A,R7
                     768         ;CLR     C
                     769         ;SUBB    A,R1
                     770         ;MOV     R6,A
0053 E8              771         mov     a,r0
0054 C3              772         clr     c
0055 9F              773         subb    a,r7
0056 FE              774         mov     r6,a
0057                 775     ?C0008:
0057 18              776         DEC     R0
0058 19              777         DEC     R1
0059 E6              778         MOV     A,@R0
005A F7              779         MOV     @R1,A
005B DEFA            780         DJNZ    R6,?C0008
005D                 781     ?C0009:
                     782     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
005D 7400     F      783         MOV     A,#LOW (OSTsakStackBotton+01H)
005F 2500     F      784         ADD     A,OSTaskID
0061 F9              785         MOV     R1,A
0062 E7              786         MOV     A,@R1
0063 D3              787         SETB    C
                     788         ;SUBB    A,SP
0064 9A              789         SUBB    A,r2
0065 FF              790         MOV     R7,A
                     791     ;         SP = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0066 7400     F      792         MOV     A,#LOW (OSTsakStackBotton+01H)
0068 2500     F      793         ADD     A,OSNextTaskID
006A F9              794         MOV     R1,A
006B E7              795         MOV     A,@R1
006C F581            796         MOV     SP,A
                     797     ;         for(i = OSNextTaskID+1;i < OSTaskID+1; i++)
                     798     ;         {
                     799     ;             OSTsakStackBotton[i] += temp;
                     800     ;         }
                     801     
006E E500     F      802         MOV     A,OSTaskID
0070 C3              803         CLR     C
0071 9500     F      804         SUBB    A,OSNextTaskID
0073 600C            805         JZ      ?C0011
                     806     
0075 FE              807         MOV     R6,A
0076 7400     F      808         MOV     A,#LOW (OSTsakStackBotton)
0078 2500     F      809         ADD     A,OSNextTaskID
007A F9              810         MOV     R1,A    
007B                 811     ?C0010:
007B 09              812         INC     R1
007C EF              813         MOV     A,R7
007D 27              814         ADD     A,@R1    
007E F7              815         MOV     @R1,A
007F DEFA            816         DJNZ    R6,?C0010
                     817     
0081                 818     ?C0011:
                     819     ;         OSTaskID = OSNextTaskID;        
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    14

0081 850000   F      820         MOV     OSTaskID,OSNextTaskID
                     821     ;         SP--;
0084 1581            822         DEC     SP
                     823     ;     }
0086                 824     ?C0007:
                     825     ;     LoadCtx();
0086 020000   F      826         LJMP    LoadCtx
0089                 827     ?C000r:
                     828     IF 0  <> 0
                                 mov     SP,r2
                             ENDIF
0089 020000   F      831         LJMP    LoadCtx
                     832     ;****************************************************************************************
                     833     ;/*****************************************************************************************
                             ****************
                     834     ;** 函数名称: OSIntCtxSw
                     835     ;** 功能描述: 中断使任务放弃CPU环境保存函数
                     836     ;** 输　入: OSTaskID
                     837     ;** 输　出 : 无
                     838     ;** 全局变量: OSFastSwap
                     839     ;** 调用模块: 无
                     840     ;** 
                     841     ;** 作　者: 陈明计
                     842     ;** 日　期: 2002年2月22日
                     843     ;**----------------------------------------------------------------------------------------
                             ---------------
                     844     ;** 修　改: 陈明计
                     845     ;** 日　期: 2002年12月2日
                     846     ;**----------------------------------------------------------------------------------------
                             ---------------
                     847     ;** 修　改:
                     848     ;** 日　期:
                     849     ;**----------------------------------------------------------------------------------------
                             ---------------
                     850     ;******************************************************************************************
                             **************/
----                 851         RSEG  ?PR?OSIntCtxSw?OS_CPU_A
0000                 852     OSIntCtxSw:
                     853         USING   0
                     854                                             ;是否是优先级最低任务
0000 7404            855         MOV     A,#4
0002 6500     F      856         XRL     A,OSTaskID
0004 700F            857         JNZ     OSIntCtxSw_0
                     858                                             ;是则不需要保存所有寄存器
                     859     ;SP=SP-13-4                             ;4:两层函数调用堆栈，13：寄存器数目
0006 74EF            860         MOV     A,#(-17)
0008 2581            861         ADD     A,SP
000A F581            862         MOV     SP,A
                     863                                             ;跳转到OSCtxSw，同时通知CPU中断处理完成
000C 7400     F      864         MOV     A, #LOW  OSCtxSw
000E C0E0            865         PUSH    ACC
0010 7400     F      866         MOV     A, #HIGH OSCtxSw
0012 C0E0            867         PUSH    ACC
0014 32              868         RETI
                     869                                             ;需要保存所有寄存器
0015                 870     OSIntCtxSw_0:
                     871     ;SP=SP-4                                ;4:两层函数调用堆栈
0015 74FC            872         MOV     A,#0FCH
0017 2581            873         ADD     A,SP
0019 F581            874         MOV     SP,A
                     875                                             ;设置标志：任务再次恢复运行时需要恢复所有寄存器
001B 900000   F      876         MOV     DPTR,#OSMapTbl
001E E500     F      877         MOV     A,OSTaskID
                     878     
0020 93              879         MOVC    A,@A+DPTR
0021 F4              880         CPL     A
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    15

0022 5200     F      881         ANL     OSFastSwap,A
                             
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                                 
                                 
                             
                             
                     897     
                     898     
                                 
                                 
                             
0024 C000     F      902         PUSH    Os_Enter_Sum            ;保存关中断计数器
                     903                                             ;跳转到堆栈处理，同时通知CPU中断处理完成
0026 7400     F      904         MOV     A, #LOW  C_OSCtxSw
0028 C0E0            905         PUSH    ACC
002A 7400     F      906         MOV     A, #HIGH C_OSCtxSw
002C C0E0            907         PUSH    ACC
002E 32              908         RETI
                     909     
                     910     ;/*****************************************************************************************
                             ****************
                     911     ;**                            End Of File
                     912     ;******************************************************************************************
                             **************/
                     913         END
A51 MACRO ASSEMBLER  OS_CPU_A                                                             02/18/2019 16:52:22 PAGE    16

SYMBOL TABLE LISTING
------ ----- -------


N A M E                      T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . .  C ADDR   004DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0002. . . . . . . . . . .  C ADDR   001EH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0003. . . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0004. . . . . . . . . . .  C ADDR   0041H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0005. . . . . . . . . . .  C ADDR   0047H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0007. . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0008. . . . . . . . . . .  C ADDR   0057H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0009. . . . . . . . . . .  C ADDR   005DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C000R. . . . . . . . . . .  C ADDR   0089H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0010. . . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0011. . . . . . . . . . .  C ADDR   0081H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?PR?C_OSCTXSW?OS_CPU_A. . .  C SEG    008CH       REL=UNIT
?PR?LOADCTX?OS_CPU_A. . . .  C SEG    0033H       REL=UNIT
?PR?OSCTXSW?OS_CPU_A. . . .  C SEG    000DH       REL=UNIT
?PR?OSINTCTXSW?OS_CPU_A . .  C SEG    002FH       REL=UNIT
?PR?_OSTASKSTKINIT?OS_CPU_A  C SEG    007CH       REL=UNIT
?STACK. . . . . . . . . . .  I SEG    0001H       REL=UNIT
ACC . . . . . . . . . . . .  D ADDR   00E0H   A   
AR6 . . . . . . . . . . . .  D ADDR   0006H   A   
AR7 . . . . . . . . . . . .  D ADDR   0007H   A   
B . . . . . . . . . . . . .  D ADDR   00F0H   A   
C_OSCTXSW . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
DPH . . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . . . . . .  B ADDR   00A8H.7 A   
LOADCTX . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_0 . . . . . . . . .  C ADDR   0009H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_2 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_3 . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?LOADCTX?OS_CPU_A
OSCTXSW . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSCTXSW?OS_CPU_A
OSFASTSWAP. . . . . . . . .  D ADDR   -----       EXT
OSINTCTXSW. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSINTCTXSW_0. . . . . . . .  C ADDR   0015H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSMAPTBL. . . . . . . . . .  C ADDR   -----       EXT
OSNEXTTASKID. . . . . . . .  D ADDR   -----       EXT
OSTASKID. . . . . . . . . .  D ADDR   -----       EXT
OSTSAKSTACKBOTTON . . . . .  D ADDR   -----       EXT
OS_CPU_A_ASM. . . . . . . .  N NUMB   -----       
OS_ENTER_SUM. . . . . . . .  D ADDR   -----       EXT
PSW . . . . . . . . . . . .  D ADDR   00D0H   A   
SP. . . . . . . . . . . . .  D ADDR   0081H   A   
STACK . . . . . . . . . . .  I ADDR   0000H   R   SEG=?STACK
STKINIT11 . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT12 . . . . . . . . .  C ADDR   006BH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT15 . . . . . . . . .  C ADDR   0049H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT18 . . . . . . . . .  C ADDR   0065H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT5. . . . . . . . . .  C ADDR   003FH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT8. . . . . . . . . .  C ADDR   001AH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
_OSTASKSTKINIT. . . . . . .  C ADDR   0000H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
