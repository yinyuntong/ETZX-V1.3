C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *                                  湖南一特电子股份有限公司
   4          *                               All Rights Reserved
   5          *                                        
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称               :main.c
   9          *文件描述               :主函数
  10          *创建人                 :尹运同
  11          *创建日期               :2008-9-22
  12          *版本号                 :V1.0
  13          *注释                   :                                       
  14          *----------------------------------------------------------
  15          *修改人                         :
  16          *修改日期                       :
  17          *版本号                 :
  18          *注释                   :
  19          ***********************************************************
  20          */
  21          #define _IN_MAIN_
  22          #include "config.h"
  23          
  24          uint16  xdata uiIsrTimerCount = ISR_INC_COUNT;                                  //系统时钟定时值
  25          uint8   OS_Q_MEM_SEL    byMainCmdQ[16];                                         //主线程消息队列
  26          STLocalControl  xdata stLocalControl;                                           //全局变量结构体
  27          
  28          
  29          //动态管理内存大小定义
  30          #define MALLOC_MEM_SIZE         100
  31          //uint8                         xdata                   byMallocMem[MALLOC_MEM_SIZE];
  32          
  33          void Ex0Int(void)       interrupt X0_INTNO              //0号中断
  34          {
  35   1              EX0=0;
  36   1      }
  37          
  38          void TIMER1Int(void) interrupt T1_INTNO         //3号中断
  39          {
  40   1              ET1=0;
  41   1      }
  42          
  43          #if STC12C5A==true
  44          void AdcInt(void)       interrupt ADC_INTNO             //5号中断
  45          {
  46   1              EADC=0;
  47   1      }
  48          
  49          void LvdInt(void) interrupt LVD_INTNO           //6号中断
  50          {
  51   1              ELVD=0;
  52   1      }
  53          
  54          //void PcaInt(void) interrupt PCA_INTNO         //7号中断
  55          //{
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 2   

  56          //      CMOD    &=      !ECF;                   //禁止 PCA计数器溢出中断   
  57          //      CCAPM0  &=      !PCA0_ECCF;             //禁止CCF0中断
  58          //      CCAPM1  &=      !PCA1_ECCF;             //禁止CCF1中断  
  59          //}
  60          
  61          #endif
  62          /***********************************************************/
  63          void UserTickTimer(void)   /* 系统定时中断中调用的用户函 */
  64          { 
  65   1      #if STC90 == 1  
                      TF2=0;
              #endif
  68   1      #if STC12C5A==1
  69   1              uiIsrTimerCount+=ISR_INC_COUNT;
  70   1              CCAP1L = (uint8)uiIsrTimerCount;
  71   1              CCAP1H = (uint8)(uiIsrTimerCount>>8);
  72   1              CCF1=0;
  73   1      #endif
  74   1      
  75   1              if(stUsartCfg.byRecTimeout!=0) stUsartCfg.byRecTimeout--;
  76   1      }
  77          
  78          
  79          void Send_Data(uint8 *Databuf,uint8 xdata l)
  80          { 
  81   1      #if DEBUG==1
                  uint8 xdata i;
                      WDT_CONTR = 0x3d; 
              
                  ES=0;
                      for(i=0;i<l;i++)
                   {
                         SBUF=*Databuf;
                     while(!TI);
                         TI=0;
                         Databuf++;
                       }
                      ES=1;
              #endif
  95   1      }
*** WARNING C280 IN LINE 79 OF MAIN.C: 'Databuf': unreferenced local variable
*** WARNING C280 IN LINE 79 OF MAIN.C: 'l': unreferenced local variable
  96          
  97          
  98          void Send_Data_Byte(uint8 SendData)
  99          { 
 100   1      #if DEBUG==1
                  ES=0;
                  SBUF=SendData;
                  while(!TI);
                      TI=0;
                      ES=1;
              #endif
 107   1      }
*** WARNING C280 IN LINE 98 OF MAIN.C: 'SendData': unreferenced local variable
 108          
 109          /*---------------------------------------------------------------------------
 110          函数原型: void Delayms(uint16 ms)
 111          参数说明: ms--需要延时的值
 112          返 回 值: 无
 113          函数功能：延时程序(对于18.432M晶振单指令周期延时1mS)
 114          ----------------------------------------------------------------------------*/
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 3   

 115          void Delayms(uint16 ms)   
 116          {
 117   1         uint16 xdata i;
 118   1         for(;ms!=0;ms--)
 119   1              {
 120   2                      for(i=900;i!=0;i--);
 121   2                      WDT_CONTR = 0x3d; 
 122   2              }
 123   1      }
 124          
 125          
 126          
 127          /**********************************************************
 128          *函数名称                       :Init   
 129          *函数描述               :硬件初始化操作
 130          *输入参数               :
 131          *返回值                         :       
 132          *全局变量                       :
 133          *调用模块                       :
 134          ***********************************************************
 135          *创建人                 :尹运同
 136          *创建日期                       :2008-9-22
 137          ***********************************************************
 138          *修改人                         :
 139          *修改日期               :
 140          *注释                   :
 141          **********************************************************/
 142          void Init(void)
 143          {
 144   1              CMOD = 0x02;
 145   1              CCON = 0x00;    
 146   1              CL = 0x00;
 147   1              CH = 0x00;
 148   1      
 149   1              CCAPM0 = 0x11;  //下降沿中断,使能
 150   1              
 151   1              
 152   1              CCAP1L = (uint8)uiIsrTimerCount;
 153   1              CCAP1H = (uint8)(uiIsrTimerCount>>8);
 154   1              //设置PCA模块1为16位软件定时器,ECCF1=1允许PCA模块1中断
 155   1              CCAPM1 = 0x49;
 156   1               
 157   1              //启动PCA计数器计数
 158   1              CR = 1; 
 159   1      
 160   1              
 161   1              //复位看门狗
 162   1              WDT_CONTR = 0x3d; 
 163   1              //IO口配置
 164   1              //STC12C52/5A系列:M0=0,M1=0:准双向，M0=0,M1=1:高阻，M0=1,M1=0:推挽，M0=1,M1=1:开漏
 165   1              
 166   1              //特别注意:因输入口线上外围未配置上拉电阻，不能配置成高阻输入，只能配置成准双向，否则该脚在高电平时处于悬
             -浮状态
 167   1      
 168   1              P4SW=P46EN|P45EN|P44EN; //P4口设置成IO口
 169   1      
 170   1              
 171   1              //IO初始化
 172   1              SSD1963_CS      = 1;
 173   1              SST25VF_CS = 1;
 174   1              GT23L_CS = 1;
 175   1              ADS7843_CS = 1;
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 4   

 176   1              EPH1660_CS = 0;
 177   1      
 178   1      
 179   1      
 180   1      
 181   1              //全局变量初始化为0
 182   1              memset(&(stLocalControl.byChar1),0x00,sizeof(STLocalControl));
 183   1              
 184   1              Delayms(200);
 185   1      
 186   1              
 187   1              //读取系统配置字
 188   1              InitParameter();
 189   1      
 190   1              //串口初始化
 191   1              UsartInit();
 192   1      
 193   1      
 194   1              //单总线初始化  
 195   1              SingleBusInit();
 196   1      
 197   1      
 198   1              //复位EPH1660
 199   1      //      ResetEPH1660();
 200   1      
 201   1      
 202   1              //设置MCU为SPI主方
 203   1              MCUMasterSPI();
 204   1      
 205   1      
 206   1              //存储器初始化
 207   1              SST25VF_Init();
 208   1      
 209   1      //      FRAM_TEST();
 210   1      
 211   1              //RGB驱动芯片初始化
 212   1              InitSSD1963();  
 213   1      
 214   1                      
 215   1              //设置上电登记标志,灯闪烁时间初始化,超时设置(超时后自动发送上电登记命令)        
 216   1              bLanding = 1;   
 217   1              MakeCH0TimerOut(50, 0); 
 218   1      
 219   1              ShowPowerUpFace(DIS_FRAM_MEM1); //放在第1页
 220   1              
 221   1              stLocalControl.stTime.byYear=0x08;
 222   1              stLocalControl.stTime.byMonth=0x08;
 223   1              stLocalControl.stTime.byDay=0x08;
 224   1              stLocalControl.stTime.byHour=0x08;
 225   1              stLocalControl.stTime.byMin=0x08;
 226   1              stLocalControl.byDisplayFace=0;
 227   1      
 228   1              stLocalControl.bySecondFlashTime=25;
 229   1              stLocalControl.byDispNumSetOkTime=0;
 230   1      
 231   1              Read_Cont(WARD_FACE_DATA_START_ADDR,WARD_FACE_DATA_LEN,WardDataBuff);
 232   1              StorSecInfo(DIS_FRAM_MEM0);
 233   1      //      OSMemInit(byMallocMem,MALLOC_MEM_SIZE);
 234   1              
 235   1      }
 236          /**********************************************************
 237          *函数名称                       :GetMessage     
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 5   

 238          *函数描述               :获取主线程消息队列中的消息(无消息则挂起自身)
 239          *输入参数               :Msg:存储消息指针
 240          *返回值                         :       
 241          *全局变量                       :
 242          *调用模块                       :
 243          ***********************************************************
 244          *创建人                 :尹运同
 245          *创建日期                       :2008-9-22
 246          ***********************************************************
 247          *修改人                         :
 248          *修改日期               :
 249          *注释                   :
 250          **********************************************************/
 251          void GetMessage(uint8 data *Msg)
 252          {
 253   1              OSQPend(Msg, byMainCmdQ, 0);
 254   1      }
 255          /**********************************************************
 256          *函数名称                       :DispatchMessage        
 257          *函数描述               :分发处理获取的主线程消息
 258          *输入参数               :Msg:消息,高4位是命令类型,低4位是命令数据
 259          *返回值                         :       
 260          *全局变量                       :
 261          *调用模块                       :
 262          ***********************************************************
 263          *创建人                 :尹运同
 264          *创建日期                       :2008-9-22
 265          ***********************************************************
 266          *修改人                         :
 267          *修改日期               :
 268          *注释                   :
 269          **********************************************************/
 270          void DispatchMessage(uint8 Msg)
 271          {
 272   1              switch(Msg&0xf0)
 273   1              {
 274   2                      case BUS0_REC:                                                                          //总线0收到数据帧
 275   2      //                      bBus0RecFinish = 0;
 276   2      //                      Bus0RecData(byBus0RecData);
 277   2      //                      Bus0RecDeal();
 278   2                              break;
 279   2                      case BUS0_SND:                                                                          //总线0数据发送完成
 280   2                              Bus0SendDeal();
 281   2                              break;                  
 282   2                      case TIMER_OUT:                                                                         //超时处理
 283   2                              TimerOutDeal();
 284   2                              break;                  
 285   2              }       
 286   1      }
 287          /**********************************************************
 288          *函数名称                       :MainTask       
 289          *函数描述               :系统主线程,负责整个系统的消息处理
 290          *输入参数               :
 291          *返回值                         :       
 292          *全局变量                       :
 293          *调用模块                       :
 294          ***********************************************************
 295          *创建人                 :尹运同
 296          *创建日期                       :2008-9-22
 297          ***********************************************************
 298          *修改人                         :
 299          *修改日期               :
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 6   

 300          *注释                   :
 301          **********************************************************/
 302          void MainTask(void)
 303          {
 304   1              static uint8 data Msg;  
 305   1              
 306   1              //系统硬件初始化
 307   1              Init(); 
 308   1              //创建主线程消息队列    
 309   1              OSQCreate(byMainCmdQ, 16);
 310   1              //以下为创建任务线程    
 311   1              OSTaskCreate(Bus0Manage, NULL, 1);      
 312   1              OSTaskCreate(TimerOutManager, NULL, 2);
 313   1      //      OSTaskCreate(EPH1660Manager, NULL, 3);
 314   1              OSTaskCreate(DispManager, NULL, 3);     
 315   1              //进入消息循环  
 316   1      
 317   1              while(TRUE)
 318   1              {
 319   2                      WDT_CONTR = 0x3d; 
 320   2                      GetMessage(&Msg);
 321   2                      DispatchMessage(Msg);
 322   2                      if(bUsart0RecFinish)                                                                    //串口0收到一帧数据
 323   2                      {       
 324   3                              bUsart0RecFinish=0;
 325   3                              Usart0RecDeal();        
 326   3                      }       
 327   2                      
 328   2      /*              if(byBus0FreqNum>0)
 329   2                      {
 330   2                              Bus0RecDeal();
 331   2                      }
 332   2      */              
 333   2      
 334   2      
 335   2                      if(Bus0RxBuffLen() >= BUS0_FREQ_SIZE)
 336   2                      {       //有一帧完整的数据在接收队列中 
 337   3                              OS_ENTER_CRITICAL();
 338   3                              stLocalControl.stBusDealFreq.bySndSecAddr= byBus0RxQ[byBus0RxHead];
 339   3                              IncBus0RxPtr(byBus0RxHead);
 340   3                              stLocalControl.stBusDealFreq.bySndRoomAddr= byBus0RxQ[byBus0RxHead];
 341   3                              IncBus0RxPtr(byBus0RxHead);
 342   3                              stLocalControl.stBusDealFreq.bySndBedAddr= byBus0RxQ[byBus0RxHead];
 343   3                              IncBus0RxPtr(byBus0RxHead);
 344   3                              stLocalControl.stBusDealFreq.byCmd= byBus0RxQ[byBus0RxHead];
 345   3                              IncBus0RxPtr(byBus0RxHead);
 346   3                              stLocalControl.stBusDealFreq.byRecSecAddr= byBus0RxQ[byBus0RxHead];
 347   3                              IncBus0RxPtr(byBus0RxHead);
 348   3                              stLocalControl.stBusDealFreq.byRecRoomAddr= byBus0RxQ[byBus0RxHead];
 349   3                              IncBus0RxPtr(byBus0RxHead);
 350   3                              stLocalControl.stBusDealFreq.byRecBedAddr= byBus0RxQ[byBus0RxHead];
 351   3                              IncBus0RxPtr(byBus0RxHead);
 352   3                              OS_EXIT_CRITICAL();     
 353   3                              Bus0RecDeal();
 354   3                      }
 355   2                      else
 356   2                      {       //没有一帧完整的数据在发送队列中了
 357   3                              byBus0RxHead = byBus0RxTail = 0;
 358   3                      }
 359   2                      
 360   2              }
 361   1      } 
C51 COMPILER V9.00   MAIN                                                                  02/18/2019 16:52:19 PAGE 7   

 362          /**********************************************************
 363          *函数名称                       :main   
 364          *函数描述               :系统主函数,整个软件的入口
 365          *输入参数               :
 366          *返回值                         :       
 367          *全局变量                       :
 368          *调用模块                       :
 369          ***********************************************************
 370          *创建人                 :尹运同
 371          *创建日期                       :2008-9-22
 372          ***********************************************************
 373          *修改人                         :
 374          *修改日期               :
 375          *注释                   :
 376          **********************************************************/
 377          void main(void)
 378          {       
 379   1              EPH1660_CS=0;   //禁止
 380   1              Delayms(200);
 381   1              //操作系统初始化        
 382   1              OSInit();
 383   1      
 384   1              led0=1;
 385   1              //创建系统主线程
 386   1              OSTaskCreate(MainTask, NULL, 0); 
 387   1              
 388   1              while(1)
 389   1          {
 390   2                      _nop_();
 391   2       //      PCON = PCON | 0x01;                    //CPU进入休眠状态           
 392   2          }    
 393   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    694    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    134       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =     16    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
