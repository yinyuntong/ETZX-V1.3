C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          ************************Copyright(c)************************
   3          *                                  湖南一特电子股份有限公司
   4          *                               All Rights Reserved
   5          *                                        
   6          *
   7          *-----------------------文件信息---------------------------
   8          *文件名称               :TFT.c
   9          *文件描述               :TFT彩屏驱动程序
  10          *创建人                 :尹运同
  11          *创建日期               :2008-9-22
  12          *版本号                 :V1.0
  13          *注释                                                           
  14          *----------------------------------------------------------
  15          *修改人                         :
  16          *修改日期                       :
  17          *版本号                 :
  18          *注释                   :
  19          ***********************************************************
  20          */
  21          #define _IN_LCD_
  22          #include "config.h"
  23          
  24          
  25          union union_type xdata unOperData;
  26          
  27          uint8 xdata fontbuf1,fontbuf2,fontbuf3;
  28          
  29          
  30          uint8   xdata WardDataBuff[WARD_FACE_DATA_LEN];
  31          
  32          
  33          uint8 code ColonCode16x32[64]={ 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  34                                                                          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x03,0xC0,0x03,0xC0,
  35                                                                          0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,
  36                                                                          0x03,0xC0,0x03,0xC0,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  37                                                                          0x00,0x00,0x00,0x00,0x00,0x00,};/*":",0*/
  38          /* (16 X 32 , 宋体 )*/
  39          
  40          
  41          void Send_Ssd1963_Command(uint8 ssd1963_command);
  42          void Send_Ssd1963_Data(uint8 ssd1963_data);
  43          void InitSSD1963(void);
  44          void Set_Display_Area(uint16 start_x,uint16 end_x,uint16 start_y,uint16 end_y);
  45          void Display_Dot(uint16 x,uint16 y,uint16  color,uint8 page);
  46          void Display_HLine(uint16 x,uint16  y,uint16  width,uint16  color,uint8 page);
  47          void Display_VLine(uint16  x,uint16  y,uint16  height,uint16  color,uint8 page);
  48          void Lcd_Clear(uint16  color,uint8 page);
  49          void Display_ASCII(uint16 x,uint16 y,uint8 *p,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page);
  50          void Display_Chinese(uint16 x,uint16 y,uint8 *p,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page);
  51          
  52          
  53          void ShowBroadFace(uint8 byRoomAddr, uint8 byBedAddr, bit bSelf,uint8 page);
  54          void ShowTalkFace(uint8 byRoomAddr, uint8 byBedAddr,uint8 page);
  55          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 2   

  56          
  57          void ShowStartInfusionCall(uint8 page);
  58          void ShowStartServiceCall(uint8 page);
  59          void ShowStartEmergencyCall(uint8 page);
  60          void ShowStartHelpCall(uint8 page);
  61          void ShowCallSuccess(uint8 page);
  62          void lcd_fangda_dis_text(uint16 x, uint16 y, uint8 type_x_wide, uint8 type_y_height, 
  63                                                           uint8 mul_row,uint8 mul_col,uint16 fcolor,uint16 bcolor,uint8 *p,uint8 page);
  64          
  65          
  66          
  67          #define WriteData8(sdata) {DataPortL=(sdata); SSD1963_WR=0; SSD1963_WR=1;}  
  68                  
  69          #define WriteData16(sdata) {DataPortL=(sdata); DataPortH=(sdata)>>8;SSD1963_WR=0; SSD1963_WR=1;} 
  70          
  71          /*---------------------------------------------------------------------------
  72          函数原型: void Send_Ssd1963_Command(uint8 xdata ssd1963_command)
  73          参数说明: ssd1963_command:需要写的命令
  74          返 回 值: 无
  75          函数功能: 写命令
  76          ----------------------------------------------------------------------------*/
  77          void Send_Ssd1963_Command(uint8 ssd1963_command)
  78          {
  79   1              SSD1963_CD=0;
  80   1              SSD1963_CS=0;
  81   1              DataPortL=ssd1963_command;
  82   1              SSD1963_WR=0; 
  83   1              SSD1963_WR=1;
  84   1              SSD1963_CS=1;
  85   1              SSD1963_CD=1;  
  86   1        
  87   1      }
  88          /*---------------------------------------------------------------------------
  89          函数原型: void Send_Ssd1963_Data(uint8 xdata ssd1963_data)
  90          参数说明: ssd1963_data:需要写的数据
  91          返 回 值: 无
  92          函数功能: 写数据
  93          ----------------------------------------------------------------------------*/
  94          void Send_Ssd1963_Data(uint8 ssd1963_data)
  95          {
  96   1              SSD1963_CS=0;
  97   1              DataPortL=ssd1963_data;
  98   1              SSD1963_WR=0;
  99   1              SSD1963_WR=1;
 100   1              SSD1963_CS=1;
 101   1      
 102   1      }
 103          
 104          
 105          void SSD1963Data_16(uint sdata)
 106          
 107          {
 108   1              SSD1963_CS=0;
 109   1              DataPortL=sdata;//temp.UByte[1];
 110   1              DataPortH=sdata>>8;//temp.UByte[0];
 111   1              SSD1963_WR=0;
 112   1              SSD1963_WR=1;
 113   1              SSD1963_CS=1;
 114   1      }
 115          
 116          
 117          void SetScrollArea(uint16 top, uint16 scroll, uint16 bottom)
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 3   

 118          {
 119   1      
 120   1              Send_Ssd1963_Command(cmd_set_scroll_area);
 121   1              Send_Ssd1963_Data(top>>8);
 122   1              Send_Ssd1963_Data(top);
 123   1              Send_Ssd1963_Data(scroll>>8);
 124   1              Send_Ssd1963_Data(scroll);
 125   1              Send_Ssd1963_Data(bottom>>8);
 126   1              Send_Ssd1963_Data(bottom);
 127   1      }
 128          
 129          void SetScrollStart(uint16 line)
 130          {
 131   1              Send_Ssd1963_Command(cmd_set_scroll_start);
 132   1              Send_Ssd1963_Data(line>>8);
 133   1              Send_Ssd1963_Data(line); 
 134   1      }
 135          
 136          void Set_VisualPage(uint8 VisualPage)
 137          {
 138   1              SetScrollStart(VisualPage*272);
 139   1      }
 140          
 141          /*--------------------------------------------------------------------------------------------
 142          函数原型: void Set_Display_Area(uint16 xdata start_x,uint16 xdata end_x,uint16 xdata start_y,uint16 xdata 
             -end_y) 
 143          参数说明: start_x:点的X起始坐标
 144                    end_x:点的X结束坐标
 145                            start_y:点的Y起始坐标
 146                    end_y:点的Y结束坐标
 147          返 回 值: 无
 148          函数功能: 设置屏幕区域
 149          ----------------------------------------------------------------------------------------------*/
 150          void Set_Display_Area(uint16  start_x,uint16  end_x,uint16 start_y,uint16  end_y)
 151          {
 152   1        uint8 xdata shigh_x1,slow_x1,shigh_x2,slow_x2;
 153   1        uint8 xdata shigh_y1,slow_y1,shigh_y2,slow_y2;
 154   1        shigh_x1=start_x/256;
 155   1        slow_x1=start_x%256;
 156   1        shigh_x2=end_x/256;
 157   1        slow_x2=end_x%256;
 158   1        shigh_y1=start_y/256;
 159   1        slow_y1=start_y%256;
 160   1        shigh_y2=end_y/256;
 161   1        slow_y2=end_y%256;
 162   1        Send_Ssd1963_Command(0x2A);
 163   1        Send_Ssd1963_Data(shigh_x1);
 164   1        Send_Ssd1963_Data(slow_x1);
 165   1        Send_Ssd1963_Data(shigh_x2);
 166   1        Send_Ssd1963_Data(slow_x2);
 167   1        Send_Ssd1963_Command(0x2B);
 168   1        Send_Ssd1963_Data(shigh_y1);
 169   1        Send_Ssd1963_Data(slow_y1);
 170   1        Send_Ssd1963_Data(shigh_y2);
 171   1        Send_Ssd1963_Data(slow_y2);
 172   1      }
 173          
 174          
 175          uint16 GetColor(uint8 srgb)
 176          {
 177   1              if(srgb==BLACK_CODE)    return(BLACK);
 178   1              else if(srgb==RED_CODE) return(RED);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 4   

 179   1              else if(srgb==GREEN_CODE)       return(GREEN);  
 180   1              else if(srgb==POWDER_BLUE_CODE) return(POWDER_BLUE);
 181   1              else if(srgb==BLUE_CODE)        return(BLUE);
 182   1              else if(srgb==YELLOW_CODE)      return(YELLOW);
 183   1              else if(srgb==PURPLE_CODE)      return(PURPLE);
 184   1              else if(srgb==CYAN_CODE)        return(CYAN);           
 185   1              else if(srgb==WHITE_CODE)       return(WHITE);
 186   1              else return(WHITE); 
 187   1      }
 188          /*--------------------------------------------------------------------------------------------
 189          函数原型: void Lcd_Clear(uint32 xdata color)
 190          参数说明: color:清屏的颜色
 191          返 回 值: 无
 192          函数功能: 清屏
 193          ----------------------------------------------------------------------------------------------*/
 194          void Lcd_Clear(uint16  color,uint8 page)
 195          {
 196   1        uint16 xdata k,j;
 197   1      
 198   1        Set_Display_Area(0,479,page*LCD_PIX_Y,page*LCD_PIX_Y+271);
 199   1        Send_Ssd1963_Command(0x2C);
 200   1        
 201   1        WDT_CONTR = 0x3d; 
 202   1        SSD1963_CS=0;
 203   1        for(k=0;k<480;k++)
 204   1          {
 205   2           for(j=0;j<272;j++)
 206   2           {
 207   3                      WriteData16(color);
 208   3               }
 209   2          }
 210   1        SSD1963_CS=1;
 211   1      }
 212          
 213          /*------------------------------------------------------------------------------
 214          函数原型: void Display_Dot(uint16 xdata x,uint16 xdata y,uint32 xdata color)   
 215          参数说明: x:点的X坐标,y:点的Y坐标,color:点的颜色
 216          返 回 值: 无
 217          函数功能: 在屏幕上显示点
 218          -------------------------------------------------------------------------------*/
 219          void Display_Dot(uint16  x,uint16  y,uint16  color,uint8 page)  
 220          {  
 221   1      
 222   1        Set_Display_Area(x,x,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y);
 223   1        Send_Ssd1963_Command(0x2C);
 224   1        SSD1963_CS=0;
 225   1        WriteData16(color);
 226   1        SSD1963_CS=1;
 227   1      }
 228          
 229          
 230          /*void Display_Dot1(uint16  x,uint16  y,uint8 srgb,uint8 page)  
 231          {  
 232            uint16 xdata color;
 233            color= GetColor(srgb);
 234           
 235            Set_Display_Area(x,x,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y);
 236            Send_Ssd1963_Command(0x2C);
 237            SSD1963_CS=0;
 238            WriteData16(color);
 239            SSD1963_CS=1;
 240          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 5   

 241          }*/
 242          
 243          
 244          //将单点放大显示
 245          void Display_Dot_Mul(uint16  x,uint16  y,uint16  color,uint8 page)  
 246          {  
 247   1        uint8 xdata i;
 248   1        Set_Display_Area(x-1,x+1,y-1+page*LCD_PIX_Y,y+1+page*LCD_PIX_Y);
 249   1        Send_Ssd1963_Command(0x2C);
 250   1        WDT_CONTR = 0x3d;   
 251   1        SSD1963_CS=0;
 252   1        for(i=0;i<9;i++)
 253   1              WriteData16(color);
 254   1        SSD1963_CS=1;
 255   1      
 256   1      }
 257          
 258          /*-------------------------------------------------------------------------------------------------
 259          函数原型: void Display_HLine(uint16 xdata x,uint16 xdata y,uint16 xdata width,uint32 xdata color) 
 260          参数说明: x:点的X坐标,y:点的Y坐标,width:水平直线的长度,color:点的颜色
 261          返 回 值: 无
 262          函数功能: 在屏幕上显示水平直线
 263          --------------------------------------------------------------------------------------------------*/
 264          void Display_HLine(uint16  x,uint16  y,uint16  width,uint16  color,uint8 page)
 265          {
 266   1      
 267   1        Set_Display_Area(x,x+width-1,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y);
 268   1        Send_Ssd1963_Command(0x2C);
 269   1        WDT_CONTR = 0x3d;     //喂狗
 270   1        SSD1963_CS=0;
 271   1        while(width--)
 272   1        {
 273   2                WriteData16(color);
 274   2        }
 275   1         SSD1963_CS=1;
 276   1      }
 277          
 278          
 279          /*--------------------------------------------------------------------------------------------------
 280          函数原型: void Display_VLine(uint16 xdata x,uint16 xdata y,uint16 xdata height,uint32 xdata color)
 281          参数说明: x:点的X坐标,y:点的Y坐标,height:垂直直线的长度,color:点的颜色
 282          返 回 值: 无
 283          函数功能: 在屏幕上显示垂直直线
 284          ----------------------------------------------------------------------------------------------------*/
 285          void Display_VLine(uint16  x,uint16  y,uint16  height,uint16  color,uint8 page)
 286          {
 287   1      
 288   1        Set_Display_Area(x,x,y+page*LCD_PIX_Y,y+height-1+page*LCD_PIX_Y);
 289   1        Send_Ssd1963_Command(0x2C);
 290   1        WDT_CONTR = 0x3d; 
 291   1        SSD1963_CS=0;
 292   1        while(height--)
 293   1        {
 294   2          WriteData16(color);
 295   2        }
 296   1        SSD1963_CS=1;
 297   1      }  
 298           
 299          
 300          
 301          
 302          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 6   

 303          //显示一个方框
 304          void DisplayFrame(uint16 start_x,uint16 start_y,uint16 end_x,uint16 end_y, uint16 color,uint8 page)
 305          {
 306   1              Display_HLine(start_x,start_y,end_x-start_x+1,color,page);
 307   1              Display_HLine(start_x,end_y,end_x-start_x+1,color,page);
 308   1      
 309   1              Display_VLine(start_x,start_y,end_y-start_y+1,color,page);
 310   1              Display_VLine(end_x,start_y,end_y-start_y+1,color,page);
 311   1      }
 312          
 313          
 314          
 315          
 316          
 317          
 318          //显示一个颜色块
 319          void DisplayBlock(uint16 start_x,uint16 start_y,uint16 end_x,uint16 end_y, uint16 color,uint8 page)
 320          {
 321   1              uint16 xdata width,height;
 322   1              uint16 i,j;
 323   1      
 324   1              Set_Display_Area(start_x,end_x,start_y+page*LCD_PIX_Y,end_y+page*LCD_PIX_Y);
 325   1              Send_Ssd1963_Command(0x2C);
 326   1      
 327   1      
 328   1              width=end_x-start_x+1;
 329   1      
 330   1              height=end_y-start_y+1;
 331   1      
 332   1              WDT_CONTR = 0x3d; 
 333   1      
 334   1              SSD1963_CS=0;
 335   1              for(j=0;j<height;j++)
 336   1              {
 337   2                      for(i=0;i<width;i++)
 338   2                      {
 339   3                              WriteData16(color);
 340   3                      }
 341   2              } 
 342   1              SSD1963_CS=1;
 343   1      }
 344          
 345          
 346          
 347          
 348           /*-------------------------------------------------------------------------------------------------------
             --------------------------------
 349           函数原型: void Display_ASCII(uint16 xdata x,uint16 xdata y,uint8 xdata *p,uint32 xdata fcolor,uint32 xdat
             -a bcolor)
 350           参数说明: x:字符的X坐标,y:字符的Y坐标,frcolor:字符的颜色，brcolor:字符的背景颜色
 351           返 回 值: 无
 352           函数功能: 在屏幕上显示字符
 353           ---------------------------------------------------------------------------------------------------------
             --------------------------------*/
 354            void Display_ASCII(uint16 x,uint16 y,uint8 *p,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page)
 355           {
 356   1       
 357   1              uint8 xdata i,j;
 358   1              switch(size)
 359   1              {
 360   2                 case 1: //8*16
 361   2                         Set_Display_Area(x,x+7,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+15);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 7   

 362   2                         i=16;
 363   2                         break;
 364   2                 case 2: //12*24
 365   2                         Set_Display_Area(x,x+15,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+23);
 366   2                         i=48;
 367   2                         break;
 368   2                 case 3: //16*32
 369   2                         Set_Display_Area(x,x+15,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+31);
 370   2                         i=64;
 371   2                         break;
 372   2                 default://默认为12*24
 373   2                         Set_Display_Area(x,x+15,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+23);
 374   2                         i=48;
 375   2                         break;
 376   2              }
 377   1      
 378   1              Send_Ssd1963_Command(0x2C);
 379   1              WDT_CONTR = 0x3d; 
 380   1      
 381   1              SSD1963_CS=0;
 382   1              for(;i>0;i--)
 383   1              {
 384   2                 for(j=0;j<8;j++)
 385   2                 {
 386   3                              if(*p&(0x80>>j))
 387   3                              {
 388   4                                      WriteData16(fcolor);
 389   4                              }
 390   3                              else
 391   3                              {
 392   4                                      WriteData16(bcolor);
 393   4      
 394   4                              }
 395   3      
 396   3                 }
 397   2                 p++;
 398   2              }
 399   1              SSD1963_CS=1;
 400   1       }
 401          
 402          
 403          /*-----------------------------------------------------------------------------
 404          函数原型: void Display_Chinese(uint x,uint y,uchar *p,ulong fcolor,ulong bcolor)
 405          参数说明: x:汉字的X坐标,y:汉字的Y坐标,fcolor:汉字的颜色，bcolor：汉字的背景颜色
 406          返 回 值: 无
 407          函数功能: 在屏幕上显示汉字
 408          ----------------------------------------------------------------------------*/
 409          void Display_Chinese(uint16 x,uint16 y,uint8 *p,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page)
 410          {
 411   1              uchar xdata i,j;
 412   1              switch(size)
 413   1              {
 414   2              case 1: //15*16
 415   2                 Set_Display_Area(x,x+15,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+15);
 416   2                 i=32;        //32个字节点阵数据
 417   2                 break;
 418   2              case 2: //24*24
 419   2                 Set_Display_Area(x,x+23,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+23);
 420   2                 i=72;
 421   2                 break;
 422   2              case 3: //32*32
 423   2                 Set_Display_Area(x,x+31,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+31);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 8   

 424   2                 i=128;
 425   2                 break;
 426   2      
 427   2              default://默认为24*24
 428   2                 Set_Display_Area(x,x+23,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+23);
 429   2                 i=72;
 430   2                 break;                  
 431   2              }
 432   1      
 433   1              Send_Ssd1963_Command(0x2C);
 434   1               WDT_CONTR = 0x3d; 
 435   1              SSD1963_CS=0;
 436   1              for(;i>0;i--)
 437   1              {
 438   2                 for(j=0;j<8;j++)
 439   2                 {
 440   3                              if(*p&(0x80>>j))
 441   3                              {
 442   4                                      WriteData16(fcolor);
 443   4                              }
 444   3                              else
 445   3                              {
 446   4                                      WriteData16(bcolor);
 447   4      
 448   4                              }
 449   3                 }
 450   2                 p++;
 451   2              }
 452   1              SSD1963_CS=1;
 453   1       }
 454          
 455          
 456          
 457          void ASCIIXDirectionIncrease(uint8  size,uint16 *px,uint16 *py)
 458          {
 459   1              uint16 xdata x,y;
 460   1              x=*px;
 461   1              y=*py;
 462   1              switch(size)
 463   1              {
 464   2                      case 1://8*16
 465   2                      
 466   2                              if(x+8<LCD_PIX_X) x+=8;
 467   2                              else 
 468   2                              {
 469   3                                      if(y+16<LCD_PIX_Y) {y+=16;x=0;}
 470   3                                      else {x=0;y=0;}
 471   3                              }
 472   2                              break;
 473   2                      case 2://12*24
 474   2                      default:
 475   2                              if(x+12<LCD_PIX_X) x+=12;
 476   2                              else 
 477   2                              {
 478   3                                      if(y+24<LCD_PIX_Y) {y+=24;x=0;}
 479   3                                      else {x=0;y=0;}
 480   3                              }
 481   2                              break;
 482   2                      case 3://16*32
 483   2                              if(x+16<LCD_PIX_X) x+=16;
 484   2                              else 
 485   2                              {
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 9   

 486   3                                      if(y+32<LCD_PIX_Y) {y+=32;x=0;}
 487   3                                      else {x=0;y=0;}
 488   3                              }
 489   2                              break;  
 490   2      
 491   2              }
 492   1              *px=x;
 493   1              *py=y;
 494   1      }
 495          
 496          
 497          
 498          void ChineseXDirectionIncrease(uint8 size,uint16 *px,uint16 *py)
 499          {
 500   1              uint16 xdata x,y;
 501   1              x=*px;
 502   1              y=*py;
 503   1              switch(size)
 504   1              {
 505   2              case 1: //15*16
 506   2              
 507   2                      if(x+15<LCD_PIX_X) x+=15;
 508   2                      else 
 509   2                      {
 510   3                              if(y+16<LCD_PIX_Y) {y+=16;x=0;}
 511   3                              else {x=0;y=0;}
 512   3                      }
 513   2                      break;
 514   2              case 2://24*24
 515   2              default:
 516   2                      if(x+24<LCD_PIX_X) x+=24;
 517   2                      else 
 518   2                      {
 519   3                              if(y+24<LCD_PIX_Y) {y+=24;x=0;}
 520   3                              else {x=0;y=0;}
 521   3                      }
 522   2                      break;
 523   2              case 3://32*32
 524   2                      if(x+32<LCD_PIX_X) x+=32;
 525   2                      else 
 526   2                      {
 527   3                              if(y+32<LCD_PIX_Y) {y+=32;x=0;}
 528   3                              else {x=0;y=0;}
 529   3                      }
 530   2                      break;
 531   2      
 532   2              }
 533   1              *px=x;
 534   1              *py=y;
 535   1      }
 536          
 537          
 538          
 539          //显示一串数字
 540          void DisplayDigitString(uint16 *px,uint16 *py,uint8 *pDigit,uint8 Length,uint16 fcolor,uint16 bcolor,uint8
             - size,uint8 page)
 541          {
 542   1              uint16 xdata x,y;
 543   1              x=*px;
 544   1              y=*py;  
 545   1              
 546   1              WDT_CONTR = 0x3d;       
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 10  

 547   1              for(;Length>0;Length--)
 548   1              {       
 549   2                      if(*pDigit<10) Get_GT23_Data(0x00,*pDigit+48,size);     
 550   2                      else Get_GT23_Data(0x00,*pDigit+55,size);       //十六进制中的ABC....
 551   2                      Display_ASCII(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 552   2      
 553   2                      ASCIIXDirectionIncrease(size,&x,&y);
 554   2                      pDigit++;
 555   2              }
 556   1              
 557   1              *px=x;
 558   1              *py=y;
 559   1      }
 560          
 561          
 562          
 563          
 564          //写单个数字
 565          void DisplayDigit(uint16 x,uint16 y,uint8 Digit,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page)
 566          {
 567   1              
 568   1              if(Digit<10) Get_GT23_Data(0x00,Digit+48,size); 
 569   1              else Get_GT23_Data(0x00,Digit+55,size); //十六进制中的ABC....
 570   1              Display_ASCII(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);       
 571   1      }
 572          
 573          
 574          
 575          
 576          //显示ASCII字符串
 577          void DisplayASCIIString(uint16 *px,uint16 *py,uint8 *pASCII,uint8 Length,uint16 fcolor,uint16 bcolor,uint8
             - size,uint8 page)
 578          {
 579   1              uint16 xdata x,y;
 580   1              x=*px;
 581   1              y=*py;
 582   1              
 583   1              WDT_CONTR = 0x3d; 
 584   1      
 585   1              for(;Length>0;Length--)
 586   1              {       
 587   2                      Get_GT23_Data(0x00,*pASCII,size);       
 588   2                      Display_ASCII(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 589   2      
 590   2                      ASCIIXDirectionIncrease(size,&x,&y);
 591   2                      pASCII++;
 592   2              }
 593   1              *px=x;
 594   1              *py=y;
 595   1      }
 596          
 597          
 598          
 599          //写单个ASCII字符
 600          void DisplayASCII(uint16 x,uint16 y,uint8 ASCII,uint16 fcolor,uint16 bcolor,uint8 size,uint8 page)
 601          {
 602   1              
 603   1              Get_GT23_Data(0x00,ASCII,size); 
 604   1              Display_ASCII(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 605   1      
 606   1      }
 607          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 11  

 608          
 609          
 610          
 611          
 612          //显示一串汉字
 613          void DisplayChineseString(uint16 *px,uint16 *py,uint8 *pChinese,uint8 Length,uint16 fcolor,uint16 bcolor,u
             -int8 size,uint8 page)
 614          {
 615   1              uint16 xdata x,y;
 616   1              x=*px;
 617   1              y=*py;
 618   1              
 619   1              WDT_CONTR = 0x3d; 
 620   1      
 621   1              for(;Length>0;Length--)
 622   1              {       
 623   2                      Get_GT23_Data1(pChinese,size);          
 624   2                      Display_Chinese(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 625   2      
 626   2                      ChineseXDirectionIncrease(size,&x,&y);
 627   2                      pChinese=pChinese+2;    //一个汉字内码占两个字节
 628   2              }
 629   1              *px=x;
 630   1              *py=y;
 631   1      }
 632          
 633          
 634          
 635          
 636          void DisplayString(uint16 *px,uint16 *py,uint8 *pDispData,uint8 Length,uint16 fcolor,uint16 bcolor,uint8 s
             -ize,uint8 page)
 637          {
 638   1              uint16 xdata x,y;
 639   1              x=*px;
 640   1              y=*py;
 641   1      
 642   1              WDT_CONTR = 0x3d; 
 643   1      
 644   1              for(;Length>0;)
 645   1              {       
 646   2                      if((*pDispData>=0xa1)&&(*pDispData<=0xf7))      //高字节符合汉字内码条件
 647   2                      {
 648   3                              pDispData++;
 649   3                              if(*pDispData>=0xa1)
 650   3                              {
 651   4                                      pDispData--;
 652   4                                      Get_GT23_Data1(pDispData,size); 
 653   4      
 654   4                                      //先进行空间判断
 655   4                                      switch(size)
 656   4                                      {
 657   5                                              case 1:
 658   5                                                      if(x+16> LCD_PIX_X)
 659   5                                                      {
 660   6                                                              x=0;
 661   6                                                              if(y+16>LCD_PIX_Y) y=0;
 662   6                                                              else y +=16;
 663   6                                                      }
 664   5                                                      break;
 665   5                                              case 2:
 666   5                                                      if(x+24> LCD_PIX_X)
 667   5                                                      {
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 12  

 668   6                                                              x=0;
 669   6                                                              if(y+24>LCD_PIX_Y) y=0;
 670   6                                                              else y +=24;
 671   6                                                      }
 672   5                                                      break;  
 673   5                                              case 3:
 674   5                                                      if(x+32> LCD_PIX_X)
 675   5                                                      {
 676   6                                                              x=0;
 677   6                                                              if(y+32>LCD_PIX_Y) y=0;
 678   6                                                              else y +=32;
 679   6                                                      }
 680   5                                                      break;                                                  
 681   5                                      }
 682   4                                      Display_Chinese(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 683   4      
 684   4                                      ChineseXDirectionIncrease(size,&x,&y);
 685   4                                      pDispData=pDispData+2;  //一个汉字内码占两个字节
 686   4                                      Length -=2;
 687   4                              }
 688   3                              else
 689   3                              {//低字节不符合汉字条件
 690   4                                      Length--;
 691   4                              }
 692   3                      }
 693   2                      else if((*pDispData>=0x20)&&(*pDispData<=0x7e)) //符合ASCII字符条件
 694   2                      {
 695   3                              Get_GT23_Data(0x00,*pDispData,size);
 696   3                              //先进行空间判断
 697   3                              switch(size)
 698   3                              {
 699   4                                      case 1:
 700   4                                              if(x+8> LCD_PIX_X)
 701   4                                              {
 702   5                                                      x=0;
 703   5                                                      if(y+16>LCD_PIX_Y) y=0;
 704   5                                                      else y +=16;
 705   5                                              }
 706   4                                              break;
 707   4                                      case 2:
 708   4                                              if(x+12> LCD_PIX_X)
 709   4                                              {
 710   5                                                      x=0;
 711   5                                                      if(y+24>LCD_PIX_Y) y=0;
 712   5                                                      else y +=24;
 713   5                                              }
 714   4                                              break;  
 715   4                                      case 3:
 716   4                                              if(x+16> LCD_PIX_X)
 717   4                                              {
 718   5                                                      x=0;
 719   5                                                      if(y+32>LCD_PIX_Y) y=0;
 720   5                                                      else y +=32;
 721   5                                              }
 722   4                                              break;                                                  
 723   4                              }                       
 724   3                              Display_ASCII(x,y,GT23_Rec_Data,fcolor,bcolor,size,page);
 725   3      
 726   3                              ASCIIXDirectionIncrease(size,&x,&y);
 727   3                              pDispData++;
 728   3                              Length--;
 729   3                      }
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 13  

 730   2                      else    //其它不相关数据
 731   2                      {
 732   3                              pDispData++;
 733   3                              Length--;               
 734   3                      }
 735   2              }
 736   1              
 737   1              *px=x;
 738   1              *py=y;
 739   1      }
 740          
 741          
 742          
 743          /*void ShowCallFace(uint8 byRoomAddr, uint8 byBedAddr, uint8 byCallType,uint8 page)
 744          {
 745                  uint16 xdata x,y;
 746          
 747                  if(stLocalControl.byDisplayFace==INFO_INDICATION_FACE) return;
 748          
 749                  
 750                  Lcd_Clear(BLUE,page);
 751                  byRoomAddr &= 0x7f;
 752                  switch(byCallType)
 753                  {
 754                          case CMD_INFUSION_CALL:                                                         //护理呼叫              
 755                                  x=144;
 756                                  y=120;
 757                                  (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
 758                                  (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
 759                                  (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
 760                                  DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 761                                  DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 762                                  
 763                                  (unOperData.ASCII_BCD)[0]=byBedAddr/100;
 764                                  (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
 765                                  (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
 766                                  DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 767                                  DisplayChineseString(&x,&y,"床呼叫",3,WHITE,BLUE,3,page);
 768                                  break;
 769          
 770                          case CMD_SERVICE_CALL:                                                  //输液完毕呼叫
 771                                  x=112;
 772                                  y=120;
 773                                  (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
 774                                  (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
 775                                  (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
 776                                  DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 777                                  DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 778                                  
 779                                  (unOperData.ASCII_BCD)[0]=byBedAddr/100;
 780                                  (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
 781                                  (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
 782                                  DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 783                                  DisplayChineseString(&x,&y,"床输液完毕",5,WHITE,BLUE,3,page);
 784                                  break;
 785                                  
 786                          case CMD_EMERGENCY_CALL:                                                        //紧急呼叫
 787                                  x=108;
 788                                  y=120;
 789                                  (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
 790                                  (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
 791                                  (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 14  

 792                                  DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 793                                  DisplayChineseString(&x,&y,"房卫生间呼叫",6,WHITE,BLUE,3,page);
 794                                  break;
 795                  }       
 796          
 797                  Set_VisualPage(page);
 798                  
 799                  stLocalControl.byDisplayFace=INFO_INDICATION_FACE;
 800          
 801          }
 802          */
 803          
 804          
 805          ////用作信息指示命令之后的信息指示界面显示
 806          void ShowCallFace0(uint8 page)
 807          {
 808   1              uint16 xdata x,y;
 809   1              uint8 xdata i;
 810   1              
 811   1              x=32;y=0;
 812   1              Lcd_Clear(BLUE,page);
 813   1      
 814   1              
 815   1              WDT_CONTR = 0x3d; 
 816   1      
 817   1          for(i=0;i<stLocalControl.byCallCount;i++)
 818   1          {
 819   2              x=32; y += 42;
 820   2                      if(y>=240) break;       //超出一屏显示范围
 821   2                      
 822   2              switch(stLocalControl.byCallArray[i][3])        //原命令
 823   2                      {
 824   3                              case CMD_INFUSION_CALL:                         //护理呼叫
 825   3                                      if(stLocalControl.byCallArray[i][1] == 250)
 826   3                                      {
 827   4                                              DisplayChineseString(&x,&y,"加",1,WHITE,BLUE,3,page);
 828   4                                      }
 829   3                                      else 
 830   3                                      {
 831   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 832   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 833   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 834   4      
 835   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 836   4                                              DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 837   4                                      }
 838   3                                      
 839   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
 840   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
 841   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
 842   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 843   3                                      DisplayChineseString(&x,&y,"床呼叫",3,WHITE,BLUE,3,page);
 844   3                                      break;
 845   3                                      
 846   3                              case CMD_SERVICE_CALL:                                                  //输液完毕呼叫
 847   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 848   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 849   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 850   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 851   3                                      DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 852   3                                      
 853   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 15  

 854   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
 855   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
 856   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 857   3                                      DisplayChineseString(&x,&y,"床输液完毕",5,WHITE,BLUE,3,page);
 858   3                                      break;
 859   3                                      
 860   3                              case CMD_EMERGENCY_CALL:                                                        //紧急呼叫
 861   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 862   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 863   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 864   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 865   3                                      DisplayChineseString(&x,&y,"房卫生间呼叫",6,WHITE,BLUE,3,page);
 866   3                                      break;                          
 867   3      
 868   3                      }
 869   2      
 870   2          }
 871   1      
 872   1      
 873   1              Set_VisualPage(page);   
 874   1              stLocalControl.byDisplayFace=INFO_INDICATION_FACE;
 875   1      
 876   1      }
 877          
 878          
 879          
 880          
 881          ////用作确认命令之后的信息指示界面显示
 882          void ShowCallFace1(uint8 page)
 883          {
 884   1              uint16 xdata x,y;
 885   1              uint8 xdata i;
 886   1      
 887   1      
 888   1              if(stLocalControl.byCallCount<=5)
 889   1              {
 890   2                      y=stLocalControl.byCallCount*42;
 891   2                      
 892   2                      if(stLocalControl.byCallCount==1)
 893   2                      {//第一条记录需清屏             
 894   3                              Lcd_Clear(BLUE,page);
 895   3                      }
 896   2                      else 
 897   2                      {//清除当条记录
 898   3                              DisplayBlock(0,y,479,y+31,BLUE,page);
 899   3                      }
 900   2      
 901   2                      
 902   2                      x=32;
 903   2                      y=stLocalControl.byCallCount*42;
 904   2                      i=stLocalControl.byCallCount-1;
 905   2                      switch(stLocalControl.byCallArray[i][3])        //原命令
 906   2                      {
 907   3                              case CMD_INFUSION_CALL:                         //护理呼叫
 908   3                                      if(stLocalControl.byCallArray[i][1] == 250)
 909   3                                      {
 910   4                                              DisplayChineseString(&x,&y,"加",1,WHITE,BLUE,3,page);
 911   4                                      }
 912   3                                      else 
 913   3                                      {                       
 914   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 915   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 16  

 916   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 917   4      
 918   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 919   4                                              DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 920   4                                      }
 921   3                                      
 922   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
 923   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
 924   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
 925   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 926   3                                      DisplayChineseString(&x,&y,"床呼叫",3,WHITE,BLUE,3,page);
 927   3                                      break;
 928   3                                      
 929   3                              case CMD_SERVICE_CALL:                                                  //输液完毕呼叫
 930   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 931   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 932   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 933   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 934   3                                      DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 935   3                                      
 936   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
 937   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
 938   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
 939   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 940   3                                      DisplayChineseString(&x,&y,"床输液完毕",5,WHITE,BLUE,3,page);
 941   3                                      break;
 942   3                                      
 943   3                              case CMD_EMERGENCY_CALL:                                                        //紧急呼叫
 944   3                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 945   3                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 946   3                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 947   3                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 948   3                                      DisplayChineseString(&x,&y,"房卫生间呼叫",6,WHITE,BLUE,3,page);
 949   3                                      break;                          
 950   3      
 951   3                      }
 952   2      
 953   2                      Set_VisualPage(page);   
 954   2                      stLocalControl.byDisplayFace=INFO_INDICATION_FACE;
 955   2                      
 956   2              }
 957   1      }
 958          
 959          
 960          
 961          //用作清除命令之后的信息指示界面显示
 962          void ShowCallFace2(uint8 page)
 963          {
 964   1              uint16 xdata x,y;
 965   1              uint8 xdata i;
 966   1      
 967   1              if(stLocalControl.byCallCount<5)
 968   1              {//清除该屏最末尾一行记录
 969   2                      x=32;y=(stLocalControl.byCallCount+1)*42;
 970   2                      DisplayBlock(x,y,479,y+31,BLUE,page);
 971   2              }
 972   1      
 973   1              if(stLocalControl.byUpdataRecNum < 5)
 974   1              {
 975   2                      if(stLocalControl.byUpdataRecNum != stLocalControl.byCallCount)
 976   2                      {//更新的记录不是最后一条记录
 977   3                              x=32;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 17  

 978   3                              y=(stLocalControl.byUpdataRecNum+1)*42;
 979   3                              i=stLocalControl.byUpdataRecNum;
 980   3                              switch(stLocalControl.byCallArray[i][3])        //原命令
 981   3                              {
 982   4                                      case CMD_INFUSION_CALL:                         //护理呼叫
 983   4                                              if(stLocalControl.byCallArray[i][1] == 250)
 984   4                                              {
 985   5                                                      DisplayChineseString(&x,&y,"加",1,WHITE,BLUE,3,page);
 986   5                                              }
 987   4                                              else 
 988   4                                              {
 989   5                                                      (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
 990   5                                                      (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
 991   5                                                      (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
 992   5      
 993   5                                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
 994   5                                                      DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
 995   5                                              }
 996   4                                              
 997   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
 998   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
 999   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
1000   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1001   4                                              DisplayChineseString(&x,&y,"床呼叫",3,WHITE,BLUE,3,page);
1002   4                                              break;
1003   4                                              
1004   4                                      case CMD_SERVICE_CALL:                                                  //输液完毕呼叫
1005   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
1006   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
1007   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
1008   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1009   4                                              DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
1010   4                                              
1011   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][2])/100;
1012   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][2])%100)/10;
1013   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][2])%100)%10;
1014   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1015   4                                              DisplayChineseString(&x,&y,"床输液完毕",5,WHITE,BLUE,3,page);
1016   4                                              break;
1017   4                                              
1018   4                                      case CMD_EMERGENCY_CALL:                                                        //紧急呼叫
1019   4                                              (unOperData.ASCII_BCD)[0] = (stLocalControl.byCallArray[i][1])/100;
1020   4                                              (unOperData.ASCII_BCD)[1] = ((stLocalControl.byCallArray[i][1])%100)/10;
1021   4                                              (unOperData.ASCII_BCD)[2] = ((stLocalControl.byCallArray[i][1])%100)%10;
1022   4                                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1023   4                                              DisplayChineseString(&x,&y,"房卫生间呼叫",6,WHITE,BLUE,3,page);
1024   4                                              break;                          
1025   4      
1026   4                              }
1027   3                              DisplayBlock(x,y,479,y+31,BLUE,page);   //将该记录末尾无关部分清空
1028   3                      }
1029   2              }
1030   1              Set_VisualPage(page);   
1031   1              stLocalControl.byDisplayFace=INFO_INDICATION_FACE;
1032   1      }
1033          
1034          /**********************************************************
1035          *函数名称                       :ShowTalkFace   
1036          *函数描述               :显示通话界面
1037          *输入参数               :byRoomAddr:房地址,byBedAddr:床地址
1038          *返回值                         :       
1039          *全局变量                       :
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 18  

1040          *调用模块                       :
1041          ***********************************************************
1042          *创建人                 :
1043          *创建日期                       :2009-3-16
1044          ***********************************************************
1045          *修改人                         :
1046          *修改日期               :
1047          *注释                   :
1048          **********************************************************/
1049          void ShowTalkFace(uint8 byRoomAddr, uint8 byBedAddr,uint8 page)
1050          { 
1051   1      
1052   1              uint16 xdata x,y;
1053   1      
1054   1              if(stLocalControl.byDisplayFace==TALK_FACE) return;
1055   1      
1056   1              
1057   1              Lcd_Clear(BLUE,page);
1058   1              x=160;
1059   1              y=120;
1060   1              
1061   1              if(0x00 == byRoomAddr)
1062   1              {       //房地址为0,表明为直接编号分机
1063   2                      x=(479-32*8)/2;
1064   2                      y=120;  
1065   2                      DisplayChineseString(&x,&y,"与",1,WHITE,BLUE,3,page);
1066   2                      (unOperData.ASCII_BCD)[0]=byBedAddr/100;
1067   2                      (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
1068   2                      (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
1069   2                      if((unOperData.ASCII_BCD)[0])
1070   2                      {
1071   3                              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1072   3                      }
1073   2                      else 
1074   2                      {
1075   3                              if((unOperData.ASCII_BCD)[1])
1076   3                              {
1077   4                                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1078   4                              }
1079   3                              else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1080   3                      }
1081   2                      DisplayChineseString(&x,&y,"床分机通话中",6,WHITE,BLUE,3,page);
1082   2      
1083   2              }
1084   1      
1085   1              else 
1086   1              {       
1087   2                      x=(479-32*10)/2;
1088   2                      y=120;
1089   2                      if(byRoomAddr == 253)
1090   2                      {//医护分机
1091   3                              DisplayChineseString(&x,&y,"与",1,WHITE,BLUE,3,page);
1092   3                              (unOperData.ASCII_BCD)[0]=byBedAddr/100;
1093   3                              (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
1094   3                              (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
1095   3                              if((unOperData.ASCII_BCD)[0])
1096   3                              {
1097   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1098   4                              }
1099   3                              else 
1100   3                              {
1101   4                                      if((unOperData.ASCII_BCD)[1])
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 19  

1102   4                                      {
1103   5                                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1104   5                                      }
1105   4                                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1106   4                              }
1107   3                              DisplayChineseString(&x,&y,"号医护分机通话中",8,WHITE,BLUE,3,page);                     
1108   3                      }
1109   2                      else 
1110   2                      {
1111   3                              DisplayChineseString(&x,&y,"与",1,WHITE,BLUE,3,page);
1112   3                              (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
1113   3                              (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
1114   3                              (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
1115   3                              if((unOperData.ASCII_BCD)[0])
1116   3                              {
1117   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1118   4                              }
1119   3                              else 
1120   3                              {
1121   4                                      if((unOperData.ASCII_BCD)[1])
1122   4                                      {
1123   5                                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1124   5                                      }
1125   4                                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1126   4                              }
1127   3                              DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
1128   3                              (unOperData.ASCII_BCD)[0]=byBedAddr/100;
1129   3                              (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
1130   3                              (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
1131   3                              if((unOperData.ASCII_BCD)[0])
1132   3                              {
1133   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1134   4                              }
1135   3                              else 
1136   3                              {
1137   4                                      if((unOperData.ASCII_BCD)[1])
1138   4                                      {
1139   5                                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1140   5                                      }
1141   4                                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1142   4                              }
1143   3                              DisplayChineseString(&x,&y,"床分机通话中",6,WHITE,BLUE,3,page);         
1144   3                      }
1145   2              }
1146   1              Set_VisualPage(page);
1147   1      
1148   1              stLocalControl.byDisplayFace=TALK_FACE;
1149   1      
1150   1      }
1151          
1152          
1153          void ShowKeyFace(uint8 page)
1154          {
1155   1              uint16 xdata x,y;
1156   1              if(stLocalControl.byKeyInTimes==0)
1157   1              {
1158   2                      DisplayBlock(0,240+page*LCD_PIX_Y,479,271+page*LCD_PIX_Y,BLUE,page);
1159   2              }
1160   1              x=stLocalControl.byKeyInTimes*16;
1161   1              y=240;
1162   1              DisplayDigitString(&x,&y,&(stLocalControl.stBusDealFreq.bySndSecAddr),1,WHITE,BLUE,3,page);
1163   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 20  

1164   1      }
1165          
1166          
1167          void StorSecInfo(uint8 page)
1168          {
1169   1              uint16 xdata x,y;
1170   1      
1171   1              Lcd_Clear(WHITE,page);
1172   1      
1173   1              DisplayBlock(0,0,479,33,BLUE,page);
1174   1      
1175   1              x=96;
1176   1              y=0;
1177   1              DisplayASCIIString(&x,&y,"20",2,WHITE,BLUE,3,page);
1178   1              DisplayDigit(128,0,stLocalControl.stTime.byYear>>4,WHITE,BLUE,3,page);
1179   1              DisplayDigit(144,0,stLocalControl.stTime.byYear&0x0f,WHITE,BLUE,3,page);
1180   1      
1181   1              DisplayASCII(160,0,'/',WHITE,BLUE,3,page);
1182   1      
1183   1              DisplayDigit(176,0,stLocalControl.stTime.byMonth>>4,WHITE,BLUE,3,page);
1184   1              DisplayDigit(192,0,stLocalControl.stTime.byMonth&0x0f,WHITE,BLUE,3,page);       
1185   1      
1186   1      
1187   1              DisplayASCII(208,0,'/',WHITE,BLUE,3,page);
1188   1      
1189   1              DisplayDigit(224,0,stLocalControl.stTime.byDay>>4,WHITE,BLUE,3,page);
1190   1              DisplayDigit(240,0,stLocalControl.stTime.byDay&0x0f,WHITE,BLUE,3,page);
1191   1      
1192   1              
1193   1              //空两个汉字间隔
1194   1              DisplayDigit(304,0,stLocalControl.stTime.byHour>>4,WHITE,BLUE,3,page);
1195   1              DisplayDigit(320,0,stLocalControl.stTime.byHour&0x0f,WHITE,BLUE,3,page);
1196   1              
1197   1              Display_ASCII(336,0,ColonCode16x32,WHITE,BLUE,3,page);  //":"
1198   1      
1199   1              DisplayDigit(352,0,stLocalControl.stTime.byMin>>4,WHITE,BLUE,3,page);
1200   1              DisplayDigit(368,0,stLocalControl.stTime.byMin&0x0f,WHITE,BLUE,3,page); 
1201   1      
1202   1      
1203   1              DisplayBlock(0,34,479,67,GREEN,page);
1204   1      
1205   1      
1206   1              if(WardDataBuff[6])
1207   1              {
1208   2                      x=64;
1209   2                      y=37;   
1210   2                      (unOperData.ASCII_BCD)[0] = WardDataBuff[6]/100;
1211   2                      (unOperData.ASCII_BCD)[1] = (WardDataBuff[6]%100)/10;
1212   2                      (unOperData.ASCII_BCD)[2] = (WardDataBuff[6]%100)%10;
1213   2                      if((unOperData.ASCII_BCD)[0])
1214   2                      {
1215   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLACK,GREEN,3,page);
1216   3                              
1217   3                      }
1218   2                      else if((unOperData.ASCII_BCD)[1])
1219   2                      {
1220   3                              x +=16;
1221   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,BLACK,GREEN,3,page);
1222   3                              
1223   3                      }
1224   2                      else
1225   2                      {
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 21  

1226   3                              x +=32;
1227   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,BLACK,GREEN,3,page);
1228   3                      }
1229   2              }
1230   1      
1231   1              
1232   1              x=(479-32*7)/2; //128
1233   1              y=35;
1234   1              DisplayChineseString(&x,&y,"病区护理动态",6,BLACK,GREEN,3,page);
1235   1      
1236   1              x=0;y=72;
1237   1              DisplayChineseString(&x,&y,"病人总数",4,BLACK,PURPLE,2,page);
1238   1      
1239   1              x=120;y=72;
1240   1              DisplayBlock(120,72,120+35,72+23,BLUE,page);
1241   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[7]/100;
1242   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[7]%100;  //十个位
1243   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1244   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1245   1              
1246   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1247   1              {
1248   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1249   2              }
1250   1              else
1251   1              {
1252   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1253   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1254   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1255   2              }
1256   1              
1257   1              
1258   1              x=0;y=107;
1259   1              DisplayChineseString(&x,&y,"病危",2,BLACK,YELLOW,2,page);
1260   1              
1261   1              x=72;y=107;
1262   1              DisplayBlock(72,107,72+35,107+23,BLUE,page);
1263   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[8]/100;
1264   1              
1265   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[8]%100;  //十个位
1266   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1267   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1268   1              
1269   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1270   1              {
1271   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1272   2              }
1273   1              else
1274   1              {
1275   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1276   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1277   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1278   2              }
1279   1              
1280   1              
1281   1              x=160;
1282   1              DisplayChineseString(&x,&y,"床位",2,BLACK,YELLOW,2,page);
1283   1              
1284   1              x=232;y=107;
1285   1              DisplayBlock(232,107,232+35,107+23,BLUE,page);
1286   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[9]/100;
1287   1              
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 22  

1288   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[9]%100;  //十个位
1289   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1290   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1291   1              
1292   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1293   1              {
1294   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1295   2              }
1296   1              else
1297   1              {
1298   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1299   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1300   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1301   2              }
1302   1              
1303   1              
1304   1              x=320;
1305   1              DisplayChineseString(&x,&y,"空床",2,BLACK,YELLOW,2,page);
1306   1              
1307   1              x=392;y=107;
1308   1              DisplayBlock(392,107,392+35,107+23,BLUE,page);
1309   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[10]/100;
1310   1              
1311   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[10]%100; //十个位
1312   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1313   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1314   1              
1315   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1316   1              {
1317   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1318   2              }
1319   1              else
1320   1              {
1321   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1322   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1323   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1324   2              }
1325   1              
1326   1              
1327   1              x=0;y=142;
1328   1              DisplayChineseString(&x,&y,"入院",2,BLACK,YELLOW,2,page);
1329   1              
1330   1              x=72;y=142;
1331   1              DisplayBlock(72,142,72+35,142+23,BLUE,page);
1332   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[11]/100;
1333   1              
1334   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[11]%100; //十个位
1335   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1336   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1337   1              
1338   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1339   1              {
1340   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1341   2              }
1342   1              else
1343   1              {
1344   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1345   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1346   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1347   2              }
1348   1              
1349   1              
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 23  

1350   1              
1351   1              x=240;
1352   1              DisplayChineseString(&x,&y,"出院",2,BLACK,YELLOW,2,page);       
1353   1              
1354   1              x=312;y=142;
1355   1              DisplayBlock(312,142,312+35,142+23,BLUE,page);
1356   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[12]/100;
1357   1              
1358   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[12]%100; //十个位
1359   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1360   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1361   1              
1362   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1363   1              {
1364   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1365   2              }
1366   1              else
1367   1              {
1368   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1369   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1370   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1371   2              }
1372   1              
1373   1              
1374   1      
1375   1      /*      x=0;y=175;
1376   1              DisplayChineseString(&x,&y,"转入",2,BLACK,YELLOW,2,page);
1377   1              
1378   1              x=72;y=175;
1379   1              DisplayBlock(72,175,72+35,175+23,BLUE,page);
1380   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[13]/100;
1381   1              
1382   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[13]%100; //十个位
1383   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1384   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1385   1              
1386   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1387   1              {
1388   1                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1389   1              }
1390   1              else
1391   1              {
1392   1                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1393   1                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1394   1                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1395   1              }
1396   1              
1397   1              
1398   1              x=240;
1399   1              DisplayChineseString(&x,&y,"转出",2,BLACK,YELLOW,2,page);
1400   1              
1401   1              x=312;y=175;
1402   1              DisplayBlock(312,175,312+35,175+23,BLUE,page);
1403   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[14]/100;
1404   1              
1405   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[14]%100; //十个位
1406   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1407   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1408   1              
1409   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1410   1              {
1411   1                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 24  

1412   1              }
1413   1              else
1414   1              {
1415   1                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1416   1                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1417   1                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1418   1              }*/
1419   1              
1420   1              
1421   1              
1422   1              x=0;y=175;  //209;
1423   1              DisplayChineseString(&x,&y,"一级护理",4,BLACK,PURPLE,2,page);
1424   1              
1425   1              x=120;y=175;  //209;
1426   1              DisplayBlock(120,175/*209*/,120+35,175/*209*/+23,BLUE,page);
1427   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[15]/100;
1428   1              
1429   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[15]%100; //十个位
1430   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1431   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1432   1              
1433   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1434   1              {
1435   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1436   2              }
1437   1              else
1438   1              {
1439   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1440   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1441   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1442   2              }
1443   1              
1444   1              
1445   1              
1446   1              
1447   1              x=240;
1448   1              DisplayChineseString(&x,&y,"吸氧",2,BLACK,YELLOW,2,page);
1449   1              x=312;y=175;   //209;
1450   1              DisplayBlock(312,175/*209*/,312+35,175/*209*/+23,BLUE,page);
1451   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[16]/100;
1452   1              
1453   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[16]%100; //十个位
1454   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1455   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1456   1              
1457   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
1458   1              {
1459   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1460   2              }
1461   1              else
1462   1              {
1463   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
1464   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1465   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1466   2              }                                               
1467   1              
1468   1              DisplayBlock(0,240,479,271,BLUE,page);
1469   1      }
1470          
1471          
1472          
1473          /*void ShowSecInfo(uint8 page)
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 25  

1474          {
1475                  uint16 xdata x,y;
1476                  if(stLocalControl.byDisplayFace==SEC_INFO_FACE) return;
1477                  
1478                  Lcd_Clear(WHITE,page);
1479          
1480                  DisplayBlock(0,0,479,33,BLUE,page);
1481          
1482                  x=96;
1483                  y=0;
1484                  DisplayASCIIString(&x,&y,"20",2,WHITE,BLUE,3,page);
1485                  DisplayDigit(128,0,stLocalControl.stTime.byYear>>4,WHITE,BLUE,3,page);
1486                  DisplayDigit(144,0,stLocalControl.stTime.byYear&0x0f,WHITE,BLUE,3,page);
1487          
1488                  DisplayASCII(160,0,'/',WHITE,BLUE,3,page);
1489          
1490                  DisplayDigit(176,0,stLocalControl.stTime.byMonth>>4,WHITE,BLUE,3,page);
1491                  DisplayDigit(192,0,stLocalControl.stTime.byMonth&0x0f,WHITE,BLUE,3,page);       
1492          
1493          
1494                  DisplayASCII(208,0,'/',WHITE,BLUE,3,page);
1495          
1496                  DisplayDigit(224,0,stLocalControl.stTime.byDay>>4,WHITE,BLUE,3,page);
1497                  DisplayDigit(240,0,stLocalControl.stTime.byDay&0x0f,WHITE,BLUE,3,page);
1498          
1499                  
1500                  //空两个汉字间隔
1501                  DisplayDigit(304,0,stLocalControl.stTime.byHour>>4,WHITE,BLUE,3,page);
1502                  DisplayDigit(320,0,stLocalControl.stTime.byHour&0x0f,WHITE,BLUE,3,page);
1503                  
1504                  Display_ASCII(336,0,ColonCode16x32,WHITE,BLUE,3,page);  //":"
1505          
1506                  DisplayDigit(352,0,stLocalControl.stTime.byMin>>4,WHITE,BLUE,3,page);
1507                  DisplayDigit(368,0,stLocalControl.stTime.byMin&0x0f,WHITE,BLUE,3,page); 
1508          
1509          
1510                  DisplayBlock(0,34,479,67,GREEN,page);
1511          
1512          
1513                  if(WardDataBuff[6])
1514                  {
1515                          x=64;
1516                          y=37;   
1517                          (unOperData.ASCII_BCD)[0] = WardDataBuff[6]/100;
1518                          (unOperData.ASCII_BCD)[1] = (WardDataBuff[6]%100)/10;
1519                          (unOperData.ASCII_BCD)[2] = (WardDataBuff[6]%100)%10;
1520                          if((unOperData.ASCII_BCD)[0])
1521                          {
1522                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLACK,GREEN,3,page);
1523                                  
1524                          }
1525                          else if((unOperData.ASCII_BCD)[1])
1526                          {
1527                                  x +=16;
1528                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,BLACK,GREEN,3,page);
1529                                  
1530                          }
1531                          else
1532                          {
1533                                  x +=32;
1534                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,BLACK,GREEN,3,page);
1535                          }
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 26  

1536                  }
1537          
1538                  
1539                  x=(480-32*7)/2; //128
1540                  y=35;
1541                  DisplayChineseString(&x,&y,"病区护理动态",6,BLACK,GREEN,3,page);
1542          
1543                  x=0;y=72;
1544                  DisplayChineseString(&x,&y,"病人总数",4,BLACK,PURPLE,2,page);
1545          
1546                  x=120;y=72;
1547                  DisplayBlock(120,72,120+35,72+23,BLUE,page);
1548                  (unOperData.ASCII_BCD)[0]=WardDataBuff[7]/100;
1549                  (unOperData.ASCII_BCD)[1]=WardDataBuff[7]%100;  //十个位
1550                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1551                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1552                  
1553                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1554                  {
1555                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1556                  }
1557                  else
1558                  {
1559                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1560                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1561                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1562                  }
1563                  
1564                  
1565                  x=0;y=107;
1566                  DisplayChineseString(&x,&y,"病危",2,BLACK,YELLOW,2,page);
1567                  
1568                  x=72;y=107;
1569                  DisplayBlock(72,107,72+35,107+23,BLUE,page);
1570                  (unOperData.ASCII_BCD)[0]=WardDataBuff[8]/100;
1571                  
1572                  (unOperData.ASCII_BCD)[1]=WardDataBuff[8]%100;  //十个位
1573                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1574                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1575                  
1576                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1577                  {
1578                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1579                  }
1580                  else
1581                  {
1582                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1583                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1584                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1585                  }
1586                  
1587                  
1588                  x=160;
1589                  DisplayChineseString(&x,&y,"床位",2,BLACK,YELLOW,2,page);
1590                  
1591                  x=232;y=107;
1592                  DisplayBlock(232,107,232+35,107+23,BLUE,page);
1593                  (unOperData.ASCII_BCD)[0]=WardDataBuff[9]/100;
1594                  
1595                  (unOperData.ASCII_BCD)[1]=WardDataBuff[9]%100;  //十个位
1596                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1597                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 27  

1598                  
1599                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1600                  {
1601                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1602                  }
1603                  else
1604                  {
1605                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1606                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1607                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1608                  }
1609                  
1610                  
1611                  x=320;
1612                  DisplayChineseString(&x,&y,"空床",2,BLACK,YELLOW,2,page);
1613                  
1614                  x=392;y=107;
1615                  DisplayBlock(392,107,392+35,107+23,BLUE,page);
1616                  (unOperData.ASCII_BCD)[0]=WardDataBuff[10]/100;
1617                  
1618                  (unOperData.ASCII_BCD)[1]=WardDataBuff[10]%100; //十个位
1619                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1620                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1621                  
1622                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1623                  {
1624                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1625                  }
1626                  else
1627                  {
1628                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1629                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1630                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1631                  }
1632                  
1633                  
1634                  x=0;y=142;
1635                  DisplayChineseString(&x,&y,"入院",2,BLACK,YELLOW,2,page);
1636                  
1637                  x=72;y=142;
1638                  DisplayBlock(72,142,72+35,142+23,BLUE,page);
1639                  (unOperData.ASCII_BCD)[0]=WardDataBuff[11]/100;
1640                  
1641                  (unOperData.ASCII_BCD)[1]=WardDataBuff[11]%100; //十个位
1642                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1643                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1644                  
1645                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1646                  {
1647                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1648                  }
1649                  else
1650                  {
1651                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1652                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1653                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1654                  }
1655                  
1656                  
1657                  
1658                  x=240;
1659                  DisplayChineseString(&x,&y,"出院",2,BLACK,YELLOW,2,page);       
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 28  

1660                  
1661                  x=312;y=142;
1662                  DisplayBlock(312,142,312+35,142+23,BLUE,page);
1663                  (unOperData.ASCII_BCD)[0]=WardDataBuff[12]/100;
1664                  
1665                  (unOperData.ASCII_BCD)[1]=WardDataBuff[12]%100; //十个位
1666                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1667                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1668                  
1669                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1670                  {
1671                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1672                  }
1673                  else
1674                  {
1675                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1676                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1677                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1678                  }
1679                  
1680                  
1681                  x=0;y=175;
1682                  DisplayChineseString(&x,&y,"转入",2,BLACK,YELLOW,2,page);
1683                  
1684                  x=72;y=175;
1685                  DisplayBlock(72,175,72+35,175+23,BLUE,page);
1686                  (unOperData.ASCII_BCD)[0]=WardDataBuff[13]/100;
1687                  
1688                  (unOperData.ASCII_BCD)[1]=WardDataBuff[13]%100; //十个位
1689                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1690                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1691                  
1692                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1693                  {
1694                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1695                  }
1696                  else
1697                  {
1698                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1699                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1700                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1701                  }
1702                  
1703                  
1704                  x=240;
1705                  DisplayChineseString(&x,&y,"转出",2,BLACK,YELLOW,2,page);
1706                  
1707                  x=312;y=175;
1708                  DisplayBlock(312,175,312+35,175+23,BLUE,page);
1709                  (unOperData.ASCII_BCD)[0]=WardDataBuff[14]/100;
1710                  
1711                  (unOperData.ASCII_BCD)[1]=WardDataBuff[14]%100; //十个位
1712                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1713                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1714                  
1715                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1716                  {
1717                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1718                  }
1719                  else
1720                  {
1721                          if((unOperData.ASCII_BCD)[1])   //十位不为0
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 29  

1722                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1723                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1724                  }
1725                  
1726                  
1727                  
1728                  x=0;y=209;
1729                  DisplayChineseString(&x,&y,"一级护理",4,BLACK,PURPLE,2,page);
1730                  
1731                  x=120;y=209;
1732                  DisplayBlock(120,209,120+35,209+23,BLUE,page);
1733                  (unOperData.ASCII_BCD)[0]=WardDataBuff[15]/100;
1734                  
1735                  (unOperData.ASCII_BCD)[1]=WardDataBuff[15]%100; //十个位
1736                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1737                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1738                  
1739                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1740                  {
1741                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1742                  }
1743                  else
1744                  {
1745                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1746                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1747                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1748                  }
1749                  
1750                  
1751                  
1752                  
1753                  x=240;
1754                  DisplayChineseString(&x,&y,"吸氧",2,BLACK,YELLOW,2,page);
1755                  x=312;y=209;
1756                  DisplayBlock(312,209,312+35,209+23,BLUE,page);
1757                  (unOperData.ASCII_BCD)[0]=WardDataBuff[16]/100;
1758                  
1759                  (unOperData.ASCII_BCD)[1]=WardDataBuff[16]%100; //十个位
1760                  (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
1761                  (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
1762                  
1763                  if((unOperData.ASCII_BCD)[0])   //百位不为0
1764                  {
1765                          DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
1766                  }
1767                  else
1768                  {
1769                          if((unOperData.ASCII_BCD)[1])   //十位不为0
1770                                  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
1771                          else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
1772                  }                                               
1773                  
1774                  DisplayBlock(0,240,480,272,BLUE,page);
1775          
1776                  Set_VisualPage(page);
1777                  
1778                  stLocalControl.byDisplayFace=SEC_INFO_FACE; 
1779          
1780          }
1781          */
1782          
1783          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 30  

1784          void ShowStartNumSet(uint8 page)
1785          {
1786   1      
1787   1              uint16 xdata x,y;
1788   1      
1789   1              Lcd_Clear(BLUE,page);
1790   1      
1791   1              x=(479-32*10)/2;
1792   1              y=120;
1793   1      
1794   1              (unOperData.ASCII_BCD)[0]=stLocalControl.stBusDealFreq.bySndSecAddr/100;
1795   1              (unOperData.ASCII_BCD)[1]=(stLocalControl.stBusDealFreq.bySndSecAddr%100)/10;
1796   1              (unOperData.ASCII_BCD)[2]=(stLocalControl.stBusDealFreq.bySndSecAddr%100)%10;
1797   1      
1798   1              if((unOperData.ASCII_BCD)[0])
1799   1              {
1800   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,3,page);
1801   2              }
1802   1              else
1803   1              {
1804   2                      if((unOperData.ASCII_BCD)[1])
1805   2                      {
1806   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1807   3                      }
1808   2                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1809   2              }
1810   1              DisplayChineseString(&x,&y,"区",1,WHITE,BLUE,3,page);
1811   1      
1812   1              (unOperData.ASCII_BCD)[0]=stLocalControl.stBusDealFreq.bySndRoomAddr/100;
1813   1              (unOperData.ASCII_BCD)[1]=(stLocalControl.stBusDealFreq.bySndRoomAddr%100)/10;
1814   1              (unOperData.ASCII_BCD)[2]=(stLocalControl.stBusDealFreq.bySndRoomAddr%100)%10;
1815   1      
1816   1              if((unOperData.ASCII_BCD)[0])
1817   1              {
1818   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,3,page);
1819   2              }
1820   1              else
1821   1              {
1822   2                      if((unOperData.ASCII_BCD)[1])
1823   2                      {
1824   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1825   3                      }
1826   2                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1827   2              }
1828   1              DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
1829   1      
1830   1              (unOperData.ASCII_BCD)[0]=stLocalControl.stBusDealFreq.bySndBedAddr/100;
1831   1              (unOperData.ASCII_BCD)[1]=(stLocalControl.stBusDealFreq.bySndBedAddr%100)/10;
1832   1              (unOperData.ASCII_BCD)[2]=(stLocalControl.stBusDealFreq.bySndBedAddr%100)%10;
1833   1      
1834   1              if((unOperData.ASCII_BCD)[0])
1835   1              {
1836   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,3,page);
1837   2              }
1838   1              else
1839   1              {
1840   2                      if((unOperData.ASCII_BCD)[1])
1841   2                      {
1842   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1843   3                      }
1844   2                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
1845   2              }
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 31  

1846   1              DisplayChineseString(&x,&y,"床开始编号",5,WHITE,BLUE,3,page);
1847   1      
1848   1              Set_VisualPage(page);
1849   1              stLocalControl.byDisplayFace=START_NUM_SET_FACE;        
1850   1              
1851   1      }
1852          
1853          
1854          void ShowNumSetOk(uint8 page)
1855          {
1856   1              uint16 xdata x,y;       
1857   1              Lcd_Clear(BLUE,page);
1858   1              
1859   1              x=(479-32*4)/2;
1860   1              y=(271-32)/2;
1861   1              DisplayChineseString(&x,&y,"编号成功",4,WHITE,BLUE,3,page);
1862   1      
1863   1              Set_VisualPage(page);
1864   1              stLocalControl.byDisplayFace=NUM_SET_OK_FACE;   
1865   1      }
1866          
1867          
1868          /**********************************************************
1869          *函数名称                       :ShowBroadFace  
1870          *函数描述               :显示通话界面
1871          *输入参数               :byRoomAddr:房地址,byBedAddr:床地址,bSelf:是否自身广播中
1872          *返回值                         :       
1873          *全局变量                       :
1874          *调用模块                       :
1875          ***********************************************************
1876          *创建人                 :陈卫国
1877          *创建日期                       :2009-4-14
1878          ***********************************************************
1879          *修改人                         :
1880          *修改日期               :
1881          *注释                   :
1882          **********************************************************/
1883          void ShowBroadFace(uint8 byRoomAddr, uint8 byBedAddr, bit bSelf,uint8 page)
1884          { 
1885   1              uint16 xdata x,y;
1886   1              if(stLocalControl.byDisplayFace==BROAD_FACE) return;
1887   1      
1888   1              
1889   1              Lcd_Clear(BLUE,page);   
1890   1              if(bSelf)
1891   1              {
1892   2                      x=160;
1893   2                      y=120;
1894   2                      DisplayChineseString(&x,&y,"正在广播中",5,WHITE,BLUE,3,page);           
1895   2                      
1896   2              }
1897   1              else
1898   1              {
1899   2                      if(byRoomAddr==YHFJ_ROOM_ADDR)
1900   2                      {
1901   3                              x=(479-32*8)/2;
1902   3                              y=120;
1903   3                              (unOperData.ASCII_BCD)[0]=byBedAddr/100;
1904   3                              (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
1905   3                              (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
1906   3                              if((unOperData.ASCII_BCD)[0])
1907   3                              {
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 32  

1908   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1909   4                              }
1910   3                              else
1911   3                              {
1912   4                                      if((unOperData.ASCII_BCD)[1])
1913   4                                      {
1914   5                                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);
1915   5                                      }
1916   4                                      else
1917   4                                      {
1918   5                                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);                             
1919   5                                      }
1920   4                              }
1921   3                              x+=16;
1922   3                              DisplayChineseString(&x,&y,"号医护分机广播",7,WHITE,BLUE,3,page);               
1923   3                      }
1924   2                      else
1925   2                      {
1926   3                              x=128;
1927   3                              y=120;
1928   3                              if(byBedAddr ==0x00)
1929   3                              {
1930   4                                      (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
1931   4                                      (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
1932   4                                      (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
1933   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1934   4                                      DisplayChineseString(&x,&y,"房门口分机广播",7,WHITE,BLUE,3,page);
1935   4                                      
1936   4                              }
1937   3                              else
1938   3                              {
1939   4                                      (unOperData.ASCII_BCD)[0]=byRoomAddr/100;
1940   4                                      (unOperData.ASCII_BCD)[1]=(byRoomAddr%100)/10;
1941   4                                      (unOperData.ASCII_BCD)[2]=(byRoomAddr%100)%10;
1942   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1943   4                                      DisplayChineseString(&x,&y,"房",1,WHITE,BLUE,3,page);
1944   4                                      (unOperData.ASCII_BCD)[0]=byBedAddr/100;
1945   4                                      (unOperData.ASCII_BCD)[1]=(byBedAddr%100)/10;
1946   4                                      (unOperData.ASCII_BCD)[2]=(byBedAddr%100)%10;
1947   4                                      DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),3,WHITE,BLUE,3,page);
1948   4                                      DisplayChineseString(&x,&y,"床广播",3,WHITE,BLUE,3,page);
1949   4                              }
1950   3                      }
1951   2              }       
1952   1              Set_VisualPage(page);
1953   1              stLocalControl.byDisplayFace=BROAD_FACE;
1954   1       }
1955          
1956          
1957          /*
1958          void ShowStartInfusionCall(uint8 page)
1959          {
1960                  uint16 xdata x,y;
1961                  if(stLocalControl.byDisplayFace==FUSION_CALL_FACE) return;
1962          
1963                  Lcd_Clear(BLUE,page);   
1964                  x=144;
1965                  y=120;
1966                  DisplayChineseString(&x,&y,"开始护理呼叫",6,WHITE,BLUE,3,page);
1967          
1968                  Set_VisualPage(page);
1969          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 33  

1970                  stLocalControl.byDisplayFace=FUSION_CALL_FACE;
1971          
1972          }
1973          
1974          void ShowStartServiceCall(uint8 page)
1975          {
1976                  uint16 xdata x,y;
1977                  if(stLocalControl.byDisplayFace==SERVICE_CALL_FACE) return;     
1978                  Lcd_Clear(BLUE,page);
1979                  
1980                  x=144;
1981                  y=120;
1982                  DisplayChineseString(&x,&y,"开始服务呼叫",6,WHITE,BLUE,3,page);
1983                  
1984                  Set_VisualPage(page);
1985                  stLocalControl.byDisplayFace=SERVICE_CALL_FACE;
1986          
1987          }
1988          
1989          void ShowStartEmergencyCall(uint8 page)
1990          {
1991                  uint16 xdata x,y;
1992                  if(stLocalControl.byDisplayFace==EMERGENCY_CALL_FACE) return;
1993          
1994                  Lcd_Clear(BLUE,page);
1995                  
1996                  x=144;
1997                  y=120;
1998                  DisplayChineseString(&x,&y,"开始紧急呼叫",6,WHITE,BLUE,3,page);
1999          
2000                  Set_VisualPage(page);
2001                  stLocalControl.byDisplayFace=EMERGENCY_CALL_FACE;
2002          
2003          }
2004          
2005          void ShowStartHelpCall(uint8 page)
2006          {
2007                  uint16 xdata x,y;
2008                  if(stLocalControl.byDisplayFace==HELP_CALL_FACE) return;        
2009                  Lcd_Clear(BLUE,page);
2010                  
2011                  x=144;
2012                  y=120;
2013                  DisplayChineseString(&x,&y,"开始求援呼叫",6,WHITE,BLUE,3,page);
2014          
2015                  Set_VisualPage(page);
2016                  stLocalControl.byDisplayFace=HELP_CALL_FACE;
2017          }
2018          
2019          void ShowCallSuccess(uint8 page)
2020          {
2021                  uint16 xdata x,y;
2022                  if(stLocalControl.byDisplayFace==CALL_SUCCESS_FACE) return;      
2023                  Lcd_Clear(BLUE,page);
2024                  
2025                  x=120;
2026                  y=120;
2027                  DisplayChineseString(&x,&y,"呼叫成功",4,WHITE,BLUE,3,page);
2028                  DisplayASCIIString(&x,&y,",",1,WHITE,BLUE,2,page);
2029                  DisplayChineseString(&x,&y,"请等待",3,WHITE,BLUE,3,page);
2030          
2031                  Set_VisualPage(page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 34  

2032                  stLocalControl.byDisplayFace=CALL_SUCCESS_FACE;
2033          }
2034          
2035          */
2036          
2037          
2038          //x,y:起始点的坐标
2039          //type_x_wide:原子体X轴的宽度, type_y_height:原子体Y轴的高度
2040          //mul_row:纵向放大倍数,   mul_col:横向放大一倍
2041          //cbc_filter:过滤参数 1:过滤背景色
2042          //p:要显示的图片数据指针
2043          
2044          void lcd_fangda_dis_text(uint16 x, uint16 y, uint8 type_x_wide, uint8 type_y_height, 
2045                                                           uint8 mul_row,uint8 mul_col,uint16 fcolor,uint16 bcolor,uint8 *p,uint8 page)
2046          {
2047   1      
2048   1              unsigned char xdata i,j,k,m,n;
2049   1      
2050   1              Set_Display_Area(x,x+type_x_wide*mul_col-1,y+page*LCD_PIX_Y,y+page*LCD_PIX_Y+type_y_height*mul_row-1);
2051   1              Send_Ssd1963_Command(0x2C);
2052   1      
2053   1              WDT_CONTR = 0x3d; 
2054   1      
2055   1              SSD1963_CS=0;
2056   1              for (i=0;i<type_y_height;i++) //原字体有多少行
2057   1              {
2058   2      
2059   2                      for(n=0;n<mul_row;n++)  //纵坐标的放大倍数
2060   2                      {
2061   3      
2062   3                              for(j=0;j<type_x_wide/8;j++)    //一横有几个字节,例16*16 行向2个字节
2063   3                              {
2064   4      
2065   4                                      for(k=0;k<8;k++)        //1个字节8点
2066   4                                      {
2067   5      
2068   5                                              for(m=0;m<mul_col;m++)  //横坐标放大倍数
2069   5                                              {
2070   6                                                      //if(((x+8*j*mul_col+k*mul_col+m)<LCD_PIX_X)&&((y+i*mul_row+n)<LCD_PIX_Y))      //在区域范围内
2071   6                                                      //{
2072   6                                                              if ((p[i*(type_x_wide/8)+j]>>(7-k))&0x1)
2073   6                                                              {
2074   7                                                                      WriteData16(fcolor);
2075   7                                                              }
2076   6      
2077   6                                                              else
2078   6                                                              {
2079   7                                                                      WriteData16(bcolor);                                                                    
2080   7                                                              }
2081   6      
2082   6                                                      //}
2083   6                                              }
2084   5                                      }
2085   4                              }
2086   3                      }
2087   2              }
2088   1              SSD1963_CS=1;
2089   1      }
2090          
2091          
2092          void ShowPowerUpFace(uint8 page)        
2093          {
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 35  

2094   1              uint16 x,y;
2095   1              Lcd_Clear(BLUE,page);
2096   1              
2097   1              x=(479-32*6)/2;
2098   1              y=(271-32*4)/2;
2099   1              DisplayChineseString(&x,&y,"系统初始化",5,WHITE,BLUE,3,page);
2100   1              DisplayASCIIString(&x,&y,"...",3,WHITE,BLUE,3,page);
2101   1      
2102   1              y += 32;
2103   1              x=(479-32*4)/2;
2104   1              DisplayChineseString(&x,&y,"版本",2,WHITE,BLUE,3,page);
2105   1              DisplayASCIIString(&x,&y,"V",1,WHITE,BLUE,3,page);
2106   1              (unOperData.ASCII_BCD)[0]=VERSION_HI/100;
2107   1              (unOperData.ASCII_BCD)[1]=(VERSION_HI%100)/10;
2108   1              (unOperData.ASCII_BCD)[2]=(VERSION_HI%100)%10;  
2109   1              if((unOperData.ASCII_BCD)[0])
2110   1              {
2111   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,3,page);
2112   2              }
2113   1              else
2114   1              {       
2115   2                      if((unOperData.ASCII_BCD)[1])
2116   2                      {
2117   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);     
2118   3                      }
2119   2                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
2120   2              }
2121   1              DisplayASCIIString(&x,&y,".",1,WHITE,BLUE,3,page);
2122   1              
2123   1              (unOperData.ASCII_BCD)[0]=VERSION_LO/100;
2124   1              (unOperData.ASCII_BCD)[1]=(VERSION_LO%100)/10;
2125   1              (unOperData.ASCII_BCD)[2]=(VERSION_LO%100)%10;  
2126   1              if((unOperData.ASCII_BCD)[0])
2127   1              {
2128   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,3,page);
2129   2              }
2130   1              else
2131   1              {       
2132   2                      if((unOperData.ASCII_BCD)[1])
2133   2                      {
2134   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,3,page);     
2135   3                      }
2136   2                      else DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,3,page);
2137   2              }       
2138   1      
2139   1      /*      y += 32;
2140   1              x =(479-32*10)/2;
2141   1              DisplayChineseString(&x,&y,"湖南一特电子医用工程",10,WHITE,BLUE,3,page);
2142   1      
2143   1              y += 32;
2144   1              x =(479-32*6)/2;        
2145   1              DisplayChineseString(&x,&y,"股份有限公司",6,WHITE,BLUE,3,page);*/
2146   1      
2147   1              y += 32;
2148   1              x =(479-32*10)/2;
2149   1              DisplayChineseString(&x,&y,"病房护理系统医护分机",10,WHITE,BLUE,3,page);
2150   1      
2151   1              
2152   1              Set_VisualPage(page);
2153   1              stLocalControl.byDisplayFace=POWER_UP_FACE;
2154   1      }
2155          
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 36  

2156          
2157          //主菜单显示界面
2158          void ShowMainMenuFace(uint8 page)
2159          {
2160   1              uint16 x,y;
2161   1              Lcd_Clear(BLUE,page);
2162   1      
2163   1              //画四条横线
2164   1              DisplayBlock(0,0,479,1,WHITE,page);
2165   1              DisplayBlock(0,90,479,91,WHITE,page);
2166   1              DisplayBlock(0,180,479,181,WHITE,page);
2167   1              DisplayBlock(0,270,479,271,WHITE,page);
2168   1      
2169   1              //画四条竖线
2170   1              DisplayBlock(0,0,1,271,WHITE,page);
2171   1              DisplayBlock(159,0,160,271,WHITE,page);
2172   1              DisplayBlock(318,0,319,271,WHITE,page);
2173   1              DisplayBlock(478,0,479,271,WHITE,page);
2174   1      
2175   1              //1.时间设置
2176   1              x=2+(157-32*3)/2;
2177   1              y=2+(88-32*2)/2;
2178   1              DisplayString(&x,&y,"1.时间",6,WHITE,BLUE,2,page);
2179   1              x=2+(157-32*2)/2;
2180   1              y+= 32+4;
2181   1              DisplayString(&x,&y,"设置",4,WHITE,BLUE,2,page);
2182   1      
2183   1              //2.在线编号
2184   1              x=161+(157-32*3)/2;
2185   1              y=2+(88-32*2)/2;
2186   1              DisplayString(&x,&y,"2.设备",6,WHITE,BLUE,2,page);
2187   1              x=161+(157-32*2)/2;
2188   1              y+= 32+4;
2189   1              DisplayString(&x,&y,"编号",4,WHITE,BLUE,2,page);        
2190   1      
2191   1              //3.音量时间段设置
2192   1              x=320+(157-32*4)/2;
2193   1              y=2+(88-32*2)/2;
2194   1              DisplayString(&x,&y,"3.音量时",8,WHITE,BLUE,2,page);
2195   1              x=320+(157-32*4)/2;
2196   1              y+= 32+4;
2197   1              DisplayString(&x,&y,"间段设置",8,WHITE,BLUE,2,page);
2198   1      
2199   1              //4.背光时间段设置
2200   1              x=2+(157-32*4)/2;
2201   1              y=92+(88-32*2)/2;
2202   1              DisplayString(&x,&y,"4.背光时",8,WHITE,BLUE,2,page);
2203   1              x=2+(157-32*4)/2;
2204   1              y+= 32+4;
2205   1              DisplayString(&x,&y,"间段设置",8,WHITE,BLUE,2,page);
2206   1      
2207   1              //5.统计设置
2208   1              x=161+(157-32*3)/2;
2209   1              y=92+(88-32*2)/2;
2210   1              DisplayString(&x,&y,"5.统计",6,WHITE,BLUE,2,page);
2211   1              x=161+(157-32*2)/2;
2212   1              y+= 32+4;
2213   1              DisplayString(&x,&y,"设置",4,WHITE,BLUE,2,page);
2214   1      
2215   1              //6.计算
2216   1              x=320+(157-32*3)/2;
2217   1              y=92+(88-32)/2;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 37  

2218   1              DisplayString(&x,&y,"6.计算",6,WHITE,BLUE,2,page);
2219   1      
2220   1      
2221   1              //7.最大音量设置
2222   1              x=2+(157-32*4)/2;
2223   1              y=182+(88-32*2)/2;
2224   1              DisplayString(&x,&y,"7.最大音",8,WHITE,BLUE,2,page);
2225   1              x=2+(157-32*3)/2;
2226   1              y+= 32+4;
2227   1              DisplayString(&x,&y,"量设置",6,WHITE,BLUE,2,page);
2228   1      
2229   1      
2230   1              Set_VisualPage(page);
2231   1              stLocalControl.byDisplayFace=MAIN_MENU_FACE;    
2232   1      
2233   1              stLocalControl.byKeyInTimes = 0;
2234   1      }
2235          
2236          
2237          void ShowNumberPWInputFace(uint8 page)
2238          {
2239   1              uint16 x,y;
2240   1              Lcd_Clear(BLUE,page);
2241   1              for(x=0;x<10;x++)
2242   1              {
2243   2                      (unOperData.ASCII_BCD)[x]=0x00;
2244   2              }
2245   1              x=10;
2246   1              y=30;
2247   1              DisplayString(&x,&y,"请输入编号密码:",15,WHITE,BLUE,3,page);
2248   1              Set_VisualPage(page);
2249   1              stLocalControl.byDisplayFace=NUMBER_PW_INPUT_FACE;      
2250   1      }
2251          
2252          
2253          
2254          //设备编号菜单显示界面
2255          void ShowNumberSetFace(uint8 page)
2256          {
2257   1              uint16 x,y;
2258   1              Lcd_Clear(BLUE,page);
2259   1      
2260   1              //画四条横线
2261   1              DisplayBlock(0,0,479,1,WHITE,page);
2262   1              DisplayBlock(0,90,479,91,WHITE,page);
2263   1              DisplayBlock(0,180,479,181,WHITE,page);
2264   1              DisplayBlock(0,270,479,271,WHITE,page);
2265   1      
2266   1              //画四条竖线
2267   1              DisplayBlock(0,0,1,271,WHITE,page);
2268   1              DisplayBlock(159,0,160,271,WHITE,page);
2269   1              DisplayBlock(318,0,319,271,WHITE,page);
2270   1              DisplayBlock(478,0,479,271,WHITE,page);
2271   1      
2272   1              //1床头分机编号
2273   1              x=2+(157-24*4)/2;
2274   1              y=17;           //y=2+(88-10-24*2)/2;     间隔为10
2275   1              DisplayString(&x,&y,"1.本医护",8,WHITE,BLUE,2,page);
2276   1              x=2+(157-24*4)/2;
2277   1              y+= 24+10;
2278   1              DisplayString(&x,&y,"分机编号",8,WHITE,BLUE,2,page);
2279   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 38  

2280   1              //2.卫浴门口分机编号
2281   1              x=161+(157-24*5)/2;
2282   1              y=17;           //y=2+(88-10-24*2)/2;     间隔为10
2283   1              DisplayString(&x,&y,"2.卫浴门口",10,WHITE,BLUE,2,page);
2284   1              x=161+(157-24*4)/2;
2285   1              y+= 24+10;
2286   1              DisplayString(&x,&y,"分机编号",8,WHITE,BLUE,2,page);    
2287   1      
2288   1              //3.移动分机编号
2289   1              x=320+(157-24*3)/2;
2290   1              y=17;           //y=2+(88-10-24*2)/2;     间隔为10
2291   1              DisplayString(&x,&y,"3.移动",6,WHITE,BLUE,2,page);
2292   1              x=320+(157-24*4)/2;
2293   1              y+= 24+10;
2294   1              DisplayString(&x,&y,"分机编号",8,WHITE,BLUE,2,page);
2295   1      
2296   1              //4.加床分机编号
2297   1              x=2+(157-24*3)/2;
2298   1              y=107;          //y=92+(88-10-24*2)/2;    间隔为10      
2299   1              DisplayString(&x,&y,"4.加床",6,WHITE,BLUE,2,page);
2300   1              x=2+(157-24*4)/2;
2301   1              y+= 24+10;
2302   1              DisplayString(&x,&y,"分机编号",8,WHITE,BLUE,2,page);
2303   1      
2304   1              //4.本医护分机编号
2305   1              x=161+(157-24*3)/2;
2306   1              y=107;          //y=92+(88-10-24*2)/2;    间隔为10      
2307   1              DisplayString(&x,&y,"5.床头",6,WHITE,BLUE,2,page);
2308   1              x=161+(157-24*4)/2;
2309   1              y+= 24+10;
2310   1              DisplayString(&x,&y,"分机编号",8,WHITE,BLUE,2,page);
2311   1              
2312   1              Set_VisualPage(page);
2313   1              stLocalControl.byDisplayFace=NUMBER_SET_FACE;   
2314   1      }
2315          
2316          void ShowTimeSet(uint8 page)
2317          {
2318   1              uint16 xdata x,y;
2319   1              Lcd_Clear(BLUE,page);
2320   1      
2321   1              x= (480-24*11)/2;       //108
2322   1              y= (272-32*5-10)/2;     //每一项间隔２线
2323   1      
2324   1              DisplayString(&x,&y,"请输入年份:",11,WHITE,BLUE,2,page);
2325   1              DisplayBlock(x,y,x+31,y+23,WHITE,page);
2326   1              (unOperData.ASCII_BCD)[0]=stLocalControl.stTime.byYear>>4;
2327   1              (unOperData.ASCII_BCD)[1]=stLocalControl.stTime.byYear&0x0f;
2328   1              x +=4;
2329   1              DisplayDigitString(&x,&y,(unOperData.ASCII_BCD),2,BLUE,WHITE,2,page);
2330   1              x +=32;
2331   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2332   1      
2333   1              
2334   1              x= (480-24*11)/2;
2335   1              y += 34;
2336   1              DisplayString(&x,&y,"请输入月份:",11,WHITE,BLUE,2,page);
2337   1              DisplayBlock(x,y,x+31,y+23,WHITE,page);
2338   1              (unOperData.ASCII_BCD)[2]=stLocalControl.stTime.byMonth>>4;
2339   1              (unOperData.ASCII_BCD)[3]=stLocalControl.stTime.byMonth&0x0f;
2340   1              x +=4;
2341   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),2,BLUE,WHITE,2,page);     
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 39  

2342   1              
2343   1      
2344   1              x= (480-24*11)/2;
2345   1              y += 34;
2346   1              DisplayString(&x,&y,"请输入日期:",11,WHITE,BLUE,2,page);
2347   1              DisplayBlock(x,y,x+31,y+23,WHITE,page);
2348   1              (unOperData.ASCII_BCD)[4]=stLocalControl.stTime.byDay>>4;
2349   1              (unOperData.ASCII_BCD)[5]=stLocalControl.stTime.byDay&0x0f;
2350   1              x +=4;
2351   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[4]),2,BLUE,WHITE,2,page);     
2352   1              
2353   1      
2354   1              x= (480-24*11)/2;
2355   1              y += 34;
2356   1              DisplayString(&x,&y,"请输入小时:",11,WHITE,BLUE,2,page);
2357   1              DisplayBlock(x,y,x+31,y+23,WHITE,page);
2358   1              (unOperData.ASCII_BCD)[6]=stLocalControl.stTime.byHour>>4;
2359   1              (unOperData.ASCII_BCD)[7]=stLocalControl.stTime.byHour&0x0f;
2360   1              x +=4;
2361   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),2,BLUE,WHITE,2,page);     
2362   1              
2363   1      
2364   1              x= (480-24*11)/2;
2365   1              y += 34;
2366   1              DisplayString(&x,&y,"请输入分钟:",11,WHITE,BLUE,2,page);
2367   1              DisplayBlock(x,y,x+31,y+23,WHITE,page);
2368   1              (unOperData.ASCII_BCD)[8]=stLocalControl.stTime.byMin>>4;
2369   1              (unOperData.ASCII_BCD)[9]=stLocalControl.stTime.byMin&0x0f;
2370   1              x +=4;
2371   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[8]),2,BLUE,WHITE,2,page);     
2372   1              
2373   1      
2374   1              Set_VisualPage(page);
2375   1              stLocalControl.byDisplayFace=TIME_SET_FACE;     
2376   1      
2377   1      }
2378          
2379          
2380          /*void ShowNumberSet(uint8 page)
2381          {
2382                  uint16 x,y;
2383                  Lcd_Clear(BLUE,page);
2384          
2385                  x= (480-24*8)/2;
2386                  y= (272-24*4-8)/2; //每一项间隔２线
2387          
2388                  DisplayString(&x,&y,"分机编号,请输入",15,WHITE,BLUE,2,page);
2389          
2390                  x= (480-24*8)/2;
2391                  y += 34;
2392                  DisplayString(&x,&y,"区号:",5,WHITE,BLUE,2,page);
2393                  DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2394                  x += 68;        //输入框与后续字空32点宽
2395                  DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2396          
2397          
2398                  x= (480-24*8)/2;
2399                  y += 34;
2400                  DisplayString(&x,&y,"房号:",5,WHITE,BLUE,2,page);
2401                  DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2402          
2403                  
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 40  

2404          
2405                  x= (480-24*8)/2;
2406                  y += 34;
2407                  DisplayString(&x,&y,"床号:",5,WHITE,BLUE,2,page);
2408                  DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2409          
2410          
2411          
2412                  Set_VisualPage(page);
2413                  stLocalControl.byDisplayFace=NUMBER_SET_FACE; 
2414          }
2415          */
2416          
2417          void ShowBedFjNumberSet(uint8 page)
2418          {
2419   1              uint16 x,y;
2420   1              Lcd_Clear(BLUE,page);
2421   1              memset((unOperData.ASCII_BCD),0x00,10);
2422   1      
2423   1              x= (480-24*10)/2;
2424   1              y= (272-24*4-8)/2; //每一项间隔２线
2425   1      
2426   1              DisplayString(&x,&y,"床头分机编号,请输入",19,WHITE,BLUE,2,page);
2427   1      
2428   1              x= (480-24*8)/2;
2429   1              y += 34;
2430   1              
2431   1              /*DisplayString(&x,&y,"区号:",5,WHITE,BLUE,2,page);
2432   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page);     
2433   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2434   1              x += 32;        //输入框与后续字空32点宽
2435   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2436   1      
2437   1      
2438   1              x= (480-24*8)/2;
2439   1              y += 34;
2440   1              DisplayString(&x,&y,"房号:",5,WHITE,BLUE,2,page);
2441   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[3]),3,BLUE,WHITE,2,page);     
2442   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2443   1      
2444   1              
2445   1      
2446   1              x= (480-24*8)/2;
2447   1              y += 34;
2448   1              DisplayString(&x,&y,"床号:",5,WHITE,BLUE,2,page);
2449   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);             
2450   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2451   1      */
2452   1      
2453   1              DisplayString(&x,&y,"房号:",5,WHITE,BLUE,2,page);
2454   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page); 
2455   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2456   1              x += 32;        //输入框与后续字空32点宽
2457   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2458   1      
2459   1      
2460   1              x= (480-24*8)/2;
2461   1              y += 34;
2462   1              DisplayString(&x,&y,"床号:",5,WHITE,BLUE,2,page);
2463   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[3]),3,BLUE,WHITE,2,page); 
2464   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2465   1              
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 41  

2466   1      
2467   1              Set_VisualPage(page);
2468   1              stLocalControl.byDisplayFace=BED_FJ_NUMBER_SET_FACE; 
2469   1      }
2470          
2471          
2472          void ShowWcDoorFjNumberSet(uint8 page)
2473          {
2474   1              uint16 x,y;
2475   1              Lcd_Clear(BLUE,page);
2476   1              memset((unOperData.ASCII_BCD),0x00,10);
2477   1      
2478   1              x= (480-24*12)/2;
2479   1              y= (272-24*4-8)/2; //每一项间隔２线
2480   1      
2481   1              DisplayString(&x,&y,"卫浴门口分机编号,请输入",23,WHITE,BLUE,2,page);
2482   1              
2483   1      /*      x= (480-24*8)/2;
2484   1              y += 34;
2485   1              DisplayString(&x,&y,"区号:",5,WHITE,BLUE,2,page);
2486   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page);
2487   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2488   1              x += 32;        //输入框与后续字空32点宽
2489   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2490   1      
2491   1      
2492   1              x= (480-24*8)/2;
2493   1              x -=24;
2494   1              y += 34;
2495   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2496   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);
2497   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间     
2498   1      */
2499   1      
2500   1              x= (480-24*8)/2;
2501   1              x -=24;
2502   1              y += 34;
2503   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2504   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);
2505   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2506   1              x += 32;        //输入框与后续字空32点宽
2507   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2508   1      
2509   1      
2510   1              Set_VisualPage(page);
2511   1              stLocalControl.byDisplayFace=WC_FJ_NUMBER_SET_FACE; 
2512   1      }
2513          
2514          
2515          void ShowMoveFjNumberSet(uint8 page)
2516          {
2517   1              uint16 x,y;
2518   1              Lcd_Clear(BLUE,page);
2519   1              memset((unOperData.ASCII_BCD),0x00,10);
2520   1              unOperData.ASCII_BCD[2] = 1;  //移动分机编号从1号开始
2521   1              unOperData.ASCII_BCD[5] = 1;    //起始床号默认为1号
2522   1              unOperData.ASCII_BCD[6] = 2;    //结束床号默认为255号
2523   1              unOperData.ASCII_BCD[7] = 5;
2524   1              unOperData.ASCII_BCD[8] = 5;
2525   1      
2526   1      
2527   1              x= (480-24*10)/2;  //120
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 42  

2528   1              y= (272-34*4)/2; //每一项间隔10线   //68
2529   1              DisplayString(&x,&y,"移动分机编号,请输入",19,WHITE,BLUE,2,page);
2530   1      
2531   1      
2532   1              x= (480-24*10)/2; //120
2533   1              y += 34;     //102
2534   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2535   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page);  //120+12*7=204
2536   1              x += 32;        //输入框与后续字空32点宽
2537   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);        //204+12*3+32= 272
2538   1      
2539   1              x= (480-24*10)/2;       //120
2540   1              y += 34;   //136
2541   1              DisplayString(&x,&y,"起始床号:",9,WHITE,BLUE,2,page);
2542   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[3]),3,BLUE,WHITE,2,page); //120+12*9 = 228
2543   1      
2544   1              x= (480-24*10)/2;
2545   1              y += 34;
2546   1              DisplayString(&x,&y,"结束床号:",9,WHITE,BLUE,2,page);
2547   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);     
2548   1      
2549   1              Set_VisualPage(page);
2550   1              stLocalControl.byDisplayFace=MOVE_FJ_NUMBER_SET_FACE; 
2551   1      }
2552          
2553          
2554          void ShowAddFjNumberSet(uint8 page)
2555          {
2556   1              uint16 x,y;
2557   1              Lcd_Clear(BLUE,page);
2558   1              memset((unOperData.ASCII_BCD),0x00,10);
2559   1      
2560   1              x= (480-24*10)/2;
2561   1              y= (272-24*4-8)/2; //每一项间隔２线
2562   1      
2563   1              DisplayString(&x,&y,"加床分机编号,请输入",19,WHITE,BLUE,2,page);
2564   1      
2565   1      /*      x= (480-24*8)/2;
2566   1              y += 34;
2567   1              DisplayString(&x,&y,"区号:",5,WHITE,BLUE,2,page);
2568   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page);
2569   1              //DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间   
2570   1              x += 32;        //输入框与后续字空32点宽
2571   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2572   1      
2573   1      
2574   1              x= (480-24*8)/2;
2575   1              x -=24;
2576   1              y += 34;
2577   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2578   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);
2579   1              //DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2580   1      */
2581   1              x= (480-24*8)/2;
2582   1              x -=24;
2583   1              y += 34;
2584   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2585   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);
2586   1              //DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2587   1              x += 32;        //输入框与后续字空32点宽
2588   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2589   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 43  

2590   1      
2591   1              Set_VisualPage(page);
2592   1              stLocalControl.byDisplayFace=ADD_FJ_NUMBER_SET_FACE; 
2593   1      }
2594          
2595          
2596          
2597          
2598          void ShowSelfNumberSet(uint8 page)
2599          {
2600   1              uint16 x,y;
2601   1              Lcd_Clear(BLUE,page);
2602   1      
2603   1              (unOperData.ASCII_BCD)[0] = stLocalControl.stEepromCfgData.bySelfSecAddr/100;
2604   1              (unOperData.ASCII_BCD)[1] = (stLocalControl.stEepromCfgData.bySelfSecAddr%100)/10;
2605   1              (unOperData.ASCII_BCD)[2] = (stLocalControl.stEepromCfgData.bySelfSecAddr%100)%10;      
2606   1      
2607   1              x= (480-24*8)/2;
2608   1              y= (272-24*4-8)/2; //每一项间隔２线
2609   1      
2610   1              DisplayString(&x,&y,"本机编号,请输入",15,WHITE,BLUE,2,page);
2611   1      
2612   1              x= (480-24*8)/2;
2613   1              y += 34;
2614   1              DisplayString(&x,&y,"区号:",5,WHITE,BLUE,2,page);
2615   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2616   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLUE,WHITE,2,page);
2617   1              x += 32;        //输入框与后续字空32点宽
2618   1              DisplayString(&x,&y,"按[确认]键",10,YELLOW,BLUE,2,page);
2619   1      
2620   1      
2621   1      
2622   1              (unOperData.ASCII_BCD)[6] = stLocalControl.stEepromCfgData.bySelfBedAddr/100;
2623   1              (unOperData.ASCII_BCD)[7] = (stLocalControl.stEepromCfgData.bySelfBedAddr%100)/10;
2624   1              (unOperData.ASCII_BCD)[8] = (stLocalControl.stEepromCfgData.bySelfBedAddr%100)%10;
2625   1      
2626   1              x= (480-24*8)/2;
2627   1              x -=24;
2628   1              y += 34;
2629   1              DisplayString(&x,&y,"分机号:",7,WHITE,BLUE,2,page);
2630   1      //      DisplayBlock(x,y,x+36,y+23,WHITE,page); // 3 个空间
2631   1              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[6]),3,BLUE,WHITE,2,page);
2632   1              
2633   1      
2634   1              Set_VisualPage(page);
2635   1              stLocalControl.byDisplayFace=SELF_NUMBER_SET_FACE;      
2636   1      }
2637          
2638          
2639          void ShowVoiceTimerSet(uint8 page)
2640          {
2641   1              uint16 x,y;
2642   1              Lcd_Clear(YELLOW,page);
2643   1      
2644   1              x= 32;
2645   1              y= (272-24*7-70)/2; //每一项间隔10线
2646   1      
2647   1              DisplayChineseString(&x,&y,"小音量时段起始时间",9,BLACK,YELLOW,2,page);
2648   1      
2649   1              x= 64;
2650   1              y += 34;
2651   1              DisplayString(&x,&y,"请输入小时:",11,BLACK,YELLOW,2,page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 44  

2652   1      //      DisplayBlock(x,y,x+23,y+23,CYAN,page); // 2 个空间
2653   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[5]>>4;
2654   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[5]&0x0f;
2655   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,RED,CYAN,2,page);
2656   1              
2657   1              x += 32;
2658   1              DisplayString(&x,&y,"按[确认]键",10,BLUE,YELLOW,2,page);
2659   1      
2660   1              x= 64+24*3;
2661   1              y += 34;
2662   1              DisplayString(&x,&y,"分钟:",5,BLACK,YELLOW,2,page);
2663   1      //      DisplayBlock(x,y,x+23,y+23,CYAN,page); // 2 个空间
2664   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[6]>>4;
2665   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[6]&0x0f;
2666   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,RED,CYAN,2,page);
2667   1      
2668   1      
2669   1      
2670   1              x= 32;
2671   1              y += 34;
2672   1              DisplayChineseString(&x,&y,"结束时间",4,BLACK,YELLOW,2,page);
2673   1      
2674   1              x= 64;
2675   1              y += 34;
2676   1              DisplayString(&x,&y,"请输入小时:",11,BLACK,YELLOW,2,page);
2677   1      //      DisplayBlock(x,y,x+23,y+23,CYAN,page); // 2 个空间
2678   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[7]>>4;
2679   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[7]&0x0f;
2680   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,RED,CYAN,2,page);
2681   1      
2682   1      
2683   1              x= 64+24*3;
2684   1              y += 34;
2685   1              DisplayString(&x,&y,"分钟:",5,BLACK,YELLOW,2,page);
2686   1      //      DisplayBlock(x,y,x+23,y+23,CYAN,page); // 2 个空间
2687   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[8]>>4;
2688   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[8]&0x0f;
2689   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,RED,CYAN,2,page);
2690   1      
2691   1      
2692   1              x=64;
2693   1              y +=34;
2694   1              DisplayString(&x,&y,"请输入音量:",11,BLACK,YELLOW,2,page);
2695   1      //      DisplayBlock(x,y,x+23,y+23,CYAN,page); // 2 个空间      
2696   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[9]>>4;
2697   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[9]&0x0f;
2698   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,RED,CYAN,2,page);
2699   1      
2700   1      
2701   1              unOperData.ASCII_BCD[0] =unOperData.ASCII_BCD[5]>>4;
2702   1              unOperData.ASCII_BCD[1] =unOperData.ASCII_BCD[5]&0x0f;
2703   1      
2704   1              Set_VisualPage(page);
2705   1              stLocalControl.byDisplayFace=VOICE_TIMER_SET_FACE; 
2706   1      
2707   1      }
2708          
2709          
2710          void ShowMaxVolSetFace(uint8 page)
2711          {
2712   1              uint16 x,y;
2713   1              Lcd_Clear(PURPLE,page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 45  

2714   1      
2715   1      
2716   1              x= 32;
2717   1              y= 60;
2718   1      
2719   1              DisplayString(&x,&y,"1.语音报号最大音量:",19,GREEN,PURPLE,2,page);
2720   1      
2721   1              x=272;
2722   1              (unOperData.ASCII_BCD)[0] = stLocalControl.stEepromCfgData.byMaxPlayVolVal;
2723   1              
2724   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,1,RED,CYAN,2,page);
2725   1      
2726   1              Set_VisualPage(page);
2727   1              stLocalControl.byDisplayFace=MAX_VOL_SET_FACE;  
2728   1      }
2729          
2730          
2731          
2732          
2733          void ShowBackLightTimerSet(uint8 page)
2734          {
2735   1              uint16 x,y;
2736   1              Lcd_Clear(CYAN,page);
2737   1      
2738   1              x= 32;
2739   1              y= (272-24*7-70)/2; //每一项间隔10线
2740   1      
2741   1              DisplayChineseString(&x,&y,"背光关起始时间",7,BLUE,CYAN,2,page);
2742   1      
2743   1              x= 64;
2744   1              y += 34;
2745   1              DisplayString(&x,&y,"请输入小时:",11,BLUE,CYAN,2,page);
2746   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[5]>>4;
2747   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[5]&0x0f;
2748   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,BLUE,RED,2,page);
2749   1      
2750   1      
2751   1              x += 32;
2752   1              DisplayString(&x,&y,"按<确认>键",10,YELLOW,CYAN,2,page);
2753   1      
2754   1              x= 64+24*3;
2755   1              y += 34;
2756   1              DisplayString(&x,&y,"分钟:",5,BLUE,CYAN,2,page);
2757   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[6]>>4;
2758   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[6]&0x0f;
2759   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,BLUE,RED,2,page);
2760   1      
2761   1      
2762   1      
2763   1              x= 32;
2764   1              y += 68;
2765   1              DisplayChineseString(&x,&y,"结束时间",4,BLUE,CYAN,2,page);
2766   1      
2767   1              x= 64;
2768   1              y += 34;
2769   1              DisplayString(&x,&y,"请输入小时:",11,BLUE,CYAN,2,page);
2770   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[7]>>4;
2771   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[7]&0x0f;
2772   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,BLUE,RED,2,page);
2773   1      
2774   1      
2775   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 46  

2776   1              x= 64+24*3;
2777   1              y += 34;
2778   1              DisplayString(&x,&y,"分钟:",5,BLUE,CYAN,2,page);
2779   1              (unOperData.ASCII_BCD)[0] = (unOperData.ASCII_BCD)[8]>>4;
2780   1              (unOperData.ASCII_BCD)[1] = (unOperData.ASCII_BCD)[8]&0x0f;
2781   1              DisplayDigitString(&x,&y,unOperData.ASCII_BCD,2,BLUE,RED,2,page);
2782   1      
2783   1              unOperData.ASCII_BCD[0] =unOperData.ASCII_BCD[5]>>4;
2784   1              unOperData.ASCII_BCD[1] =unOperData.ASCII_BCD[5]&0x0f;
2785   1      
2786   1              Set_VisualPage(page);
2787   1              stLocalControl.byDisplayFace=BACK_LIGHT_TIMER_SET_FACE; 
2788   1      
2789   1      }
2790          
2791          
2792          void ShowSecInfoSet(uint8 page)
2793          {
2794   1              uint16 x,y;
2795   1              Lcd_Clear(WHITE,page);
2796   1      
2797   1              Read_Cont(WARD_FACE_DATA_START_ADDR,WARD_FACE_DATA_LEN,WardDataBuff);
2798   1      
2799   1      
2800   1              x=64;y=30;
2801   1              DisplayChineseString(&x,&y,"病区动态信息设置",8,BLUE,WHITE,3,page);
2802   1      
2803   1              x=0;y=72;
2804   1              DisplayChineseString(&x,&y,"病区",2,BLACK,GREEN,2,page);
2805   1      
2806   1              x=72;y=72;
2807   1              DisplayBlock(72,72,72+35,72+23,BLUE,page);
2808   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[6]/100;
2809   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[6]%100)/10;     
2810   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[6]%100)%10;
2811   1              
2812   1              
2813   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2814   1              {
2815   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2816   2              }
2817   1              else
2818   1              {
2819   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2820   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2821   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2822   2              }
2823   1      
2824   1              
2825   1              x=240;y=72;
2826   1              DisplayChineseString(&x,&y,"病人总数",4,BLACK,PURPLE,2,page);
2827   1      
2828   1              x=360;y=72;
2829   1              DisplayBlock(360,72,360+35,72+23,BLUE,page);
2830   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[7]/100;
2831   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[7]%100)/10;     
2832   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[7]%100)%10;
2833   1              
2834   1              
2835   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2836   1              {
2837   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 47  

2838   2              }
2839   1              else
2840   1              {
2841   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2842   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2843   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2844   2              }
2845   1              
2846   1              
2847   1              x=0;y=107;
2848   1              DisplayChineseString(&x,&y,"病危",2,BLACK,YELLOW,2,page);
2849   1              
2850   1              x=72;y=107;
2851   1              DisplayBlock(72,107,72+35,107+23,BLUE,page);
2852   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[8]/100;
2853   1              
2854   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[8]%100)/10;     
2855   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[8]%100)%10;     
2856   1              
2857   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2858   1              {
2859   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2860   2              }
2861   1              else
2862   1              {
2863   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2864   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2865   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2866   2              }
2867   1              
2868   1              
2869   1              x=160;
2870   1              DisplayChineseString(&x,&y,"床位",2,BLACK,YELLOW,2,page);
2871   1              
2872   1              x=232;y=107;
2873   1              DisplayBlock(232,107,232+35,107+23,BLUE,page);
2874   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[9]/100;
2875   1              
2876   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[9]%100)/10;     
2877   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[9]%100)%10;     
2878   1              
2879   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2880   1              {
2881   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2882   2              }
2883   1              else
2884   1              {
2885   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2886   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2887   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2888   2              }
2889   1              
2890   1              
2891   1              x=320;
2892   1              DisplayChineseString(&x,&y,"空床",2,BLACK,YELLOW,2,page);
2893   1              
2894   1              x=392;y=107;
2895   1              DisplayBlock(392,107,392+35,107+23,BLUE,page);
2896   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[10]/100;
2897   1              
2898   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[10]%100)/10;    
2899   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[10]%100)%10;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 48  

2900   1              
2901   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2902   1              {
2903   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2904   2              }
2905   1              else
2906   1              {
2907   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2908   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2909   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2910   2              }
2911   1              
2912   1              
2913   1              x=0;y=142;
2914   1              DisplayChineseString(&x,&y,"入院",2,BLACK,YELLOW,2,page);
2915   1              
2916   1              x=72;y=142;
2917   1              DisplayBlock(72,142,72+35,142+23,BLUE,page);
2918   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[11]/100;
2919   1              
2920   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[11]%100)/10;    
2921   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[11]%100)%10;
2922   1              
2923   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2924   1              {
2925   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2926   2              }
2927   1              else
2928   1              {
2929   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2930   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2931   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2932   2              }
2933   1              
2934   1              
2935   1              
2936   1              x=240;
2937   1              DisplayChineseString(&x,&y,"出院",2,BLACK,YELLOW,2,page);       
2938   1              
2939   1              x=312;y=142;
2940   1              DisplayBlock(312,142,312+35,142+23,BLUE,page);
2941   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[12]/100;
2942   1              
2943   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[12]%100)/10;    
2944   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[12]%100)%10;
2945   1      
2946   1              
2947   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2948   1              {
2949   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2950   2              }
2951   1              else
2952   1              {
2953   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2954   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2955   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2956   2              }
2957   1              
2958   1              
2959   1              x=0;y=175;
2960   1              DisplayChineseString(&x,&y,"转入",2,BLACK,YELLOW,2,page);
2961   1              
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 49  

2962   1              x=72;y=175;
2963   1              DisplayBlock(72,175,72+35,175+23,BLUE,page);
2964   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[13]/100;
2965   1              
2966   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[13]%100)/10;    
2967   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[13]%100)%10;
2968   1              
2969   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2970   1              {
2971   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2972   2              }
2973   1              else
2974   1              {
2975   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2976   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2977   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
2978   2              }
2979   1              
2980   1              
2981   1              x=240;
2982   1              DisplayChineseString(&x,&y,"转出",2,BLACK,YELLOW,2,page);
2983   1              
2984   1              x=312;y=175;
2985   1              DisplayBlock(312,175,312+35,175+23,BLUE,page);
2986   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[14]/100;
2987   1              
2988   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[14]%100)/10;    
2989   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[14]%100)%10;
2990   1              
2991   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
2992   1              {
2993   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
2994   2              }
2995   1              else
2996   1              {
2997   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
2998   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
2999   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3000   2              }
3001   1              
3002   1              
3003   1              
3004   1              x=0;y=209;
3005   1              DisplayChineseString(&x,&y,"一级护理",4,BLACK,PURPLE,2,page);
3006   1              
3007   1              x=120;y=209;
3008   1              DisplayBlock(120,209,120+35,209+23,BLUE,page);
3009   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[15]/100;
3010   1              
3011   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[15]%100)/10;    
3012   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[15]%100)%10;
3013   1              
3014   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3015   1              {
3016   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3017   2              }
3018   1              else
3019   1              {
3020   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3021   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3022   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3023   2              }
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 50  

3024   1              
3025   1              
3026   1              
3027   1              
3028   1              x=240;
3029   1              DisplayChineseString(&x,&y,"吸氧",2,BLACK,YELLOW,2,page);
3030   1              x=312;y=209;
3031   1              DisplayBlock(312,209,312+35,209+23,BLUE,page);
3032   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[16]/100;
3033   1              
3034   1              (unOperData.ASCII_BCD)[1]=(WardDataBuff[16]%100)/10;    
3035   1              (unOperData.ASCII_BCD)[2]=(WardDataBuff[16]%100)%10;
3036   1              
3037   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3038   1              {
3039   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3040   2              }
3041   1              else
3042   1              {
3043   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3044   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3045   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3046   2              }                                               
3047   1      
3048   1              x=48; y=240;
3049   1              DisplayString(&x,&y,"每输入完一个信息请按[确认]键",28,BLUE,WHITE,2,page);
3050   1      
3051   1      
3052   1              Set_VisualPage(page);
3053   1              stLocalControl.byDisplayFace=SEC_INFO_SET_FACE; 
3054   1              stLocalControl.bySecondFlashTime=25;
3055   1      
3056   1      }
3057          
3058          
3059          void ShowCalculateFace(uint8 page)
3060          {
3061   1              uint16 x,y;
3062   1              Lcd_Clear(PURPLE,page);
3063   1      
3064   1      
3065   1              x= 32;
3066   1              y= 60;
3067   1      
3068   1              DisplayChineseString(&x,&y,"请用键盘输入数据",8,GREEN,PURPLE,2,page);
3069   1      
3070   1              DisplayBlock(100,100,480-100,100+31,WHITE,page);
3071   1              
3072   1              Set_VisualPage(page);
3073   1              stLocalControl.byDisplayFace=CALCULATE_FACE;    
3074   1      }
3075          
3076          
3077          
3078          
3079          
3080          
3081          void ShowTouchAdjust(uint8 page)
3082          {
3083   1              Lcd_Clear(BLUE,page);           
3084   1              Display_HLine(15,30,30,WHITE,page);
3085   1              Display_VLine(30,15,30,WHITE,page);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 51  

3086   1              Set_VisualPage(page);
3087   1              stLocalControl.byDisplayFace=TOUCH_ADJUST_FACE;
3088   1      
3089   1      }
3090          
3091          
3092          void StoreSecInfo(uint8 page)   //存储病区动态信息到显示屏的内存
3093          {
3094   1              uint16 x,y;
3095   1      
3096   1              DisplayBlock(64,35,127,66,GREEN,page);
3097   1              if(WardDataBuff[6])
3098   1              {
3099   2                      x=64;
3100   2                      y=37;   
3101   2                      (unOperData.ASCII_BCD)[0] = WardDataBuff[6]/100;
3102   2                      (unOperData.ASCII_BCD)[1] = (WardDataBuff[6]%100)/10;
3103   2                      (unOperData.ASCII_BCD)[2] = (WardDataBuff[6]%100)%10;
3104   2                      if((unOperData.ASCII_BCD)[0])
3105   2                      {
3106   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,BLACK,GREEN,3,page);
3107   3                              
3108   3                      }
3109   2                      else if((unOperData.ASCII_BCD)[1])
3110   2                      {
3111   3                              x +=16;
3112   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,BLACK,GREEN,3,page);
3113   3                              
3114   3                      }
3115   2                      else
3116   2                      {
3117   3                              x +=32;
3118   3                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,BLACK,GREEN,3,page);
3119   3                      }
3120   2              }
3121   1      
3122   1              
3123   1              x=120;y=72;
3124   1              DisplayBlock(120,72,120+35,72+23,BLUE,page);
3125   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[7]/100;
3126   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[7]%100;  //十个位
3127   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3128   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3129   1              
3130   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3131   1              {
3132   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3133   2              }
3134   1              else
3135   1              {
3136   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3137   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3138   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3139   2              }
3140   1      
3141   1      
3142   1      //      x=0;y=107;
3143   1      //      DisplayChineseString(&x,&y,"病危",2,BLACK,YELLOW,2);
3144   1      
3145   1              x=72;y=107;
3146   1              DisplayBlock(72,107,72+35,107+23,BLUE,page);
3147   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[8]/100;
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 52  

3148   1              
3149   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[8]%100;  //十个位
3150   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3151   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3152   1              
3153   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3154   1              {
3155   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3156   2              }
3157   1              else
3158   1              {
3159   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3160   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3161   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3162   2              }
3163   1      
3164   1      
3165   1      //      x=160;
3166   1      //      DisplayChineseString(&x,&y,"床位",2,BLACK,YELLOW,2);
3167   1              
3168   1              x=232;y=107;
3169   1              DisplayBlock(232,107,232+35,107+23,BLUE,page);
3170   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[9]/100;
3171   1              
3172   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[9]%100;  //十个位
3173   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3174   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3175   1              
3176   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3177   1              {
3178   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3179   2              }
3180   1              else
3181   1              {
3182   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3183   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3184   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3185   2              }
3186   1              
3187   1      
3188   1      //      x=320;
3189   1      //      DisplayChineseString(&x,&y,"空床",2,BLACK,YELLOW,2);
3190   1              
3191   1              x=392;y=107;
3192   1              DisplayBlock(392,107,392+35,107+23,BLUE,page);
3193   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[10]/100;
3194   1              
3195   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[10]%100; //十个位
3196   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3197   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3198   1              
3199   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3200   1              {
3201   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3202   2              }
3203   1              else
3204   1              {
3205   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3206   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3207   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3208   2              }
3209   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 53  

3210   1              
3211   1      //      x=0;y=142;
3212   1      //      DisplayChineseString(&x,&y,"入院",2,BLACK,YELLOW,2);
3213   1      
3214   1              x=72;y=142;
3215   1              DisplayBlock(72,142,72+35,142+23,BLUE,page);
3216   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[11]/100;
3217   1              
3218   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[11]%100; //十个位
3219   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3220   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3221   1              
3222   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3223   1              {
3224   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3225   2              }
3226   1              else
3227   1              {
3228   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3229   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3230   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3231   2              }
3232   1      
3233   1              
3234   1      
3235   1      //      x=240;
3236   1      //      DisplayChineseString(&x,&y,"出院",2,BLACK,YELLOW,2);    
3237   1      
3238   1              x=312;y=142;
3239   1              DisplayBlock(312,142,312+35,142+23,BLUE,page);
3240   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[12]/100;
3241   1              
3242   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[12]%100; //十个位
3243   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3244   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3245   1              
3246   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3247   1              {
3248   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3249   2              }
3250   1              else
3251   1              {
3252   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3253   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3254   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3255   2              }
3256   1      
3257   1      
3258   1      
3259   1      /*
3260   1      //      x=0;y=175;
3261   1      //      DisplayChineseString(&x,&y,"转入",2,BLACK,YELLOW,2);
3262   1              
3263   1              x=72;y=175;
3264   1              DisplayBlock(72,175,72+35,175+23,BLUE,page);
3265   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[13]/100;
3266   1              
3267   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[13]%100; //十个位
3268   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3269   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3270   1              
3271   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 54  

3272   1              {
3273   1                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3274   1              }
3275   1              else
3276   1              {
3277   1                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3278   1                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3279   1                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3280   1              }
3281   1      
3282   1      
3283   1      //      x=240;
3284   1      //      DisplayChineseString(&x,&y,"转出",2,BLACK,YELLOW,2);
3285   1              
3286   1              x=312;y=175;
3287   1              DisplayBlock(312,175,312+35,175+23,BLUE,page);
3288   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[14]/100;
3289   1              
3290   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[14]%100; //十个位
3291   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3292   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3293   1              
3294   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3295   1              {
3296   1                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3297   1              }
3298   1              else
3299   1              {
3300   1                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3301   1                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3302   1                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3303   1              }
3304   1      */
3305   1              
3306   1      
3307   1      //      x=0;y=209;
3308   1      //      DisplayChineseString(&x,&y,"一级护理",4,BLACK,PURPLE,2);
3309   1              
3310   1              x=120;y=175;//209;
3311   1              DisplayBlock(120,175,120+35,175+23,BLUE,page);
3312   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[15]/100;
3313   1              
3314   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[15]%100; //十个位
3315   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3316   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3317   1              
3318   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3319   1              {
3320   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3321   2              }
3322   1              else
3323   1              {
3324   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3325   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3326   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3327   2              }
3328   1      
3329   1      
3330   1      
3331   1      
3332   1      //      x=240;
3333   1      //      DisplayChineseString(&x,&y,"吸氧",2,BLACK,YELLOW,2);
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 55  

3334   1              x=312;y=175;//209;
3335   1              DisplayBlock(312,175,312+35,175+23,BLUE,page);
3336   1              (unOperData.ASCII_BCD)[0]=WardDataBuff[16]/100;
3337   1              
3338   1              (unOperData.ASCII_BCD)[1]=WardDataBuff[16]%100; //十个位
3339   1              (unOperData.ASCII_BCD)[2]=(unOperData.ASCII_BCD)[1]%10;
3340   1              (unOperData.ASCII_BCD)[1]=(unOperData.ASCII_BCD)[1]/10;
3341   1              
3342   1              if((unOperData.ASCII_BCD)[0])   //百位不为0
3343   1              {
3344   2                      DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[0]),3,WHITE,BLUE,2,page);
3345   2              }
3346   1              else
3347   1              {
3348   2                      if((unOperData.ASCII_BCD)[1])   //十位不为0
3349   2                              DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[1]),2,WHITE,BLUE,2,page);
3350   2                      else  DisplayDigitString(&x,&y,&((unOperData.ASCII_BCD)[2]),1,WHITE,BLUE,2,page);
3351   2              }                                               
3352   1      
3353   1      
3354   1              if(stLocalControl.byDisplayFace==SEC_INFO_FACE) Set_VisualPage(page);   
3355   1      
3356   1      }
3357          
3358          
3359          /*---------------------------------------------------------------------------
3360          函数原型: void InitSSD1963(void)
3361          参数说明: 无
3362          返 回 值: 无
3363          函数功能: 初始化LCD控制器
3364          ----------------------------------------------------------------------------*/
3365          void InitSSD1963(void)
3366          {
3367   1      //      uint8 i;
3368   1      //      uint16 xdata x,y;
3369   1              //-------------------------
3370   1              SSD1963_TE=1;
3371   1              SSD1963_RD=1;
3372   1              SSD1963_CS=0;
3373   1              //-------------------------
3374   1              SSD1963_RST=1;                     //硬件复位
3375   1              Delayms(50);
3376   1              SSD1963_RST=0;
3377   1              Delayms(200);
3378   1              SSD1963_RST=1;
3379   1              Delayms(50);
3380   1      
3381   1              
3382   1              //设定PLL分频系数
3383   1              //pll: n= 34 m= 3
3384   1              Send_Ssd1963_Command(cmd_set_pll_mn);              
3385   1              Send_Ssd1963_Data(0x3B); //倍频系数为60 晶振为6M 倍频后为360M VCO
3386   1              Send_Ssd1963_Data(0x02); //分频系数为3 工作频率为360M/3=42M
3387   1              Send_Ssd1963_Data(0x54); //固定值       
3388   1      
3389   1              Send_Ssd1963_Command(cmd_set_pll); //允许PLL
3390   1              Send_Ssd1963_Data(0x01);   
3391   1              //延时1Ms
3392   1              Delayms(1);
3393   1              Send_Ssd1963_Command(cmd_set_pll);               //锁定PLL
3394   1              Send_Ssd1963_Data(0x03);
3395   1      
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 56  

3396   1              //software reset                
3397   1      
3398   1              Send_Ssd1963_Command(cmd_soft_reset);
3399   1              
3400   1              //设定像素时钟  
3401   1              //屏幕为4.3时(480x272)，帧频为30FPS 像素时钟为3.9168M   FPR=32596                60FPS时 FPR= 65192
3402   1              Send_Ssd1963_Command(cmd_set_lshift_freq);                      
3403   1              Send_Ssd1963_Data(0x01); //00
3404   1              Send_Ssd1963_Data(0x33); //63
3405   1              Send_Ssd1963_Data(0x32); //32
3406   1              
3407   1              //面板参数设定             
3408   1              Send_Ssd1963_Command(cmd_set_lcd_mode);
3409   1              Send_Ssd1963_Data(0x18);  //显示18bit总线 允许FRC 下降沿及低电平有效
3410   1              Send_Ssd1963_Data(0x20);  //TFT RGB总线 允许控制信号
3411   1              Send_Ssd1963_Data((DISP_HOR_RESOLUTION-1)>>8);
3412   1              Send_Ssd1963_Data(DISP_HOR_RESOLUTION-1);  //水平像素480
3413   1              Send_Ssd1963_Data((DISP_VER_RESOLUTION-1)>>8); 
3414   1              Send_Ssd1963_Data(DISP_VER_RESOLUTION-1);  //Hor 像素272
3415   1              Send_Ssd1963_Data(0x00);  //像素序列RGB
3416   1      
3417   1      
3418   1                      
3419   1              //水平同步信号设定
3420   1              Send_Ssd1963_Command(cmd_set_hori_period);         
3421   1                       
3422   1      #define HT (DISP_HOR_RESOLUTION+DISP_HOR_PULSE_WIDTH+DISP_HOR_BACK_PORCH+DISP_HOR_FRONT_PORCH)
3423   1              Send_Ssd1963_Data((HT-1)>>8);
3424   1              Send_Ssd1963_Data(HT-1); //水平周期 503个时钟周期 (包含显示周期与非显示周期)
3425   1      #define HPS (DISP_HOR_PULSE_WIDTH+DISP_HOR_BACK_PORCH)
3426   1              Send_Ssd1963_Data((HPS-1)>>8); 
3427   1              Send_Ssd1963_Data(HPS-1); //水平非显示周期时钟个数为42
3428   1              Send_Ssd1963_Data(DISP_HOR_PULSE_WIDTH-1); //水平同步信号宽度时钟个数为3
3429   1              Send_Ssd1963_Data(0x00); 
3430   1              Send_Ssd1963_Data(0x00); //水平同步信号开始位置
3431   1              Send_Ssd1963_Data(0x00);
3432   1              
3433   1              //vsync setting
3434   1              Send_Ssd1963_Command(cmd_set_vert_period); 
3435   1              
3436   1      #define VT (DISP_VER_PULSE_WIDTH+DISP_VER_BACK_PORCH+DISP_VER_FRONT_PORCH+DISP_VER_RESOLUTION)    
3437   1              Send_Ssd1963_Data((VT-1)>>8);  //
3438   1              Send_Ssd1963_Data(VT-1);  //preiod width=  295
3439   1      #define VSP (DISP_VER_PULSE_WIDTH+DISP_VER_BACK_PORCH)
3440   1              Send_Ssd1963_Data((VSP-1)>>8);
3441   1              Send_Ssd1963_Data(VSP-1);  //no-preiod width=10
3442   1              Send_Ssd1963_Data(DISP_VER_PULSE_WIDTH-1);      //plus width=3
3443   1              Send_Ssd1963_Data(0x00);
3444   1              Send_Ssd1963_Data(0x00);
3445   1      
3446   1                      //显示像素格式设定
3447   1              Send_Ssd1963_Command(cmd_set_pixel_format);       
3448   1      #ifndef DATA_BUS8
3449   1              Send_Ssd1963_Data(0x50); //16bit
3450   1      #else
                      Send_Ssd1963_Data(RGB_DATA_FORMAT_18); //24bit
              #endif
3453   1      
3454   1              //数据总线接口设定
3455   1              
3456   1              Send_Ssd1963_Command(cmd_set_pixel_data_interface);
3457   1      #ifndef DATA_BUS8            
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 57  

3458   1              Send_Ssd1963_Data(0x03);   //16BIT RGB565
3459   1      #else
                      Send_Ssd1963_Data(0x00);   //8BIT
              #endif
3462   1              
3463   1      #ifdef USE_SSD1963_PWM  
                      Send_Ssd1963_Command(0xbe);//设置PWM 
                      Send_Ssd1963_Data(0X0E);
                      Send_Ssd1963_Data(0XFF);
                      Send_Ssd1963_Data(0X09);
                      Send_Ssd1963_Data(0XFF);
                      Send_Ssd1963_Data(0X00);
                      Send_Ssd1963_Data(0X00); 
                      //(Define the threshold value)
                      Send_Ssd1963_Command(cmd_set_dbc_th); 
                      Send_Ssd1963_Data(0X00);
                      Send_Ssd1963_Data(0X09);
                      Send_Ssd1963_Data(0X90);
                      Send_Ssd1963_Data(0X00);
                      Send_Ssd1963_Data(0X17);
                      Send_Ssd1963_Data(0XE8);
                      Send_Ssd1963_Data(0X00); 
                      Send_Ssd1963_Data(0X39);
                      Send_Ssd1963_Data(0X60); 
                      
                      Send_Ssd1963_Command(cmd_set_dbc_conf);
                      Send_Ssd1963_Data(0x0d);
              #endif
3486   1              Send_Ssd1963_Command(0xB8);                     // Set all GPIOs to output, controlled by host
3487   1              Send_Ssd1963_Data(0x01);                                // Set GPIO0 as output
3488   1              Send_Ssd1963_Data(0x01);                                // GPIO[3:0] used as normal GPIOs
3489   1              Send_Ssd1963_Command(0xBA);                     // Set all GPIOs Value
3490   1              Send_Ssd1963_Data(0x01);                                // Set GPIO0 to high
3491   1      
3492   1              SetScrollArea(0,272,0);
3493   1      
3494   1              //开显示
3495   1              Send_Ssd1963_Command(cmd_set_display_on);
3496   1      
3497   1      
3498   1      
3499   1              Lcd_Clear(BLUE,0);
3500   1              Set_VisualPage(0);
3501   1      
3502   1              P3M0 |= (Bin(0,0,1,0,0,0,0,0));
3503   1              P3M1 &= (~Bin(0,0,1,0,0,0,0,0));
3504   1              BL_SW=1;
3505   1      
3506   1      }
3507          
3508          
3509          
3510          /**********************************************************
3511          *函数名称                       :DispManager    
3512          *函数描述               :按键管理线程
3513          *输入参数               :
3514          *返回值                         :       
3515          *全局变量                       :byMainCmdQ
3516          *调用模块                       :OSQPost
3517          ***********************************************************
3518          *创建人                 :尹运同
3519          *创建日期                       :2008-9-22
C51 COMPILER V9.00   LCD                                                                   02/18/2019 16:52:19 PAGE 58  

3520          ***********************************************************
3521          *修改人                         :
3522          *修改日期               :
3523          *注释                   :
3524          **********************************************************/
3525          void DispManager(void)
3526          { 
3527   1      
3528   1              while(bLanding)
3529   1              {               
3530   2                      WDT_CONTR = 0x3d; 
3531   2                      OSWait(K_TMO, 10);                                      
3532   2              }
3533   1              
3534   1              Lcd_Clear(BLUE,DIS_FRAM_MEM1);
3535   1      
3536   1              
3537   1      
3538   1              Set_VisualPage(DIS_FRAM_MEM0);
3539   1              stLocalControl.byDisplayFace=SEC_INFO_FACE; 
3540   1      
3541   1              
3542   1              while(TRUE)
3543   1              {               
3544   2                      WDT_CONTR = 0x3d; 
3545   2                      OSWait(K_TMO, 10);                                      
3546   2              }       
3547   1      
3548   1      }
3549          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  29419    ----
   CONSTANT SIZE    =    848    ----
   XDATA SIZE       =     30     378
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
