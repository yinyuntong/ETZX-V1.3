A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     1


MACRO ASSEMBLER A51 V8.00d
NO OBJECT MODULE REQUESTED
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ..\Target\OS_CPU_A.ASM SET(SMALL) DEBUG PRINT(.\OS_CPU_A.lst) OBJECT(.\OS_
                      CPU_A.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;******************************************************************************************
                             ***************
                       2     ;**                                            Small RTOS 51 
                       3     ;**                                   The Real-Time Kernel For Keil c51
                       4     ;**
                       5     ;**                                  (c) Copyright 2002-2003, chenmingji
                       6     ;**                                           All Rights Reserved
                       7     ;**
                       8     ;**                                                  V1.12.1
                       9     ;**
                      10     ;**
                      11     ;**--------------------文件信息------------------------------------------------------------
                             ---------------
                      12     ;**文   件   名: OS_CPU_A.ASM
                      13     ;**创   建   人: 陈明计
                      14     ;**版        本: V1.12.1
                      15     ;**最后修改日期:  2002年2月5日
                      16     ;**描　      述:  Small RTOS 51 与CPU(8051系列)相关的汇编程序
                      17     ;**---------------------历史版本信息-------------------------------------------------------
                             ---------------
                      18     ;** 创建人: 陈明计
                      19     ;** 版  本:V0.50
                      20     ;** 日　期: 2002年2月22日
                      21     ;** 描　述: 原始版本
                      22     ;**
                      23     ;**----------------------------------------------------------------------------------------
                             --------------
                      24     ;** 修改人: 陈明计
                      25     ;** 版  本: V1.00
                      26     ;** 日　期: 2002年6月10日
                      27     ;** 描　述: 支持软的非屏蔽中断
                      28     ;**
                      29     ;**----------------------------------------------------------------------------------------
                             --------------
                      30     ;** 修改人: 陈明计
                      31     ;** 版  本: V1.10.3
                      32     ;** 日　期: 2002年9月16日
                      33     ;** 描　述: 修改了LoadCtx代码使之执行更快，代码更小
                      34     ;**         
                      35     ;**----------------------------------------------------------------------------------------
                             --------------
                      36     ;** 修改人: 陈明计
                      37     ;** 版  本: V1.10.4
                      38     ;** 日　期: 2002年10月5日
                      39     ;** 描　述: 将OS_CPU_A.ASM和OS_CPU_A_task16.ASM合并
                      40     ;**
                      41     ;**----------------------------------------------------------------------------------------
                             --------------
                      42     ;** 修改人: 陈明计
                      43     ;** 版  本: V1.11.0
                      44     ;** 日　期: 2002年12月2日
                      45     ;** 描　述: 根据新版本要求使任务堆栈包含Os_Enter_Sum，使优先级最低
                      46     ;**         的任务只保存少量寄存器；增加注释
                      47     ;**----------------------------------------------------------------------------------------
                             --------------
                      48     ;** 修改人: 陈明计
                      49     ;** 版  本: V1.12.0
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     2

                      50     ;** 日　期: 2002年12月30日
                      51     ;** 描　述: 根据新版本要求更改少量代码
                      52     ;**----------------------------------------------------------------------------------------
                             --------------
                      53     ;** 修改人: 陈明计
                      54     ;** 版  本: V1.12.1
                      55     ;** 日　期: 2002年2月5日
                      56     ;** 描　述: 更正LoadCtx中OS_MAX_TASKS为8或16的bug
                      57     ;**---------------------当前版本修订-------------------------------------------------------
                             ----------------
                      58     ;** 修改人:
                      59     ;** 日　期:
                      60     ;** 描　述:
                      61     ;**
                      62     ;**----------------------------------------------------------------------------------------
                             --------------
                      63     ;******************************************************************************************
                             **************/
                      64     ;#include "OS_CPU.H"
                      65     
*** ERROR #A318 IN 66 (..\Target\OS_CPU_A.ASM, LINE 64): can't open file 'OS_CPU.H'
                      66     ;#include "OS_CFG.H"
                      67     
*** ERROR #A318 IN 68 (..\Target\OS_CPU_A.ASM, LINE 65): can't open file 'OS_CFG.H'
                      68     
*** WARNING #A322 IN 69 (..\Target\OS_CPU_A.ASM, LINE 67): 'EN_REENTRANT': unknown identifier
                      69     
                             
                             
                      72     
                      73     
                      74     
                      75     
                      76         NAME    OS_CPU_A_ASM
                      77     
                      78     ?PR?OSCtxSw?OS_CPU_A                     SEGMENT CODE
                      79     ?PR?OSIntCtxSw?OS_CPU_A                  SEGMENT CODE
                      80     ?PR?LoadCtx?OS_CPU_A                     SEGMENT CODE
                      81     ?PR?C_OSCtxSw?OS_CPU_A                   SEGMENT CODE 
                      82     ?PR?_OSTaskStkInit?OS_CPU_A              SEGMENT CODE 
                      83     
                      84     
                      85         EXTRN   CODE (OSMapTbl)
                      86         EXTRN   DATA (OSFastSwap)
                      87         EXTRN   DATA (OSTaskID)
                      88         EXTRN   DATA (OSNextTaskID)
                      89         EXTRN   DATA (OSTsakStackBotton)
                      90         EXTRN   DATA (Os_Enter_Sum)
                      91     IF EN_SP2  <> 0
*** ____________________________^
*** ERROR #A21 IN 91 (..\Target\OS_CPU_A.ASM, LINE 89): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
                      92         EXTRN   IDATA (Sp2)
                             ENDIF
                      94     IF EN_REENTRANT > 0
*** ____________________________^
*** ERROR #A21 IN 94 (..\Target\OS_CPU_A.ASM, LINE 92): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
                      95         EXTRN   DATA (?C_XBP)
                             ENDIF
                      97     
                      98         PUBLIC  _OSTaskStkInit
                      99         PUBLIC  LoadCtx
                     100         PUBLIC  OSIntCtxSw
                     101         PUBLIC  OSCtxSw
                     102         PUBLIC  STACK
                     103         PUBLIC  C_OSCtxSw
                     104     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     3

                     105     ;****************************************************************************************
                     106     ;?STACK SEGMENT IDATA
                     107     
                     108     ?STACK      SEGMENT   IDATA
                     109     
----                 110             RSEG    ?STACK
0000                 111     STACK:                                          ;堆栈
0000                 112             DS  1
                     113     
                     114     ; /*********************************************************************************************************
                     115     ; ** 函数名称: OSTaskStkInit
                     116     ; ** 功能描述: 任务堆栈初始化
                     117     ; ** 输　入: 无
                     118     ; ** 输　出 : 无
                     119     ; ** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     120     ; ** 调用模块: LoadCtx
                     121     ; ** 
                     122     ; ** 作　者: 陈明计
                     123     ; ** 日　期: 2002年2月22日
                     124     ; **-------------------------------------------------------------------------------------------------------
                     125     ; ** 修改人:
                     126     ; ** 日　期:
                     127     ; **-------------------------------------------------------------------------------------------------------
                     128     ; ********************************************************************************************************/
                     129      
----                 130         RSEG  ?PR?_OSTaskStkInit?OS_CPU_A
0000                 131     _OSTaskStkInit:
                     132         USING   0
                     133     ;---- Variable 'cp?147' assigned to Register 'R0' ----
                     134     ;---- Variable 'cp?146' assigned to Register 'R1' ----
                     135     ;---- Variable 'i?145' assigned to Register 'R2' ----
                     136     ;---- Variable 'TaskID?144' assigned to Register 'R3' ----
                     137     ;---- Variable 'ptos?143' assigned to Register 'R4/R5' ----
                     138         
0000 C006            139         PUSH    AR6
0002 C007            140         PUSH    AR7
                     141     ; {
*** WARNING #A322 IN 142 (..\Target\OS_CPU_A.ASM, LINE 140): 'OS_MAX_TASKS': unknown identifier
                     142     
                     143     ;         OSFastSwap[0] &= ~OSMapTbl[TaskID];
0004 EB              144         MOV     A,R3
0005 900000   F      145         MOV     DPTR,#OSMapTbl
0008 93              146         MOVC    A,@A+DPTR
0009 4200     F      147         ORL     OSFastSwap,A
                             
                             
                                 
                                 
                                 
                                 
                                 
                             
                             
                                 
                                 
                                 
                             
                                 
                             
                             
                             
                             
                                 
                                 
                                 
                                 
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     4

                             
                             
                             
                     173     
                     174     ;     if (TaskID < OSRunningTaskID())
000B EB              175         MOV     A,R3
000C C3              176         CLR     C
000D 9500     F      177         SUBB    A,OSTaskID
000F 502E            178         JNC     StkInit5
                     179     ;     {
                     180     ;         i =  OSRunningTaskID() - TaskID;
0011 C3              181         CLR     C
0012 E500     F      182         MOV     A,OSTaskID
0014 9B              183         SUBB    A,R3
0015 FA              184         MOV     R2,A
                     185     ;         cp = (uint8 idata *)(&(OSTsakStackBotton[TaskID + 1]));
0016 7400     F      186         MOV     A,#LOW (OSTsakStackBotton+01H)
0018 2B              187         ADD     A,R3
0019 F9              188         MOV     R1,A
001A                 189     StkInit8:
                     190     ;         do
                     191     ;         {
                     192     ;             *cp += SP_ADD_BYTE;
001A 7403            193         MOV     A,#3
001C 27              194         ADD     A,@R1
001D F7              195         MOV     @R1,A
                     196     ;             cp++;
001E 09              197         INC     R1
                     198     ;         } while (--i != 0);
001F DAF9            199         DJNZ    R2,StkInit8
                     200     
                     201     ;         cp1 = (uint8 idata *)SP;
0021 A881            202         MOV     R0,SP
                     203     ;         SP = SP + SP_ADD_BYTE;
                     204                 ; SOURCE LINE # 172
0023 7403            205         MOV     A,#3
0025 2581            206         ADD     A,SP
0027 F581            207         MOV     SP,A
                     208     ;         i = SP - (uint8)(OSTsakStackBotton[TaskID + 1]) + 1;
0029 7400     F      209         MOV     A,#LOW (OSTsakStackBotton+01H)
002B 2B              210         ADD     A,R3
002C F9              211         MOV     R1,A
002D 8707            212         MOV     AR7,@R1
002F C3              213         CLR     C
0030 E581            214         MOV     A,SP
0032 9F              215         SUBB    A,R7
0033 FA              216         MOV     R2,A
0034 0A              217         INC     R2
                     218     ;         cp = (uint8 idata *)SP;
0035 A981            219         MOV     R1,SP
0037                 220     StkInit11:
                     221     ;         do
                     222     ;         {
                     223     ;             *cp-- = *cp1--;
0037 E6              224         MOV     A,@R0
0038 F7              225         MOV     @R1,A
0039 18              226         DEC     R0
003A 19              227         DEC     R1
                     228     ;         } while (--i != 0);
003B DAFA            229         DJNZ    R2,StkInit11
                     230     ;     }
003D 802C            231         SJMP    StkInit12
003F                 232     StkInit5:
                     233     ;     else
                     234     ;     {
                     235     ;         cp1 = (uint8 idata *)(&(OSTsakStackBotton[OSRunningTaskID() + 1]));
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     5

003F 7400     F      236         MOV     A,#LOW (OSTsakStackBotton+01H)
0041 2500     F      237         ADD     A,OSTaskID
0043 F8              238         MOV     R0,A
                     239     ;         i = TaskID - OSRunningTaskID();
0044 C3              240         CLR     C
0045 EB              241         MOV     A,R3
0046 9500     F      242         SUBB    A,OSTaskID
0048 FA              243         MOV     R2,A
0049                 244     StkInit15:
                     245     ;         do
                     246     ;         {
                     247     ;             *cp1 -= SP_ADD_BYTE;
0049 74FD            248         MOV     A,#(-3)
004B 26              249         ADD     A,@R0
004C F6              250         MOV     @R0,A
                     251     ;             cp1++;
004D 08              252         INC     R0
                     253     ;         } while (--i != 0);
004E DAF9            254         DJNZ    R2,StkInit15
                     255     ;         
                     256     ;         cp = OSTsakStackBotton[OSRunningTaskID() + 1];
0050 7400     F      257         MOV     A,#LOW (OSTsakStackBotton+01H)
0052 2500     F      258         ADD     A,OSTaskID
0054 F8              259         MOV     R0,A
0055 E6              260         MOV     A,@R0
0056 F9              261         MOV     R1,A
                     262     ;         i = OSTsakStackBotton[TaskID] - cp - SP_ADD_BYTE;
0057 E9              263         MOV     A,R1
0058 24FD            264         ADD     A,#(-3)
005A FF              265         MOV     R7,A
                     266     
005B 7400     F      267         MOV     A,#LOW (OSTsakStackBotton)
005D 2B              268         ADD     A,R3
005E F8              269         MOV     R0,A
005F E6              270         MOV     A,@R0
0060 C3              271         CLR     C
0061 9F              272         SUBB    A,R7
0062 FA              273         MOV     R2,A
                     274     ;         cp1 = cp - SP_ADD_BYTE;
0063 A807            275         MOV     R0,AR7
0065                 276     StkInit18:
                     277     ;         do
                     278     ;         {
                     279     ;             *cp1++ = *cp++;
0065 E7              280         MOV     A,@R1
0066 F6              281         MOV     @R0,A
0067 08              282         INC     R0
0068 09              283         INC     R1
                     284     ;         } while (--i != 0);
0069 DAFA            285         DJNZ    R2,StkInit18
                     286     ;     }
006B                 287     StkInit12:
                     288     ;     cp = OSTsakStackBotton[TaskID];
006B 7400     F      289         MOV     A,#LOW (OSTsakStackBotton)
006D 2B              290         ADD     A,R3
006E F8              291         MOV     R0,A
006F E6              292         MOV     A,@R0
0070 F9              293         MOV     R1,A
                     294     ;     *cp++ = (uint16)task % 256;
0071 D0E0            295         pop     ACC
0073 F7              296         MOV     @R1,A
0074 09              297         INC     R1
                     298     ;     *cp++ = (uint16)task / 256;
0075 D0E0            299         pop     ACC
0077 F7              300         MOV     @R1,A
0078 09              301         INC     R1
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     6

*** WARNING #A322 IN 302 (..\Target\OS_CPU_A.ASM, LINE 300): 'EN_REENTRANT': unknown identifier
                     302     
                             
                                 
                                 
                             
                                 
                                 
                             
                     310     ;     *cp = 0;
0079 E4              311         CLR     A
007A F7              312         MOV     @R1,A
                     313     ; }
007B 22              314         RET     
                     315     
                     316     ;/*********************************************************************************************************
                     317     ;** 函数名称: LoadCtx
                     318     ;** 功能描述: 任务环境恢复函数
                     319     ;** 输　入: OSTaskID,OSFastSwap
                     320     ;** 输　出 : 无
                     321     ;** 全局变量: 无
                     322     ;** 调用模块: 无
                     323     ;** 
                     324     ;** 作　者: 陈明计
                     325     ;** 日　期: 2002年2月22日
                     326     ;**-------------------------------------------------------------------------------------------------------
                     327     ;** 修　改: 陈明计
                     328     ;** 日　期: 2002年12月2日
                     329     ;**-------------------------------------------------------------------------------------------------------
                     330     ;** 修　改: 陈明计
                     331     ;** 日　期: 2003年2月5日
                     332     ;**-------------------------------------------------------------------------------------------------------
                     333     ;** 修　改:
                     334     ;** 日　期:
                     335     ;**-------------------------------------------------------------------------------------------------------
                     336     ;********************************************************************************************************/
                     337     
----                 338         RSEG  ?PR?LoadCtx?OS_CPU_A
0000                 339     LoadCtx:
                     340         USING   0
                     341        
0000 D000     F      342         POP     Os_Enter_Sum            ;恢复关中断计数器
                     343     
*** WARNING #A322 IN 344 (..\Target\OS_CPU_A.ASM, LINE 342): 'EN_REENTRANT': unknown identifier
                     344     
                                 
                                 
                             
                     348     
                     349                                         ;判断是否需要恢复所有寄存器
0002 E500     F      350         MOV     A,OSTaskID
0004                 351         CJNE    A,#OS_MAX_TASKS,LoadCtx_0
*** ________________________________________^
*** ERROR #A45 IN 351 (..\Target\OS_CPU_A.ASM, LINE 349): UNDEFINED SYMBOL (PASS-2)
0007 8022            352         SJMP    LoadCtx_2
0009                 353     LoadCtx_0:
0009 900000   F      354         MOV     DPTR,#OSMapTbl
*** WARNING #A322 IN 355 (..\Target\OS_CPU_A.ASM, LINE 353): 'OS_MAX_TASKS': unknown identifier
                     355     
000C 93              356         MOVC    A,@A+DPTR
000D 5500     F      357         ANL     A,OSFastSwap
                             
                                 
                                 
                                 
                                 
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     7

                                 
                                 
                             
                                 
                                 
                             
000F 701A            369         JNZ     LoadCtx_2
                     370                                         ;恢复寄存器
0011 D007            371         POP     7
0013 D006            372         POP     6
0015 D005            373         POP     5
0017 D004            374         POP     4
0019 D003            375         POP     3
001B D002            376         POP     2
001D D001            377         POP     1
001F D000            378         POP     0
0021 D0D0            379         POP     PSW
0023 D082            380         POP     DPL
0025 D083            381         POP     DPH
0027 D0F0            382         POP     B
0029 D0E0            383         POP     ACC
002B                 384     LoadCtx_2:
                     385                                         ;判断是否需要开中断
002B 0500     F      386         INC     Os_Enter_Sum
002D D50000   F      387         djnz    Os_Enter_Sum,LoadCtx_3
                     388         SET_EA                          ;开中断
*** _____________________________^
*** ERROR #A9 IN 388 (..\Target\OS_CPU_A.ASM, LINE 386): SYNTAX ERROR
0030                 389     LoadCtx_3:
0030 22              390         RET
                     391     
                     392     
                     393     ;/*********************************************************************************************************
                     394     ;** 函数名称: OSCtxSw
                     395     ;** 功能描述: 任务主动放弃CPU环境保存函数
                     396     ;** 输　入: OSTaskID
                     397     ;** 输　出 : 无
                     398     ;** 全局变量: OSFastSwap
                     399     ;** 调用模块: 无
                     400     ;** 
                     401     ;** 作　者: 陈明计
                     402     ;** 日　期: 2002年2月22日
                     403     ;**-------------------------------------------------------------------------------------------------------
                     404     ;** 修　改:
                     405     ;** 日　期:
                     406     ;**-------------------------------------------------------------------------------------------------------
                     407     ;********************************************************************************************************/
----                 408         RSEG  ?PR?OSCtxSw?OS_CPU_A
0000                 409     OSCtxSw:
                     410         USING   0
                     411     
*** WARNING #A322 IN 412 (..\Target\OS_CPU_A.ASM, LINE 410): 'EN_REENTRANT': unknown identifier
                     412     
                                 
                                 
                             
                     416     
0000 C000     F      417         PUSH    Os_Enter_Sum            ;保存关中断计数器
                     418                                         ;设置标志：任务再次恢复运行时不必恢复所有寄存器
0002 900000   F      419         MOV     DPTR,#OSMapTbl
0005 E500     F      420         MOV     A,OSTaskID
*** WARNING #A322 IN 421 (..\Target\OS_CPU_A.ASM, LINE 419): 'OS_MAX_TASKS': unknown identifier
                     421     
0007 93              422         MOVC    A,@A+DPTR
0008 4200     F      423         ORL     OSFastSwap,A
                             
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     8

                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
                                 
                             
000A 020000   F      436         LJMP    C_OSCtxSw
                     437     ;****************************************************************************************
                     438     ;/*********************************************************************************************************
                     439     ;** 函数名称: C_OSCtxSw
                     440     ;** 功能描述: 堆栈处理函数
                     441     ;** 输　入: 无
                     442     ;** 输　出 : 无
                     443     ;** 全局变量: OSTaskID,OSTsakStackBotton,SP
                     444     ;** 调用模块: LoadCtx
                     445     ;** 
                     446     ;** 作　者: 陈明计
                     447     ;** 日　期: 2002年2月22日
                     448     ;**-------------------------------------------------------------------------------------------------------
                     449     ;** 修　改: 陈明计
                     450     ;** 日　期: 2002年12月2日
                     451     ;**-------------------------------------------------------------------------------------------------------
                     452     ;** 修　改:
                     453     ;** 日　期:
                     454     ;**-------------------------------------------------------------------------------------------------------
                     455     ;********************************************************************************************************/
----                 456         RSEG  ?PR?C_OSCtxSw?OS_CPU_A
0000                 457     C_OSCtxSw:
                     458     
0000 AA81            459         mov     r2,sp
                     460         
                     461     ;     cp1 = (unsigned char idata *)SP +1;
0002 A881            462         MOV     R0,SP
                     463     
                     464     IF EN_SP2  <> 0
*** ____________________________^
*** ERROR #A21 IN 464 (..\Target\OS_CPU_A.ASM, LINE 462): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
                     465         mov     sp,#(Sp2-1)             ;堆栈指向临时空间，允许“软非屏蔽中断”
                             ENDIF
                     467     
0004 08              468         INC     R0
                     469     ;     temp = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0005 7400     F      470         MOV     A,#LOW (OSTsakStackBotton+01H)
0007 2500     F      471         ADD     A,OSNextTaskID
0009 F9              472         MOV     R1,A
000A E7              473         MOV     A,@R1
000B FF              474         MOV     R7,A
                     475     ;     cp2 = OSTsakStackBotton[OSTaskID+1];
000C 7400     F      476         MOV     A,#LOW (OSTsakStackBotton+01H)
000E 2500     F      477         ADD     A,OSTaskID
0010 F9              478         MOV     R1,A
0011 E7              479         MOV     A,@R1
0012 F9              480         MOV     R1,A
                     481     ;     if( OSNextTaskID > OSTaskID)
0013 E500     F      482         MOV     A,OSNextTaskID
0015 D3              483         SETB    C
0016 9500     F      484         SUBB    A,OSTaskID
0018 4033            485         JC      ?C0001
                     486     ;     {
                     487     ;         while(cp2 != (unsigned char idata *)temp)
                     488     ;         {
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE     9

                     489     ;             *cp1++ = *cp2++;
                     490     ;         }
001A EF              491         MOV     A,R7
001B C3              492         CLR     C
001C 99              493         SUBB    A,R1
001D FE              494         MOV     R6,A
001E                 495     ?C0002:
001E E7              496         MOV     A,@R1
001F F6              497         MOV     @R0,A
0020 08              498         INC     R0
0021 09              499         INC     R1
0022 DEFA            500         DJNZ    R6,?C0002
0024                 501     ?C0003:
                     502     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
0024 7400     F      503         MOV     A,#LOW (OSTsakStackBotton+1)
0026 2500     F      504         ADD     A,OSTaskID
0028 F9              505         MOV     R1,A
0029 E7              506         MOV     A,@R1
002A D3              507         SETB    C
                     508         ;SUBB    A,sp
002B 9A              509         SUBB    A,r2
002C FF              510         MOV     R7,A
                     511     ;         SP = (unsigned char )cp1 - 1;
002D 18              512         DEC     R0;
002E 8881            513         MOV     SP,R0
                     514     ;         for(i = OSTaskID+1;i < OSNextTaskID+1; i++)
                     515     ;         {
                     516     ;             OSTsakStackBotton[i] -= temp;
                     517     ;         }
0030 E500     F      518         MOV     A,OSNextTaskID
0032 C3              519         CLR     C
0033 9500     F      520         SUBB    A,OSTaskID
0035 FE              521         MOV     R6,A
0036 600F            522         JZ      ?C0005
                     523     
0038 7400     F      524         MOV     A,#LOW (OSTsakStackBotton)
003A 2500     F      525         ADD     A,OSTaskID
003C F9              526         MOV     R1,A    
003D EF              527         MOV     A,R7
003E F4              528         CPL     A
003F 04              529         INC     A
0040 FF              530         MOV     R7,A
0041                 531     ?C0004:
0041 09              532         INC     R1
0042 EF              533         MOV     A,R7
0043 27              534         ADD     A,@R1    
0044 F7              535         MOV     @R1,A
0045 DEFA            536         DJNZ    R6,?C0004
0047                 537     ?C0005:
                     538     ;         OSTaskID = OSNextTaskID;
0047 850000   F      539         MOV     OSTaskID,OSNextTaskID
                     540     ;         LoadCtx();    
004A 020000   F      541         LJMP    LoadCtx
                     542     ;     }
004D                 543     ?C0001:
                     544     ; 
                     545     ;     if( OSNextTaskID != OSTaskID)
004D E500     F      546         MOV     A,OSNextTaskID
004F 6500     F      547         XRL     A,OSTaskID
0051 6036            548         JZ      ?C000r
                     549     ;     {
                     550     ;          cp2--;
                     551     ;          cp1--;
                     552     ;         while(cp2 != (unsigned char idata *)temp)
                     553     ;         {
                     554     ;             *cp2-- = *cp1--;
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE    10

                     555     ;         }
                     556         ;MOV     A,R7
                     557         ;CLR     C
                     558         ;SUBB    A,R1
                     559         ;MOV     R6,A
0053 E8              560         mov     a,r0
0054 C3              561         clr     c
0055 9F              562         subb    a,r7
0056 FE              563         mov     r6,a
0057                 564     ?C0008:
0057 18              565         DEC     R0
0058 19              566         DEC     R1
0059 E6              567         MOV     A,@R0
005A F7              568         MOV     @R1,A
005B DEFA            569         DJNZ    R6,?C0008
005D                 570     ?C0009:
                     571     ;         temp = OSTsakStackBotton[OSTaskID+1] - (unsigned char idata *)SP-1;
005D 7400     F      572         MOV     A,#LOW (OSTsakStackBotton+01H)
005F 2500     F      573         ADD     A,OSTaskID
0061 F9              574         MOV     R1,A
0062 E7              575         MOV     A,@R1
0063 D3              576         SETB    C
                     577         ;SUBB    A,SP
0064 9A              578         SUBB    A,r2
0065 FF              579         MOV     R7,A
                     580     ;         SP = (unsigned char )OSTsakStackBotton[OSNextTaskID+1];
0066 7400     F      581         MOV     A,#LOW (OSTsakStackBotton+01H)
0068 2500     F      582         ADD     A,OSNextTaskID
006A F9              583         MOV     R1,A
006B E7              584         MOV     A,@R1
006C F581            585         MOV     SP,A
                     586     ;         for(i = OSNextTaskID+1;i < OSTaskID+1; i++)
                     587     ;         {
                     588     ;             OSTsakStackBotton[i] += temp;
                     589     ;         }
                     590     
006E E500     F      591         MOV     A,OSTaskID
0070 C3              592         CLR     C
0071 9500     F      593         SUBB    A,OSNextTaskID
0073 600C            594         JZ      ?C0011
                     595     
0075 FE              596         MOV     R6,A
0076 7400     F      597         MOV     A,#LOW (OSTsakStackBotton)
0078 2500     F      598         ADD     A,OSNextTaskID
007A F9              599         MOV     R1,A    
007B                 600     ?C0010:
007B 09              601         INC     R1
007C EF              602         MOV     A,R7
007D 27              603         ADD     A,@R1    
007E F7              604         MOV     @R1,A
007F DEFA            605         DJNZ    R6,?C0010
                     606     
0081                 607     ?C0011:
                     608     ;         OSTaskID = OSNextTaskID;        
0081 850000   F      609         MOV     OSTaskID,OSNextTaskID
                     610     ;         SP--;
0084 1581            611         DEC     SP
                     612     ;     }
0086                 613     ?C0007:
                     614     ;     LoadCtx();
0086 020000   F      615         LJMP    LoadCtx
0089                 616     ?C000r:
                     617     IF EN_SP2  <> 0
*** ____________________________^
*** ERROR #A21 IN 617 (..\Target\OS_CPU_A.ASM, LINE 615): EXPRESSION WITH FORWARD REFERENCE NOT PERMITTED
                     618         mov     SP,r2
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE    11

                             ENDIF
0089 020000   F      620         LJMP    LoadCtx
                     621     ;****************************************************************************************
                     622     ;/*********************************************************************************************************
                     623     ;** 函数名称: OSIntCtxSw
                     624     ;** 功能描述: 中断使任务放弃CPU环境保存函数
                     625     ;** 输　入: OSTaskID
                     626     ;** 输　出 : 无
                     627     ;** 全局变量: OSFastSwap
                     628     ;** 调用模块: 无
                     629     ;** 
                     630     ;** 作　者: 陈明计
                     631     ;** 日　期: 2002年2月22日
                     632     ;**-------------------------------------------------------------------------------------------------------
                     633     ;** 修　改: 陈明计
                     634     ;** 日　期: 2002年12月2日
                     635     ;**-------------------------------------------------------------------------------------------------------
                     636     ;** 修　改:
                     637     ;** 日　期:
                     638     ;**-------------------------------------------------------------------------------------------------------
                     639     ;********************************************************************************************************/
----                 640         RSEG  ?PR?OSIntCtxSw?OS_CPU_A
0000                 641     OSIntCtxSw:
                     642         USING   0
                     643                                             ;是否是优先级最低任务
0000                 644         MOV     A,#OS_MAX_TASKS
*** ________________________________________^
*** ERROR #A45 IN 644 (..\Target\OS_CPU_A.ASM, LINE 642): UNDEFINED SYMBOL (PASS-2)
0002 6500     F      645         XRL     A,OSTaskID
0004 700F            646         JNZ     OSIntCtxSw_0
                     647                                             ;是则不需要保存所有寄存器
                     648     ;SP=SP-13-4                             ;4:两层函数调用堆栈，13：寄存器数目
0006 74EF            649         MOV     A,#(-17)
0008 2581            650         ADD     A,SP
000A F581            651         MOV     SP,A
                     652                                             ;跳转到OSCtxSw，同时通知CPU中断处理完成
000C 7400     F      653         MOV     A, #LOW  OSCtxSw
000E C0E0            654         PUSH    ACC
0010 7400     F      655         MOV     A, #HIGH OSCtxSw
0012 C0E0            656         PUSH    ACC
0014 32              657         RETI
                     658                                             ;需要保存所有寄存器
0015                 659     OSIntCtxSw_0:
                     660     ;SP=SP-4                                ;4:两层函数调用堆栈
0015 74FC            661         MOV     A,#0FCH
0017 2581            662         ADD     A,SP
0019 F581            663         MOV     SP,A
                     664                                             ;设置标志：任务再次恢复运行时需要恢复所有寄存器
001B 900000   F      665         MOV     DPTR,#OSMapTbl
001E E500     F      666         MOV     A,OSTaskID
*** WARNING #A322 IN 667 (..\Target\OS_CPU_A.ASM, LINE 665): 'OS_MAX_TASKS': unknown identifier
                     667     
0020 93              668         MOVC    A,@A+DPTR
0021 F4              669         CPL     A
0022 5200     F      670         ANL     OSFastSwap,A
                             
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                             
                                 
                                 
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE    12

                                 
                                 
                             
                             
                     686     
*** WARNING #A322 IN 687 (..\Target\OS_CPU_A.ASM, LINE 685): 'EN_REENTRANT': unknown identifier
                     687     
                                 
                                 
                             
0024 C000     F      691         PUSH    Os_Enter_Sum            ;保存关中断计数器
                     692                                             ;跳转到堆栈处理，同时通知CPU中断处理完成
0026 7400     F      693         MOV     A, #LOW  C_OSCtxSw
0028 C0E0            694         PUSH    ACC
002A 7400     F      695         MOV     A, #HIGH C_OSCtxSw
002C C0E0            696         PUSH    ACC
002E 32              697         RETI
                     698     
                     699     ;/*********************************************************************************************************
                     700     ;**                            End Of File
                     701     ;********************************************************************************************************/
                     702         END
A51 MACRO ASSEMBLER  OS_CPU_A                                                             08/07/2012 09:07:58 PAGE    13

SYMBOL TABLE LISTING
------ ----- -------


N A M E                      T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . .  C ADDR   004DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0002. . . . . . . . . . .  C ADDR   001EH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0003. . . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0004. . . . . . . . . . .  C ADDR   0041H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0005. . . . . . . . . . .  C ADDR   0047H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0007. . . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0008. . . . . . . . . . .  C ADDR   0057H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0009. . . . . . . . . . .  C ADDR   005DH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C000R. . . . . . . . . . .  C ADDR   0089H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0010. . . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?C0011. . . . . . . . . . .  C ADDR   0081H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
?PR?C_OSCTXSW?OS_CPU_A. . .  C SEG    008CH       REL=UNIT
?PR?LOADCTX?OS_CPU_A. . . .  C SEG    0031H       REL=UNIT
?PR?OSCTXSW?OS_CPU_A. . . .  C SEG    000DH       REL=UNIT
?PR?OSINTCTXSW?OS_CPU_A . .  C SEG    002FH       REL=UNIT
?PR?_OSTASKSTKINIT?OS_CPU_A  C SEG    007CH       REL=UNIT
?STACK. . . . . . . . . . .  I SEG    0001H       REL=UNIT
ACC . . . . . . . . . . . .  D ADDR   00E0H   A   
AR6 . . . . . . . . . . . .  D ADDR   0006H   A   
AR7 . . . . . . . . . . . .  D ADDR   0007H   A   
B . . . . . . . . . . . . .  D ADDR   00F0H   A   
C_OSCTXSW . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?C_OSCTXSW?OS_CPU_A
DPH . . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . . .  D ADDR   0082H   A   
EN_REENTRANT. . . . . . . .    ----   -----       
EN_SP2. . . . . . . . . . .    ----   -----       
LOADCTX . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_0 . . . . . . . . .  C ADDR   0009H   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_2 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?LOADCTX?OS_CPU_A
LOADCTX_3 . . . . . . . . .  C ADDR   0030H   R   SEG=?PR?LOADCTX?OS_CPU_A
OSCTXSW . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSCTXSW?OS_CPU_A
OSFASTSWAP. . . . . . . . .  D ADDR   -----       EXT
OSINTCTXSW. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSINTCTXSW_0. . . . . . . .  C ADDR   0015H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSMAPTBL. . . . . . . . . .  C ADDR   -----       EXT
OSNEXTTASKID. . . . . . . .  D ADDR   -----       EXT
OSTASKID. . . . . . . . . .  D ADDR   -----       EXT
OSTSAKSTACKBOTTON . . . . .  D ADDR   -----       EXT
OS_CPU_A_ASM. . . . . . . .  N NUMB   -----       
OS_ENTER_SUM. . . . . . . .  D ADDR   -----       EXT
OS_MAX_TASKS. . . . . . . .    ----   -----       
PSW . . . . . . . . . . . .  D ADDR   00D0H   A   
SET_EA. . . . . . . . . . .    ----   -----       
SP. . . . . . . . . . . . .  D ADDR   0081H   A   
STACK . . . . . . . . . . .  I ADDR   0000H   R   SEG=?STACK
STKINIT11 . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT12 . . . . . . . . .  C ADDR   006BH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT15 . . . . . . . . .  C ADDR   0049H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT18 . . . . . . . . .  C ADDR   0065H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT5. . . . . . . . . .  C ADDR   003FH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
STKINIT8. . . . . . . . . .  C ADDR   001AH   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A
_OSTASKSTKINIT. . . . . . .  C ADDR   0000H   R   SEG=?PR?_OSTASKSTKINIT?OS_CPU_A


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 18 ERROR(S)
